<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc" kind="struct" language="C++" prot="public">
    <compoundname>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</compoundname>
    <includes refid="eigen_8h" local="no">eigen.h</includes>
    <templateparamlist>
      <param>
        <type>typename Type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a1087714a9028e933bed86175b6569859" prot="public" static="no">
        <type>typename Type::Scalar</type>
        <definition>using pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::Scalar =  typename Type::Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="249" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1af9cf10d3d9ba9d80b1f21a5703044364" prot="public" static="no">
        <type><ref refid="structpybind11_1_1detail_1_1_eigen_props" kindref="compound">EigenProps</ref>&lt; Type &gt;</type>
        <definition>using pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::props =  EigenProps&lt;Type&gt;</definition>
        <argsstring></argsstring>
        <name>props</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="250" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a6cc3dcc69e9aaa8603ef95334bef32d5" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacepybind11_1_1detail_1a3e4f52c827f0391c3ca8166590c559c9" kindref="member">movable_cast_op_type</ref>&lt; T &gt;</type>
        <definition>using pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::cast_op_type =  movable_cast_op_type&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>cast_op_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="345" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a1fffaee0414727b150ce4a5dad29b1a7" prot="private" static="no" mutable="no">
        <type>Type</type>
        <definition>Type pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="348" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a0fde806d1a76c4a725d5110b242a14ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::load</definition>
        <argsstring>(handle src, bool convert)</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>convert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="252" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="252" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a18a3a341b7d12c603177cc41a233ce1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::operator Type *</definition>
        <argsstring>()</argsstring>
        <name>operator Type *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="342" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="342" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a2fd877226c550ebdc9de68383eb2bf73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::operator Type &amp;</definition>
        <argsstring>()</argsstring>
        <name>operator Type &amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="343" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="343" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1aa29133e81d2d6b255640597d82fe9f38" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type></type>
        <definition>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::operator Type &amp;&amp;</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>operator Type &amp;&amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="344" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="344" bodyend="344"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a8a20ec9373cc9167573cffb29be788f2" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::cast_impl</definition>
        <argsstring>(CType *src, return_value_policy policy, handle parent)</argsstring>
        <name>cast_impl</name>
        <param>
          <type>CType *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="290" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="290" bodyend="307"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a60d86c2ea87627c8e76067bd5df1ff33" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::cast</definition>
        <argsstring>(Type &amp;&amp;src, return_value_policy, handle parent)</argsstring>
        <name>cast</name>
        <param>
          <type>Type &amp;&amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="312" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="312" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a7a85859ccd314cdcb9458a8a3d58193d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::cast</definition>
        <argsstring>(const Type &amp;&amp;src, return_value_policy, handle parent)</argsstring>
        <name>cast</name>
        <param>
          <type>const Type &amp;&amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="316" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="316" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a3556f719ef08be9aafebac9f7642d4a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::cast</definition>
        <argsstring>(Type &amp;src, return_value_policy policy, handle parent)</argsstring>
        <name>cast</name>
        <param>
          <type>Type &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="320" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="320" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1aa243a753452e5a95633dc3e06ebfef97" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::cast</definition>
        <argsstring>(const Type &amp;src, return_value_policy policy, handle parent)</argsstring>
        <name>cast</name>
        <param>
          <type>const Type &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="326" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="326" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1ad3a9923154211a6614c8b68b3eef88ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::cast</definition>
        <argsstring>(Type *src, return_value_policy policy, handle parent)</argsstring>
        <name>cast</name>
        <param>
          <type>Type *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="332" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a384d2d390ccaee8d4cdd59d369c2a8c8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::cast</definition>
        <argsstring>(const Type *src, return_value_policy policy, handle parent)</argsstring>
        <name>cast</name>
        <param>
          <type>const Type *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="336" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a96c2a0cb310bc220964b673ac2c725a7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>::<ref refid="classpybind11_1_1detail_1_1descr" kindref="compound">pybind11::detail::descr</ref></type>
        <definition>::pybind11::detail::descr pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="340" column="40" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="340" bodyend="340"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="248" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="248" bodyend="349"/>
    <listofallmembers>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a60d86c2ea87627c8e76067bd5df1ff33" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>cast</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a7a85859ccd314cdcb9458a8a3d58193d" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>cast</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a3556f719ef08be9aafebac9f7642d4a5" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>cast</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1aa243a753452e5a95633dc3e06ebfef97" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>cast</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1ad3a9923154211a6614c8b68b3eef88ab" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>cast</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a384d2d390ccaee8d4cdd59d369c2a8c8" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>cast</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a8a20ec9373cc9167573cffb29be788f2" prot="private" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>cast_impl</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a6cc3dcc69e9aaa8603ef95334bef32d5" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>cast_op_type</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a0fde806d1a76c4a725d5110b242a14ba" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>load</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a96c2a0cb310bc220964b673ac2c725a7" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>name</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a2fd877226c550ebdc9de68383eb2bf73" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>operator Type &amp;</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1aa29133e81d2d6b255640597d82fe9f38" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>operator Type &amp;&amp;</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a18a3a341b7d12c603177cc41a233ce1c" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>operator Type *</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1af9cf10d3d9ba9d80b1f21a5703044364" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>props</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a1087714a9028e933bed86175b6569859" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>Scalar</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__dense__plai0d45ca5c7f7dcd2a08f75eeb37b517bc_1a1fffaee0414727b150ce4a5dad29b1a7" prot="private" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_dense_plain&lt; Type &gt;::value &gt; &gt;</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
