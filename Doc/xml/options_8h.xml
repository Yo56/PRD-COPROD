<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="options_8h" kind="file" language="C++">
    <compoundname>options.h</compoundname>
    <includes refid="common_8h" local="yes">common.h</includes>
    <includedby refid="pybind11_8h" local="yes">C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h</includedby>
    <incdepgraph>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="1">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="12">
        <label>unordered_set</label>
      </node>
      <node id="4">
        <label>frameobject.h</label>
      </node>
      <node id="3">
        <label>Python.h</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="5">
        <label>pythread.h</label>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="13">
        <label>unordered_map</label>
      </node>
      <node id="2">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>type_traits</label>
      </node>
      <node id="8">
        <label>forward_list</label>
      </node>
      <node id="7">
        <label>cstring</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="15">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/embed.h</label>
        <link refid="embed_8h"/>
      </node>
      <node id="2">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h</label>
        <link refid="pybind11_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/numpy.h</label>
        <link refid="numpy_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h</label>
        <link refid="stl_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/options.h</label>
        <link refid="options_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/python/python_streambuf.hpp</label>
        <link refid="python__streambuf_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h</label>
        <link refid="functional_8h"/>
      </node>
      <node id="13">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl_bind.h</label>
        <link refid="stl__bind_8h"/>
      </node>
      <node id="4">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/python/xlntpyarrow.lib.cpp</label>
        <link refid="xlntpyarrow_8lib_8cpp"/>
      </node>
      <node id="5">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/chrono.h</label>
        <link refid="chrono_8h"/>
      </node>
      <node id="12">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/operators.h</label>
        <link refid="operators_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eval.h</label>
        <link refid="eval_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h</label>
        <link refid="eigen_8h"/>
      </node>
      <node id="6">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/complex.h</label>
        <link refid="complex_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classpybind11_1_1options" prot="public">pybind11::options</innerclass>
    <innerclass refid="structpybind11_1_1options_1_1state" prot="private">pybind11::options::state</innerclass>
    <innernamespace refid="namespacepybind11">pybind11</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>pybind11/options.h:<sp/>global<sp/>settings<sp/>that<sp/>are<sp/>configurable<sp/>at<sp/>runtime.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2016<sp/>Wenzel<sp/>Jakob<sp/>&lt;wenzel.jakob@epfl.ch&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved.<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="common_8h_1a577cd817cb71b655998cad4387cdaeba" kindref="member">NAMESPACE_BEGIN</ref>(<ref refid="namespacepybind11" kindref="compound">pybind11</ref>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="classpybind11_1_1options" refkind="compound"><highlight class="normal">class<sp/><ref refid="classpybind11_1_1options" kindref="compound">options</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>RAII<sp/>constructor,<sp/>which<sp/>leaves<sp/>settings<sp/>as<sp/>they<sp/>currently<sp/>are.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classpybind11_1_1options_1af1301acffafff663e11d607787d28c4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpybind11_1_1options_1af1301acffafff663e11d607787d28c4a" kindref="member">options</ref>()<sp/>:<sp/>previous_state(global_state())<sp/>{}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Class<sp/>is<sp/>non-copyable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classpybind11_1_1options_1a867842cacfc0ac028ce258eb764f93a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpybind11_1_1options_1a867842cacfc0ac028ce258eb764f93a6" kindref="member">options</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpybind11_1_1options" kindref="compound">options</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24" refid="classpybind11_1_1options_1a0dd3f280c29be63d9396eb96e691331a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpybind11_1_1options" kindref="compound">options</ref>&amp;<sp/><ref refid="classpybind11_1_1options_1a0dd3f280c29be63d9396eb96e691331a" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classpybind11_1_1options" kindref="compound">options</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Destructor,<sp/>which<sp/>restores<sp/>settings<sp/>that<sp/>were<sp/>in<sp/>effect<sp/>before.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classpybind11_1_1options_1a5729c03a7b48a68e5017e6a5ef7b0b60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpybind11_1_1options_1a5729c03a7b48a68e5017e6a5ef7b0b60" kindref="member">~options</ref>()<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_state()<sp/>=<sp/>previous_state;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setter<sp/>methods<sp/>(affect<sp/>the<sp/>global<sp/>state):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classpybind11_1_1options_1a34e59ee51b2c16899a642a09aa4cae49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpybind11_1_1options" kindref="compound">options</ref>&amp;<sp/><ref refid="classpybind11_1_1options_1a34e59ee51b2c16899a642a09aa4cae49" kindref="member">disable_user_defined_docstrings</ref>()<sp/>&amp;<sp/>{<sp/>global_state().<ref refid="classpybind11_1_1options_1a2b4787acba371eb678d2dfeccf78e27e" kindref="member">show_user_defined_docstrings</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classpybind11_1_1options_1a777f2d8a099e2fd87e56b5a18bf0fcc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpybind11_1_1options" kindref="compound">options</ref>&amp;<sp/><ref refid="classpybind11_1_1options_1a777f2d8a099e2fd87e56b5a18bf0fcc6" kindref="member">enable_user_defined_docstrings</ref>()<sp/>&amp;<sp/>{<sp/>global_state().<ref refid="classpybind11_1_1options_1a2b4787acba371eb678d2dfeccf78e27e" kindref="member">show_user_defined_docstrings</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classpybind11_1_1options_1a47d3d03d38a491dc2181075239fdd3b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpybind11_1_1options" kindref="compound">options</ref>&amp;<sp/><ref refid="classpybind11_1_1options_1a47d3d03d38a491dc2181075239fdd3b6" kindref="member">disable_function_signatures</ref>()<sp/>&amp;<sp/>{<sp/>global_state().<ref refid="classpybind11_1_1options_1a0804ec9886f935ef5ef32e8caaf50dd5" kindref="member">show_function_signatures</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classpybind11_1_1options_1adb87212e683733f61fa6973edc356f0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classpybind11_1_1options" kindref="compound">options</ref>&amp;<sp/><ref refid="classpybind11_1_1options_1adb87212e683733f61fa6973edc356f0b" kindref="member">enable_function_signatures</ref>()<sp/>&amp;<sp/>{<sp/>global_state().<ref refid="classpybind11_1_1options_1a0804ec9886f935ef5ef32e8caaf50dd5" kindref="member">show_function_signatures</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Getter<sp/>methods<sp/>(return<sp/>the<sp/>global<sp/>state):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classpybind11_1_1options_1a2b4787acba371eb678d2dfeccf78e27e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classpybind11_1_1options_1a2b4787acba371eb678d2dfeccf78e27e" kindref="member">show_user_defined_docstrings</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>global_state().show_user_defined_docstrings;<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classpybind11_1_1options_1a0804ec9886f935ef5ef32e8caaf50dd5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classpybind11_1_1options_1a0804ec9886f935ef5ef32e8caaf50dd5" kindref="member">show_function_signatures</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>global_state().show_function_signatures;<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>type<sp/>is<sp/>not<sp/>meant<sp/>to<sp/>be<sp/>allocated<sp/>on<sp/>the<sp/>heap.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classpybind11_1_1options_1a64b94ef3b745c64eb76f4282c5c7bb72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(<ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref>)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="string__to__double_8cpp_1af63a1df0d582366f7a03c46143e3ae0e" kindref="member">state</ref><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show_user_defined_docstrings<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Include<sp/>user-supplied<sp/>texts<sp/>in<sp/>docstrings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>show_function_signatures<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//&lt;<sp/>Include<sp/>auto-generated<sp/>function<sp/>signatures<sp/>in<sp/>docstrings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="string__to__double_8cpp_1af63a1df0d582366f7a03c46143e3ae0e" kindref="member">state</ref><sp/>&amp;global_state()<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="string__to__double_8cpp_1af63a1df0d582366f7a03c46143e3ae0e" kindref="member">state</ref><sp/>instance;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instance;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="string__to__double_8cpp_1af63a1df0d582366f7a03c46143e3ae0e" kindref="member">state</ref><sp/>previous_state;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="common_8h_1a12bb24ea980ca8fb1f46b1992bc9c83a" kindref="member">NAMESPACE_END</ref>(<ref refid="namespacepybind11" kindref="compound">pybind11</ref>)</highlight></codeline>
    </programlisting>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/options.h"/>
  </compounddef>
</doxygen>
