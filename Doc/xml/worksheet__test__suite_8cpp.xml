<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="worksheet__test__suite_8cpp" kind="file" language="C++">
    <compoundname>worksheet_test_suite.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="cell_8hpp" local="no">xlnt/cell/cell.hpp</includes>
    <includes refid="hyperlink_8hpp" local="no">xlnt/cell/hyperlink.hpp</includes>
    <includes refid="workbook_8hpp" local="no">xlnt/workbook/workbook.hpp</includes>
    <includes refid="column__properties_8hpp" local="no">xlnt/worksheet/column_properties.hpp</includes>
    <includes refid="header__footer_8hpp" local="no">xlnt/worksheet/header_footer.hpp</includes>
    <includes refid="range_8hpp" local="no">xlnt/worksheet/range.hpp</includes>
    <includes refid="row__properties_8hpp" local="no">xlnt/worksheet/row_properties.hpp</includes>
    <includes refid="worksheet_8hpp" local="no">xlnt/worksheet/worksheet.hpp</includes>
    <includes refid="test__suite_8hpp" local="no">helpers/test_suite.hpp</includes>
    <incdepgraph>
      <node id="20">
        <label>xlnt/utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>xlnt/worksheet/column_properties.hpp</label>
        <link refid="column__properties_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>xlnt/xlnt_config.hpp</label>
        <link refid="xlnt__config_8hpp"/>
      </node>
      <node id="71">
        <label>helpers/xml_helper.hpp</label>
        <link refid="xml__helper_8hpp"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>functional</label>
      </node>
      <node id="51">
        <label>xlnt/worksheet/major_order.hpp</label>
        <link refid="major__order_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>limits</label>
      </node>
      <node id="81">
        <label>libstudxml/details/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>xlnt/worksheet/phonetic_pr.hpp</label>
        <link refid="phonetic__pr_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>iterator</label>
      </node>
      <node id="87">
        <label>libstudxml/version.hxx</label>
        <link refid="version_8hxx"/>
      </node>
      <node id="11">
        <label>cstdint</label>
      </node>
      <node id="53">
        <label>xlnt/worksheet/worksheet.hpp</label>
        <link refid="worksheet_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>xlnt/cell/phonetic_run.hpp</label>
        <link refid="phonetic__run_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>xlnt/worksheet/cell_vector.hpp</label>
        <link refid="cell__vector_8hpp"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>xlnt/utils/numeric.hpp</label>
        <link refid="numeric_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>xlnt/cell/cell_type.hpp</label>
        <link refid="cell__type_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>stdlib.h</label>
      </node>
      <node id="65">
        <label>helpers/assertions.hpp</label>
        <link refid="assertions_8hpp"/>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>libstudxml/details/expat/expat.h</label>
        <link refid="expat_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>xlnt/worksheet/range_iterator.hpp</label>
        <link refid="range__iterator_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>cmath</label>
      </node>
      <node id="23">
        <label>cassert</label>
      </node>
      <node id="85">
        <label>libstudxml/details/expat/expat_external.h</label>
        <link refid="expat__external_8h"/>
      </node>
      <node id="21">
        <label>stdexcept</label>
      </node>
      <node id="9">
        <label>xlnt/cell/index_types.hpp</label>
        <link refid="index__types_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string</label>
      </node>
      <node id="34">
        <label>map</label>
      </node>
      <node id="89">
        <label>libstudxml/details/export.hxx</label>
        <link refid="export_8hxx"/>
      </node>
      <node id="39">
        <label>xlnt/worksheet/range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>xlnt/cell/rich_text.hpp</label>
        <link refid="rich__text_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>libstudxml/forward.hxx</label>
        <link refid="forward_8hxx"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>xlnt/styles/border.hpp</label>
        <link refid="border_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>unordered_set</label>
      </node>
      <node id="76">
        <label>libstudxml/details/pre.hxx</label>
        <link refid="pre_8hxx"/>
      </node>
      <node id="88">
        <label>libstudxml/qname.hxx</label>
        <link refid="qname_8hxx"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>xlnt/styles/color.hpp</label>
        <link refid="color_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>libstudxml/content.hxx</label>
        <link refid="content_8hxx"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>xlnt/worksheet/header_footer.hpp</label>
        <link refid="header__footer_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>detail/external/include_libstudxml.hpp</label>
        <link refid="include__libstudxml_8hpp"/>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>exception</label>
      </node>
      <node id="97">
        <label>stddef.h</label>
      </node>
      <node id="68">
        <label>fstream</label>
      </node>
      <node id="29">
        <label>ostream</label>
      </node>
      <node id="19">
        <label>xlnt/utils/optional.hpp</label>
        <link refid="optional_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>libstudxml/serializer.hxx</label>
        <link refid="serializer_8hxx"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>xlnt/worksheet/page_margins.hpp</label>
        <link refid="page__margins_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>xlnt/workbook/workbook.hpp</label>
        <link refid="workbook_8hpp"/>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>xlnt/worksheet/pane.hpp</label>
        <link refid="pane_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>xlnt/worksheet/selection.hpp</label>
        <link refid="selection_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>xlnt/packaging/uri.hpp</label>
        <link refid="uri_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>xlnt/cell/cell.hpp</label>
        <link refid="cell_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="92">
        <label>libstudxml/value-traits.hxx</label>
        <link refid="value-traits_8hxx"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>tuple</label>
      </node>
      <node id="30">
        <label>xlnt/cell/hyperlink.hpp</label>
        <link refid="hyperlink_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>xlnt/utils/scoped_enum_hash.hpp</label>
        <link refid="scoped__enum__hash_8hpp"/>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>sys/param.h</label>
      </node>
      <node id="13">
        <label>vector</label>
      </node>
      <node id="43">
        <label>xlnt/styles/conditional_format.hpp</label>
        <link refid="conditional__format_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>xlnt/worksheet/page_setup.hpp</label>
        <link refid="page__setup_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/tests/worksheet/worksheet_test_suite.cpp</label>
        <link refid="worksheet__test__suite_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>libstudxml/details/post.hxx</label>
        <link refid="post_8hxx"/>
      </node>
      <node id="35">
        <label>utility</label>
      </node>
      <node id="96">
        <label>libstudxml/details/genx/genx.h</label>
        <link refid="genx_8h"/>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>helpers/path_helper.hpp</label>
        <link refid="path__helper_8hpp"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>array</label>
      </node>
      <node id="98">
        <label>libstudxml/serializer.ixx</label>
        <link refid="serializer_8ixx"/>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>sstream</label>
      </node>
      <node id="80">
        <label>libstudxml/details/config.hxx</label>
        <link refid="config_8hxx"/>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="100">
        <label>detail/serialization/zstream.hpp</label>
        <link refid="zstream_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>libstudxml/parser.ixx</label>
        <link refid="parser_8ixx"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>xlnt/styles/font.hpp</label>
        <link refid="font_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>libstudxml/parser.txx</label>
      </node>
      <node id="79">
        <label>iosfwd</label>
      </node>
      <node id="93">
        <label>libstudxml/value-traits.txx</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="63">
        <label>xlnt/worksheet/row_properties.hpp</label>
        <link refid="row__properties_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>cstddef</label>
      </node>
      <node id="15">
        <label>xlnt/cell/rich_text_run.hpp</label>
        <link refid="rich__text__run_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>unordered_map</label>
      </node>
      <node id="46">
        <label>xlnt/styles/protection.hpp</label>
        <link refid="protection_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>detail/serialization/vector_streambuf.hpp</label>
        <link refid="vector__streambuf_8hpp"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>xlnt/styles/fill.hpp</label>
        <link refid="fill_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>xlnt/worksheet/range_reference.hpp</label>
        <link refid="range__reference_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>chrono</label>
      </node>
      <node id="78">
        <label>libstudxml/parser.hxx</label>
        <link refid="parser_8hxx"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>xlnt/styles/number_format.hpp</label>
        <link refid="number__format_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>helpers/timing.hpp</label>
        <link refid="timing_8hpp"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>xlnt/styles/alignment.hpp</label>
        <link refid="alignment_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>xlnt/cell/cell_reference.hpp</label>
        <link refid="cell__reference_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>xlnt/worksheet/sheet_view.hpp</label>
        <link refid="sheet__view_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>type_traits</label>
      </node>
      <node id="54">
        <label>xlnt/packaging/relationship.hpp</label>
        <link refid="relationship_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>libstudxml/exception.hxx</label>
        <link refid="exception_8hxx"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>algorithm</label>
      </node>
      <node id="73">
        <label>xlnt/packaging/manifest.hpp</label>
        <link refid="manifest_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>xlnt/utils/path.hpp</label>
        <link refid="path_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="64">
        <label>helpers/test_suite.hpp</label>
        <link refid="test__suite_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>xlnt/worksheet/cell_iterator.hpp</label>
        <link refid="cell__iterator_8hpp"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classworksheet__test__suite" prot="public">worksheet_test_suite</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="worksheet__test__suite_8cpp_1a303d59658186a7c0a6d3358a1200cff6" prot="public" static="yes" mutable="no">
        <type><ref refid="classworksheet__test__suite" kindref="compound">worksheet_test_suite</ref></type>
        <definition>worksheet_test_suite x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/tests/worksheet/worksheet_test_suite.cpp" line="1586" column="29" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/tests/worksheet/worksheet_test_suite.cpp" bodystart="1586" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2020<sp/>Thomas<sp/>Fussell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>WRISING<sp/>FROM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@license:<sp/>http://www.opensource.org/licenses/mit-license.php</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@author:<sp/>see<sp/>AUTHORS<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cell_8hpp" kindref="compound">xlnt/cell/cell.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hyperlink_8hpp" kindref="compound">xlnt/cell/hyperlink.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="workbook_8hpp" kindref="compound">xlnt/workbook/workbook.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="column__properties_8hpp" kindref="compound">xlnt/worksheet/column_properties.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="header__footer_8hpp" kindref="compound">xlnt/worksheet/header_footer.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="range_8hpp" kindref="compound">xlnt/worksheet/range.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="row__properties_8hpp" kindref="compound">xlnt/worksheet/row_properties.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="worksheet_8hpp" kindref="compound">xlnt/worksheet/worksheet.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="test__suite_8hpp" kindref="compound">helpers/test_suite.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classworksheet__test__suite" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classworksheet__test__suite" kindref="compound">worksheet_test_suite</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtest__suite" kindref="compound">test_suite</ref></highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classworksheet__test__suite_1adc821eef5fe7be67ff88086274d1a25d" kindref="member">worksheet_test_suite</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a8d2eb772d79924429e29200c1934ba49" kindref="member">test_new_worksheet</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1af03db5e05073274dbbfc767f4ab2c2f4" kindref="member">test_cell</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1adc589b278f3ebe899f6e9ddc8a5fa38e" kindref="member">test_invalid_cell</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a00efd516c8e2f96c620c938056ae2c5e" kindref="member">test_worksheet_dimension</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1add100deefa9c333869e4067d188e71a6" kindref="member">test_fill_rows</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1af826fc51bf3362dc4ff2928381c2940d" kindref="member">test_get_named_range</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a59b5bfe890d8d371b11c66fee4fb5121" kindref="member">test_get_bad_named_range</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a85e56003f38c217adf04b00250963da0" kindref="member">test_get_named_range_wrong_sheet</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1ab05be053a9f32fbb10368892317e58fd" kindref="member">test_remove_named_range_bad</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a9c42730d9b9b3e75804eda35f4b5b889" kindref="member">test_cell_alternate_coordinates</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a95a6cccb76501a49169edb65000d0baa" kindref="member">test_cell_range_name</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a35d4ba782bf41f4a36c44d24dd0cae9d" kindref="member">test_rows</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a76897d2c6920a623f68245a06879163a" kindref="member">test_no_rows</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a51ed614350a7ab7172eda9a85d1de271" kindref="member">test_no_cols</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a496ed4cd09cd7ec465588377fb1d2394" kindref="member">test_one_cell</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1aa49c9871c09fb08ed39b75eb34681802" kindref="member">test_cols</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a78f6c15630d51195cb3a7f48901d77ef" kindref="member">test_auto_filter</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1aecf1d25b50920f1d1adde3915447ebba" kindref="member">test_getitem</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1af46ccdc626d2235e5e5f5173c1f303ff" kindref="member">test_setitem</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a5e8858e9d323ae23ac1d136ef719456a" kindref="member">test_getslice</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1ab737bc66820e6e215b1de3ed3525ea19" kindref="member">test_freeze</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1adb5fb66b190f38f6e8813e150b6194bd" kindref="member">test_merged_cells_lookup</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a46dad95e7d9c02cf3629969f17243a35" kindref="member">test_merged_cell_ranges</ref>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a4def15c9bc35d5d0ec88e21e1fc36eae" kindref="member">test_merge_range_string</ref>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a4f7302798cf5a4fa70fc7a0d18534fdb" kindref="member">test_unmerge_bad</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1ad5e86c3148a3f441a85f1e5cf18ba413" kindref="member">test_unmerge_range_string</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1aac91b9e76f844c6b49a71631002532cf" kindref="member">test_print_titles_old</ref>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1aad052540a4cd60eb260be6c63d701f92" kindref="member">test_print_titles_new</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a0036d679543d931af0f0e7e784cbe52b" kindref="member">test_print_area</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1ab02af8cd6fab6bcf42dfd65eaf945ee8" kindref="member">test_freeze_panes_horiz</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1af88e9ca2aa19fbfde75a70a691514b58" kindref="member">test_freeze_panes_vert</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a405fcf3da5d8bbd20b73ba538119fda1" kindref="member">test_freeze_panes_both</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a1a56a7802b8013988540b6a8d39a175c" kindref="member">test_lowest_column</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1aed466eaf7fc1fc355369f359794d9ecc" kindref="member">test_lowest_column_or_props</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a56db6e1176477a1c69a81a5524b6afda" kindref="member">test_highest_column</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a37959287d8b3ca6087684fc60d540d65" kindref="member">test_highest_column_or_props</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a001a1787352aa440435ec01f00917788" kindref="member">test_lowest_row</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a094d38a9f523a5579ad22e27fb53b8fb" kindref="member">test_lowest_row_or_props</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a6d51dd924a158dfb963e74e5152ee383" kindref="member">test_highest_row</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a7d62e4988e75ac0907c098e49ff24b1c" kindref="member">test_highest_row_or_props</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1ac76395cc1c7d73e0552086c9c6f560be" kindref="member">test_const_iterators</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a58223436ebfdb407ca0775c71a3b754e" kindref="member">test_const_reverse_iterators</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a5dbd2367ef72e98f5803642d525a5523" kindref="member">test_column_major_iterators</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a57bf3ed59e25689caa90977cf3a467d8" kindref="member">test_reverse_column_major_iterators</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a0481c16926eb1ec2690f420b20e73dd7" kindref="member">test_const_column_major_iterators</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1aba596cb0b34a1287db696b7071e547fb" kindref="member">test_const_reverse_column_major_iterators</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a8891d8663536a8f66daa3bfbcac5eeef" kindref="member">test_header</ref>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1af3c17b0c0410a6c525992bb6dcbf862f" kindref="member">test_footer</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a5246bf855929c90f49fdf45c14346852" kindref="member">test_page_setup</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1ada8cf249966fafa4e9cd3f42291430b5" kindref="member">test_unique_sheet_name</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a87020ca553b5d3871d00b02ed082f12d" kindref="member">test_page_margins</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1adc7836eb81866bd1080e703cacade1b2" kindref="member">test_garbage_collect</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a0640543176542f910df402364e8eee0b" kindref="member">test_has_cell</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1aed82f4d4823f5238c5e1d9b77b15a720" kindref="member">test_get_range_by_string</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1af99d2100b8944fd15614b9135912fb97" kindref="member">test_operators</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a35fda1503aad7ab9cd4145db7f0fb883" kindref="member">test_reserve</ref>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a64313bf752166825cec70e373b51b91d" kindref="member">test_iterate</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1aa9a4929175995cf6377015ddf789e536" kindref="member">test_range_reference</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a3c39f580de9a46bce8ed9c670ccca15e" kindref="member">test_get_point_pos</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1af4d44d32d577286b1006372971fcf525" kindref="member">test_named_range_named_cell_reference</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a5d57ce67cc3c3e63950a127b5960903d" kindref="member">test_iteration_skip_empty</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a6f3ea3387e33ba2fbd778bc3107842a2" kindref="member">test_dimensions</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a67a1206ba44fdaec9f227695c1ed395d" kindref="member">test_view_properties_serialization</ref>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a6b86fac1635958a5f3d9143f26f1c082" kindref="member">test_clear_cell</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a6850250cd78c0ac3e73a264fabd8e90b" kindref="member">test_clear_row</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a2892afb3ce764aff1bf8e347f2bfbe38" kindref="member">test_set_title</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a16539a9f518e42fd05b9028acf5f9e8e" kindref="member">test_set_title_unicode</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1ae606187f724e17413832210d4ac9cfd5" kindref="member">test_phonetics</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1aed45bf939c91e01b950d6c1df9c801a1" kindref="member">test_insert_rows</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a1b770fd3df5508a52da1d12ae1b56ae8" kindref="member">test_insert_columns</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1ae9f62ee7f44fd36c910cb0d9221c3391" kindref="member">test_delete_rows</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a6fd31096c0af789040ee81a66b7a4782" kindref="member">test_delete_columns</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1acc49343c20e40337c3a99a924ff9eedc" kindref="member">test_insert_too_many</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classworksheet__test__suite_1a2a39bf4fdfa3dfd2380e2473150306ad" kindref="member">test_insert_delete_moves_merges</ref>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a8d2eb772d79924429e29200c1934ba49" kindref="member">test_new_worksheet</ref>()</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.workbook()<sp/>==<sp/>wb);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1af03db5e05073274dbbfc767f4ab2c2f4" kindref="member">test_cell</ref>()</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>=<sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(1,<sp/>1));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.reference(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1adc589b278f3ebe899f6e9ddc8a5fa38e" kindref="member">test_invalid_cell</ref>()</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(<ref refid="classxlnt_1_1column__t" kindref="compound">xlnt::column_t</ref>((<ref refid="classxlnt_1_1column__t_1ab514d159582ca03315e0f020dc8efedd" kindref="member">xlnt::column_t::index_t</ref>)0),<sp/>0),</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1invalid__cell__reference" kindref="compound">xlnt::invalid_cell_reference</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a00efd516c8e2f96c620c938056ae2c5e" kindref="member">test_worksheet_dimension</ref>()</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(</highlight><highlight class="stringliteral">&quot;A1:A1&quot;</highlight><highlight class="normal">,<sp/>ws.calculate_dimension());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B12&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;AAA&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(</highlight><highlight class="stringliteral">&quot;B12:B12&quot;</highlight><highlight class="normal">,<sp/>ws.calculate_dimension());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1add100deefa9c333869e4067d188e71a6" kindref="member">test_fill_rows</ref>()</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>coordinate<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;first&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C9&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;last&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.calculate_dimension(),<sp/></highlight><highlight class="stringliteral">&quot;A1:C9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.rows(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)[<ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>][<ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref>].reference(),<sp/>coordinate);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordinate<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;C9&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.rows(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)[<ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>][<ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref>].reference(),<sp/>coordinate);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1af826fc51bf3362dc4ff2928381c2940d" kindref="member">test_get_named_range</ref>()</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1a424ec3ca238fe529de5421e8b91b26a1" kindref="member">create_named_range</ref>(</highlight><highlight class="stringliteral">&quot;test_range&quot;</highlight><highlight class="normal">,<sp/>ws,<sp/></highlight><highlight class="stringliteral">&quot;C5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xlrange<sp/>=<sp/>ws.named_range(</highlight><highlight class="stringliteral">&quot;test_range&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(1,<sp/>xlrange.length());</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(1,<sp/>xlrange[0].length());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(5,<sp/>xlrange[0][0].<ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>());</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.create_named_range(</highlight><highlight class="stringliteral">&quot;test_range2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;C6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>xlrange2<sp/>=<sp/>ws.named_range(</highlight><highlight class="stringliteral">&quot;test_range2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(1,<sp/>xlrange2.length());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(1,<sp/>xlrange2[0].length());</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(6,<sp/>xlrange2[0][0].<ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a59b5bfe890d8d371b11c66fee4fb5121" kindref="member">test_get_bad_named_range</ref>()</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws.named_range(</highlight><highlight class="stringliteral">&quot;bad_range&quot;</highlight><highlight class="normal">),<sp/><ref refid="classxlnt_1_1key__not__found" kindref="compound">xlnt::key_not_found</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a85e56003f38c217adf04b00250963da0" kindref="member">test_get_named_range_wrong_sheet</ref>()</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" kindref="member">create_sheet</ref>();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" kindref="member">create_sheet</ref>();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws1<sp/>=<sp/>wb[0];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws2<sp/>=<sp/>wb[1];</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1a424ec3ca238fe529de5421e8b91b26a1" kindref="member">create_named_range</ref>(</highlight><highlight class="stringliteral">&quot;wrong_sheet_range&quot;</highlight><highlight class="normal">,<sp/>ws1,<sp/></highlight><highlight class="stringliteral">&quot;C5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws2.named_range(</highlight><highlight class="stringliteral">&quot;wrong_sheet_range&quot;</highlight><highlight class="normal">),<sp/><ref refid="classxlnt_1_1key__not__found" kindref="compound">xlnt::key_not_found</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1ab05be053a9f32fbb10368892317e58fd" kindref="member">test_remove_named_range_bad</ref>()</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws.remove_named_range(</highlight><highlight class="stringliteral">&quot;bad_range&quot;</highlight><highlight class="normal">),<sp/>std::runtime_error);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a9c42730d9b9b3e75804eda35f4b5b889" kindref="member">test_cell_alternate_coordinates</ref>()</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>=<sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(4,<sp/>8));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.reference(),<sp/></highlight><highlight class="stringliteral">&quot;D8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>test_cell_insufficient_coordinates()<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a95a6cccb76501a49169edb65000d0baa" kindref="member">test_cell_range_name</ref>()</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1a424ec3ca238fe529de5421e8b91b26a1" kindref="member">create_named_range</ref>(</highlight><highlight class="stringliteral">&quot;test_range_single&quot;</highlight><highlight class="normal">,<sp/>ws,<sp/></highlight><highlight class="stringliteral">&quot;B12&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c_range_name<sp/>=<sp/>ws.named_range(</highlight><highlight class="stringliteral">&quot;test_range_single&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c_range_coord<sp/>=<sp/>ws.range(</highlight><highlight class="stringliteral">&quot;B12&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c_cell<sp/>=<sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B12&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(c_range_coord,<sp/>c_range_name);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(c_range_coord[0][0]<sp/>==<sp/>c_cell);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a35d4ba782bf41f4a36c44d24dd0cae9d" kindref="member">test_rows</ref>()</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;first&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C9&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;last&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rows<sp/>=<sp/>ws.rows();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(rows.length(),<sp/>9);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_row<sp/>=<sp/>rows[0];</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_row<sp/>=<sp/>rows[8];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(first_row[0].value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;first&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(first_row[0].reference(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(last_row[2].value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;last&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a76897d2c6920a623f68245a06879163a" kindref="member">test_no_rows</ref>()</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.rows().length(),<sp/>1);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.rows()[0].length(),<sp/>1);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a51ed614350a7ab7172eda9a85d1de271" kindref="member">test_no_cols</ref>()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.columns().length(),<sp/>1);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.columns()[0].length(),<sp/>1);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a496ed4cd09cd7ec465588377fb1d2394" kindref="member">test_one_cell</ref>()</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>=<sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.columns().length(),<sp/>1);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.columns()[0].length(),<sp/>1);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.columns()[0][0],<sp/>cell);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>void<sp/>test_by_col()<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1aa49c9871c09fb08ed39b75eb34681802" kindref="member">test_cols</ref>()</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;first&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C9&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;last&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cols<sp/>=<sp/>ws.columns();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cols.length(),<sp/>3);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cols[0][0].value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;first&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cols[2][8].value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;last&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a78f6c15630d51195cb3a7f48901d77ef" kindref="member">test_auto_filter</ref>()</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1ae1c8c5f2ca9e88699a00eb574be06533" kindref="member">auto_filter</ref>(ws.range(</highlight><highlight class="stringliteral">&quot;a1:f1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.auto_filter(),<sp/></highlight><highlight class="stringliteral">&quot;A1:F1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.clear_auto_filter();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_auto_filter());</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.auto_filter(</highlight><highlight class="stringliteral">&quot;c1:g9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.auto_filter(),<sp/></highlight><highlight class="stringliteral">&quot;C1:G9&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1aecf1d25b50920f1d1adde3915447ebba" kindref="member">test_getitem</ref>()</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1cell" kindref="compound">xlnt::cell</ref><sp/>cell<sp/>=<sp/>ws[<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">)];</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.<ref refid="classxlnt_1_1cell_1ac03ebad679cd76a97f60c66ee82751f8" kindref="member">reference</ref>().<ref refid="classxlnt_1_1cell__reference_1ac79e961a120faa927fb6d1e7827886ff" kindref="member">to_string</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.<ref refid="classxlnt_1_1cell_1ad41a2e3eb44b7e32ea0934ccc5446f68" kindref="member">data_type</ref>(),<sp/><ref refid="cell__type_8hpp_1a7d665d9fa18a26df451d111b34afd89f" kindref="member">xlnt::cell::type::empty</ref>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1af46ccdc626d2235e5e5f5173c1f303ff" kindref="member">test_setitem</ref>()</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws[<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(</highlight><highlight class="stringliteral">&quot;A12&quot;</highlight><highlight class="normal">)].value(5);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws[<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(</highlight><highlight class="stringliteral">&quot;A12&quot;</highlight><highlight class="normal">)].value&lt;int&gt;()<sp/>==<sp/>5);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a5e8858e9d323ae23ac1d136ef719456a" kindref="member">test_getslice</ref>()</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell_range<sp/>=<sp/>ws.<ref refid="classxlnt_1_1worksheet_1a8f9c0cc9493c0976f97a49dac38f6732" kindref="member">range</ref>(</highlight><highlight class="stringliteral">&quot;A1:B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell_range[0][0],<sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell_range[1][0],<sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell_range[0][1],<sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell_range[1][1],<sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1ab737bc66820e6e215b1de3ed3525ea19" kindref="member">test_freeze</ref>()</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1a0cbbf8626202bd83a901e0c8ff3c4d33" kindref="member">freeze_panes</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;b2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.frozen_panes(),<sp/></highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.unfreeze_panes();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_frozen_panes());</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.freeze_panes(</highlight><highlight class="stringliteral">&quot;c5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.frozen_panes(),<sp/></highlight><highlight class="stringliteral">&quot;C5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.freeze_panes(ws.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_frozen_panes());</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1adb5fb66b190f38f6e8813e150b6194bd" kindref="member">test_merged_cells_lookup</ref>()</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.merge_cells(</highlight><highlight class="stringliteral">&quot;A1:N50&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>all_merged<sp/>=<sp/>ws.merged_ranges();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(all_merged.size(),<sp/>1);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>merged<sp/>=<sp/>ws.range(all_merged[0]);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(merged.contains(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(merged.contains(</highlight><highlight class="stringliteral">&quot;N50&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!merged.contains(</highlight><highlight class="stringliteral">&quot;A51&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!merged.contains(</highlight><highlight class="stringliteral">&quot;O1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a46dad95e7d9c02cf3629969f17243a35" kindref="member">test_merged_cell_ranges</ref>()</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.merged_ranges().size(),<sp/>0);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a4def15c9bc35d5d0ec88e21e1fc36eae" kindref="member">test_merge_range_string</ref>()</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(1);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;D4&quot;</highlight><highlight class="normal">).value(16);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.merge_cells(</highlight><highlight class="stringliteral">&quot;A1:D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;xlnt::range_reference&gt;<sp/>expected<sp/>=<sp/>{<ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref>(</highlight><highlight class="stringliteral">&quot;A1:D4&quot;</highlight><highlight class="normal">)};</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.merged_ranges(),<sp/>expected);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.cell(</highlight><highlight class="stringliteral">&quot;D4&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a4f7302798cf5a4fa70fc7a0d18534fdb" kindref="member">test_unmerge_bad</ref>()</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws.unmerge_cells(</highlight><highlight class="stringliteral">&quot;A1:D3&quot;</highlight><highlight class="normal">),<sp/>std::runtime_error);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1ad5e86c3148a3f441a85f1e5cf18ba413" kindref="member">test_unmerge_range_string</ref>()</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1a5e51e2f8e3396adfc0a2751a3826aebf" kindref="member">merge_cells</ref>(</highlight><highlight class="stringliteral">&quot;A1:D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.merged_ranges().size(),<sp/>1);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.unmerge_cells(</highlight><highlight class="stringliteral">&quot;A1:D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.merged_ranges().size(),<sp/>0);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1aac91b9e76f844c6b49a71631002532cf" kindref="member">test_print_titles_old</ref>()</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1a1510c3bae89168cfb4ab381c29ce88db" kindref="member">print_title_rows</ref>(3);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.print_titles(),<sp/></highlight><highlight class="stringliteral">&quot;Sheet1!1:3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws2<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" kindref="member">create_sheet</ref>();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws2.<ref refid="classxlnt_1_1worksheet_1a2684cdb908ea3cdff7aa66c1539c1882" kindref="member">print_title_cols</ref>(4);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws2.print_titles(),<sp/></highlight><highlight class="stringliteral">&quot;Sheet2!A:D&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1aad052540a4cd60eb260be6c63d701f92" kindref="member">test_print_titles_new</ref>()</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1a1510c3bae89168cfb4ab381c29ce88db" kindref="member">print_title_rows</ref>(4);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.print_titles(),<sp/></highlight><highlight class="stringliteral">&quot;Sheet1!1:4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws2<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" kindref="member">create_sheet</ref>();</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws2.<ref refid="classxlnt_1_1worksheet_1a2684cdb908ea3cdff7aa66c1539c1882" kindref="member">print_title_cols</ref>(</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws2.print_titles(),<sp/></highlight><highlight class="stringliteral">&quot;Sheet2!A:F&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws3<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" kindref="member">create_sheet</ref>();</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws3.<ref refid="classxlnt_1_1worksheet_1a1510c3bae89168cfb4ab381c29ce88db" kindref="member">print_title_rows</ref>(2,<sp/>3);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws3.print_title_cols(</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws3.print_titles(),<sp/></highlight><highlight class="stringliteral">&quot;Sheet3!2:3,Sheet3!C:D&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a0036d679543d931af0f0e7e784cbe52b" kindref="member">test_print_area</ref>()</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1a8acdd63570f0dc32734ef6fe5eb30919" kindref="member">print_area</ref>(</highlight><highlight class="stringliteral">&quot;A1:F5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.print_area(),<sp/></highlight><highlight class="stringliteral">&quot;$A$1:$F$5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1ab02af8cd6fab6bcf42dfd65eaf945ee8" kindref="member">test_freeze_panes_horiz</ref>()</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1a0cbbf8626202bd83a901e0c8ff3c4d33" kindref="member">freeze_panes</ref>(</highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>view<sp/>=<sp/>ws.view();</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections().size(),<sp/>1);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pane<sp/>is<sp/>the<sp/>corner<sp/>of<sp/>the<sp/>worksheet<sp/>that<sp/>this<sp/>selection<sp/>extends<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>active<sp/>cell<sp/>is<sp/>the<sp/>last<sp/>selected<sp/>cell<sp/>in<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sqref<sp/>is<sp/>the<sp/>last<sp/>selected<sp/>block<sp/>in<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[0].pane(),<sp/><ref refid="pane_8hpp_1ab8c13717c6256d98b9c8b87fb34085ea" kindref="member">xlnt::pane_corner::bottom_left</ref>);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[0].active_cell(),<sp/></highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[0].sqref(),<sp/></highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().active_pane,<sp/><ref refid="pane_8hpp_1ab8c13717c6256d98b9c8b87fb34085ea" kindref="member">xlnt::pane_corner::bottom_left</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().state,<sp/><ref refid="pane_8hpp_1a906e5471892a6af403fcff0a3493a3ab" kindref="member">xlnt::pane_state::frozen</ref>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().top_left_cell.get(),<sp/></highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().y_split,<sp/>3);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1af88e9ca2aa19fbfde75a70a691514b58" kindref="member">test_freeze_panes_vert</ref>()</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1a0cbbf8626202bd83a901e0c8ff3c4d33" kindref="member">freeze_panes</ref>(</highlight><highlight class="stringliteral">&quot;D1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>view<sp/>=<sp/>ws.view();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections().size(),<sp/>1);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pane<sp/>is<sp/>the<sp/>corner<sp/>of<sp/>the<sp/>worksheet<sp/>that<sp/>this<sp/>selection<sp/>extends<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>active<sp/>cell<sp/>is<sp/>the<sp/>last<sp/>selected<sp/>cell<sp/>in<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sqref<sp/>is<sp/>the<sp/>last<sp/>selected<sp/>block<sp/>in<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[0].pane(),<sp/><ref refid="pane_8hpp_1afa97c0a877bcf623988ff2bcd76f3d2f" kindref="member">xlnt::pane_corner::top_right</ref>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[0].active_cell(),<sp/></highlight><highlight class="stringliteral">&quot;D1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[0].sqref(),<sp/></highlight><highlight class="stringliteral">&quot;D1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().active_pane,<sp/><ref refid="pane_8hpp_1afa97c0a877bcf623988ff2bcd76f3d2f" kindref="member">xlnt::pane_corner::top_right</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().state,<sp/><ref refid="pane_8hpp_1a906e5471892a6af403fcff0a3493a3ab" kindref="member">xlnt::pane_state::frozen</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().top_left_cell.get(),<sp/></highlight><highlight class="stringliteral">&quot;D1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().x_split,<sp/>3);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a405fcf3da5d8bbd20b73ba538119fda1" kindref="member">test_freeze_panes_both</ref>()</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1a0cbbf8626202bd83a901e0c8ff3c4d33" kindref="member">freeze_panes</ref>(</highlight><highlight class="stringliteral">&quot;D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>view<sp/>=<sp/>ws.view();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections().size(),<sp/>3);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pane<sp/>is<sp/>the<sp/>corner<sp/>of<sp/>the<sp/>worksheet<sp/>that<sp/>this<sp/>selection<sp/>extends<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>active<sp/>cell<sp/>is<sp/>the<sp/>last<sp/>selected<sp/>cell<sp/>in<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sqref<sp/>is<sp/>the<sp/>last<sp/>selected<sp/>block<sp/>in<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[0].pane(),<sp/><ref refid="pane_8hpp_1afa97c0a877bcf623988ff2bcd76f3d2f" kindref="member">xlnt::pane_corner::top_right</ref>);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[0].active_cell(),<sp/></highlight><highlight class="stringliteral">&quot;D1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[0].sqref(),<sp/></highlight><highlight class="stringliteral">&quot;D1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[1].pane(),<sp/><ref refid="pane_8hpp_1ab8c13717c6256d98b9c8b87fb34085ea" kindref="member">xlnt::pane_corner::bottom_left</ref>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[1].active_cell(),<sp/></highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[1].sqref(),<sp/></highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[2].pane(),<sp/>xlnt::pane_corner::bottom_right);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[2].active_cell(),<sp/></highlight><highlight class="stringliteral">&quot;D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.selections()[2].sqref(),<sp/></highlight><highlight class="stringliteral">&quot;D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().active_pane,<sp/>xlnt::pane_corner::bottom_right);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().state,<sp/><ref refid="pane_8hpp_1a906e5471892a6af403fcff0a3493a3ab" kindref="member">xlnt::pane_state::frozen</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().top_left_cell.get(),<sp/></highlight><highlight class="stringliteral">&quot;D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().x_split,<sp/>3);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(view.pane().y_split,<sp/>3);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a1a56a7802b8013988540b6a8d39a175c" kindref="member">test_lowest_column</ref>()</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.lowest_column(),<sp/>1);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1aed466eaf7fc1fc355369f359794d9ecc" kindref="member">test_lowest_column_or_props</ref>()</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1a4b03bdef7998ec5f9f1689a03ec54785" kindref="member">column_properties</ref>(</highlight><highlight class="stringliteral">&quot;J&quot;</highlight><highlight class="normal">).<ref refid="classxlnt_1_1column__properties_1afcbf666e636ed7e9b861a3fadd464c68" kindref="member">width</ref><sp/>=<sp/>14.3;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.lowest_column_or_props(),<sp/></highlight><highlight class="stringliteral">&quot;J&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a56db6e1176477a1c69a81a5524b6afda" kindref="member">test_highest_column</ref>()</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws[<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(</highlight><highlight class="stringliteral">&quot;F1&quot;</highlight><highlight class="normal">)].value(10);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws[<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(</highlight><highlight class="stringliteral">&quot;F2&quot;</highlight><highlight class="normal">)].value(32);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws[<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(</highlight><highlight class="stringliteral">&quot;F3&quot;</highlight><highlight class="normal">)].formula(</highlight><highlight class="stringliteral">&quot;=F1+F2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws[<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(</highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">)].formula(</highlight><highlight class="stringliteral">&quot;=A1+A2+A3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.highest_column(),<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a37959287d8b3ca6087684fc60d540d65" kindref="member">test_highest_column_or_props</ref>()</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1a4b03bdef7998ec5f9f1689a03ec54785" kindref="member">column_properties</ref>(</highlight><highlight class="stringliteral">&quot;J&quot;</highlight><highlight class="normal">).<ref refid="classxlnt_1_1column__properties_1afcbf666e636ed7e9b861a3fadd464c68" kindref="member">width</ref><sp/>=<sp/>14.3;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.highest_column_or_props(),<sp/></highlight><highlight class="stringliteral">&quot;J&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a001a1787352aa440435ec01f00917788" kindref="member">test_lowest_row</ref>()</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.lowest_row(),<sp/>1);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a094d38a9f523a5579ad22e27fb53b8fb" kindref="member">test_lowest_row_or_props</ref>()</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aff6507aa5653c439811f1f7c5aa16d03" kindref="member">row_properties</ref>(11).<ref refid="classxlnt_1_1row__properties_1a27e8da8bc5fe827fba0f4a7cc49d487d" kindref="member">height</ref><sp/>=<sp/>14.3;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.lowest_row_or_props(),<sp/>11);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a6d51dd924a158dfb963e74e5152ee383" kindref="member">test_highest_row</ref>()</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;D4&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.highest_row(),<sp/>4);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a7d62e4988e75ac0907c098e49ff24b1c" kindref="member">test_highest_row_or_props</ref>()</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aff6507aa5653c439811f1f7c5aa16d03" kindref="member">row_properties</ref>(11).<ref refid="classxlnt_1_1row__properties_1a27e8da8bc5fe827fba0f4a7cc49d487d" kindref="member">height</ref><sp/>=<sp/>14.3;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.highest_row_or_props(),<sp/>11);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1ac76395cc1c7d73e0552086c9c6f560be" kindref="member">test_const_iterators</ref>()</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1worksheet" kindref="compound">xlnt::worksheet</ref><sp/>ws_const<sp/>=<sp/>ws;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rows<sp/>=<sp/>ws_const.<ref refid="classxlnt_1_1worksheet_1a12778fcfc846484b59f95aa858a6d904" kindref="member">rows</ref>();</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_row<sp/>=<sp/>rows.<ref refid="classxlnt_1_1range_1a1d07b943eab523c06ac3810a4611153d" kindref="member">front</ref>();</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_cell<sp/>=<sp/>first_row.<ref refid="classxlnt_1_1cell__vector_1a5d3e98894b06080420e9d3c694890375" kindref="member">front</ref>();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(first_cell.reference(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(first_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_row<sp/>=<sp/>rows.back();</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_cell<sp/>=<sp/>last_row.back();</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(last_cell.reference(),<sp/></highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(last_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref><sp/>:<sp/>rows)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>:<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.value&lt;std::string&gt;(),<sp/>cell.reference().to_string());</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(<ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">xlnt::const_cell_iterator</ref>{},<sp/><ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">xlnt::const_cell_iterator</ref>{});</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(<ref refid="classxlnt_1_1const__range__iterator" kindref="compound">xlnt::const_range_iterator</ref>{},<sp/><ref refid="classxlnt_1_1const__range__iterator" kindref="compound">xlnt::const_range_iterator</ref>{});</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a58223436ebfdb407ca0775c71a3b754e" kindref="member">test_const_reverse_iterators</ref>()</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1worksheet" kindref="compound">xlnt::worksheet</ref><sp/>ws_const<sp/>=<sp/>ws;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rows<sp/>=<sp/>ws_const.<ref refid="classxlnt_1_1worksheet_1a12778fcfc846484b59f95aa858a6d904" kindref="member">rows</ref>();</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_row<sp/>=<sp/>*rows.<ref refid="classxlnt_1_1range_1a7da4c2e75dc30d2f5cd085511c7f1ec4" kindref="member">rbegin</ref>();</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_cell<sp/>=<sp/>*first_row.rbegin();</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(first_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row_iter<sp/>=<sp/>rows.rend();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_iter--;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_row<sp/>=<sp/>*row_iter;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell_iter<sp/>=<sp/>last_row.rend();</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell_iter--;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_cell<sp/>=<sp/>*cell_iter;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(last_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws_iter<sp/>=<sp/>rows.rbegin();<sp/>ws_iter<sp/>!=<sp/>rows.rend();<sp/>ws_iter++)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref><sp/>=<sp/>*ws_iter;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row_iter<sp/>=<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>.rbegin();<sp/>row_iter<sp/>!=<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>.rend();<sp/>row_iter++)</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>=<sp/>*row_iter;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.value&lt;std::string&gt;(),<sp/>cell.reference().to_string());</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a5dbd2367ef72e98f5803642d525a5523" kindref="member">test_column_major_iterators</ref>()</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>columns<sp/>=<sp/>ws.columns();</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_column<sp/>=<sp/>*columns.begin();</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_column_iter<sp/>=<sp/>first_column.begin();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_cell<sp/>=<sp/>*first_column_iter;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(first_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_column_iter++;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>second_cell<sp/>=<sp/>*first_column_iter;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(second_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(first_cell,<sp/>first_column.front());</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(second_cell,<sp/>first_column.back());</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_column<sp/>=<sp/>*(--columns.end());</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_column_iter<sp/>=<sp/>last_column.end();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_column_iter--;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_cell<sp/>=<sp/>*last_column_iter;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(last_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_column_iter--;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>penultimate_cell<sp/>=<sp/>*last_column_iter;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(penultimate_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref><sp/>:<sp/>columns)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>:<sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref>)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.value&lt;std::string&gt;(),<sp/>cell.reference().to_string());</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a57bf3ed59e25689caa90977cf3a467d8" kindref="member">test_reverse_column_major_iterators</ref>()</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>columns<sp/>=<sp/>ws.columns();</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>column_iter<sp/>=<sp/>columns.rbegin();</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_column<sp/>=<sp/>*column_iter;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_column_iter<sp/>=<sp/>first_column.rbegin();</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_cell<sp/>=<sp/>*first_column_iter;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(first_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_column_iter++;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>second_cell<sp/>=<sp/>*first_column_iter;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(second_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_column<sp/>=<sp/>*(--columns.rend());</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_column_iter<sp/>=<sp/>last_column.rend();</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_column_iter--;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_cell<sp/>=<sp/>*last_column_iter;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(last_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_column_iter--;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>penultimate_cell<sp/>=<sp/>*last_column_iter;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(penultimate_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>column_iter<sp/>=<sp/>columns.rbegin();<sp/>column_iter<sp/>!=<sp/>columns.rend();<sp/>++column_iter)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref><sp/>=<sp/>*column_iter;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell_iter<sp/>=<sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref>.rbegin();<sp/>cell_iter<sp/>!=<sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref>.rend();<sp/>++cell_iter)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>=<sp/>*cell_iter;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.value&lt;std::string&gt;(),<sp/>cell.reference().to_string());</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a0481c16926eb1ec2690f420b20e73dd7" kindref="member">test_const_column_major_iterators</ref>()</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1worksheet" kindref="compound">xlnt::worksheet</ref><sp/>ws_const<sp/>=<sp/>ws;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>columns<sp/>=<sp/>ws_const.<ref refid="classxlnt_1_1worksheet_1aef7f7c5c52affd4c8a10f40f782794ad" kindref="member">columns</ref>();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_column<sp/>=<sp/>*columns.<ref refid="classxlnt_1_1range_1a50983d2dd3dc8feae4b28c786440e245" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_column_iter<sp/>=<sp/>first_column.begin();</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_cell<sp/>=<sp/>*first_column_iter;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(first_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_column_iter++;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>second_cell<sp/>=<sp/>*first_column_iter;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(second_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_column<sp/>=<sp/>*(--columns.end());</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_column_iter<sp/>=<sp/>last_column.end();</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_column_iter--;</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_cell<sp/>=<sp/>*last_column_iter;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(last_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_column_iter--;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>penultimate_cell<sp/>=<sp/>*last_column_iter;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(penultimate_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref><sp/>:<sp/>columns)</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>:<sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref>)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.value&lt;std::string&gt;(),<sp/>cell.reference().to_string());</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1aba596cb0b34a1287db696b7071e547fb" kindref="member">test_const_reverse_column_major_iterators</ref>()</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1worksheet" kindref="compound">xlnt::worksheet</ref><sp/>ws_const<sp/>=<sp/>ws;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>columns<sp/>=<sp/>ws_const.<ref refid="classxlnt_1_1worksheet_1aef7f7c5c52affd4c8a10f40f782794ad" kindref="member">columns</ref>();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_column<sp/>=<sp/>*columns.<ref refid="classxlnt_1_1range_1a0308d354e93dad757f3b90118b749244" kindref="member">crbegin</ref>();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_column_iter<sp/>=<sp/>first_column.crbegin();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_cell<sp/>=<sp/>*first_column_iter;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(first_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first_column_iter++;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>second_cell<sp/>=<sp/>*first_column_iter;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(second_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_column<sp/>=<sp/>*(--columns.crend());</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_column_iter<sp/>=<sp/>last_column.crend();</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_column_iter--;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_cell<sp/>=<sp/>*last_column_iter;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(last_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_column_iter--;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>penultimate_cell<sp/>=<sp/>*last_column_iter;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(penultimate_cell.value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>column_iter<sp/>=<sp/>columns.crbegin();<sp/>column_iter<sp/>!=<sp/>columns.crend();<sp/>++column_iter)</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref><sp/>=<sp/>*column_iter;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell_iter<sp/>=<sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref>.crbegin();<sp/>cell_iter<sp/>!=<sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref>.crend();<sp/>++cell_iter)</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>=<sp/>*cell_iter;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.value&lt;std::string&gt;(),<sp/>cell.reference().to_string());</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a8891d8663536a8f66daa3bfbcac5eeef" kindref="member">test_header</ref>()</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1header__footer" kindref="compound">xlnt::header_footer</ref><sp/>hf;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>hf_loc<sp/>=<sp/><ref refid="classxlnt_1_1header__footer_1a2e5dabd2d3465ee7f5738befffc43375" kindref="member">xlnt::header_footer::location</ref>;</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>location<sp/>:<sp/>{<ref refid="alignment_8hpp_1a58c76f848f15df202254c1daec468567" kindref="member">hf_loc::left</ref>,<sp/><ref refid="alignment_8hpp_1a02389a9bda512aa8f8a3345f4fa27f25" kindref="member">hf_loc::center</ref>,<sp/><ref refid="alignment_8hpp_1a25331d5f9601b8cb1ce57490930d7c01" kindref="member">hf_loc::right</ref>})</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1ac8aef07b8c7915236779578d9dd56f95" kindref="member">has_header</ref>(location));</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1a5676f12900493664e9945d5a7e242b84" kindref="member">has_odd_even_header</ref>(location));</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1aa95192610cf92f0e896ce64558316f9a" kindref="member">has_first_page_header</ref>(location));</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hf.<ref refid="classxlnt_1_1header__footer_1ae1f7a4020f046ffcb1fe16ac4d92cdb7" kindref="member">header</ref>(location,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(hf.<ref refid="classxlnt_1_1header__footer_1ac8aef07b8c7915236779578d9dd56f95" kindref="member">has_header</ref>(location));</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1a5676f12900493664e9945d5a7e242b84" kindref="member">has_odd_even_header</ref>(location));</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1aa95192610cf92f0e896ce64558316f9a" kindref="member">has_first_page_header</ref>(location));</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(hf.<ref refid="classxlnt_1_1header__footer_1ae1f7a4020f046ffcb1fe16ac4d92cdb7" kindref="member">header</ref>(location),<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hf.<ref refid="classxlnt_1_1header__footer_1a41002cdb73670605ad06c82600fd43cf" kindref="member">clear_header</ref>(location);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1ac8aef07b8c7915236779578d9dd56f95" kindref="member">has_header</ref>(location));</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1af3c17b0c0410a6c525992bb6dcbf862f" kindref="member">test_footer</ref>()</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1header__footer" kindref="compound">xlnt::header_footer</ref><sp/>hf;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>hf_loc<sp/>=<sp/><ref refid="classxlnt_1_1header__footer_1a2e5dabd2d3465ee7f5738befffc43375" kindref="member">xlnt::header_footer::location</ref>;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>location<sp/>:<sp/>{<ref refid="alignment_8hpp_1a58c76f848f15df202254c1daec468567" kindref="member">hf_loc::left</ref>,<sp/><ref refid="alignment_8hpp_1a02389a9bda512aa8f8a3345f4fa27f25" kindref="member">hf_loc::center</ref>,<sp/><ref refid="alignment_8hpp_1a25331d5f9601b8cb1ce57490930d7c01" kindref="member">hf_loc::right</ref>})</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1affb3fd26b73b730f38ff592c66cc276e" kindref="member">has_footer</ref>(location));</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1a2e0bbda6e37523df9dad8ca092939687" kindref="member">has_odd_even_footer</ref>(location));</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1a658caad044f3ec6ca5222d70fd1cdd80" kindref="member">has_first_page_footer</ref>(location));</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hf.<ref refid="classxlnt_1_1header__footer_1a80c4c4499ac37deeec4575744c84a994" kindref="member">footer</ref>(location,<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(hf.<ref refid="classxlnt_1_1header__footer_1affb3fd26b73b730f38ff592c66cc276e" kindref="member">has_footer</ref>(location));</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1a2e0bbda6e37523df9dad8ca092939687" kindref="member">has_odd_even_footer</ref>(location));</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1a658caad044f3ec6ca5222d70fd1cdd80" kindref="member">has_first_page_footer</ref>(location));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(hf.<ref refid="classxlnt_1_1header__footer_1a80c4c4499ac37deeec4575744c84a994" kindref="member">footer</ref>(location),<sp/></highlight><highlight class="stringliteral">&quot;abc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hf.<ref refid="classxlnt_1_1header__footer_1ac20a33275e5077ceb6f0a4abbd91359c" kindref="member">clear_footer</ref>(location);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!hf.<ref refid="classxlnt_1_1header__footer_1affb3fd26b73b730f38ff592c66cc276e" kindref="member">has_footer</ref>(location));</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a5246bf855929c90f49fdf45c14346852" kindref="member">test_page_setup</ref>()</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structxlnt_1_1page__setup" kindref="compound">xlnt::page_setup</ref><sp/><ref refid="namespacesetup" kindref="compound">setup</ref>;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesetup" kindref="compound">setup</ref>.page_break(<ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">xlnt::page_break::column</ref>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(<ref refid="namespacesetup" kindref="compound">setup</ref>.page_break(),<sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">xlnt::page_break::column</ref>);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacesetup" kindref="compound">setup</ref>.scale(1.23);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(<ref refid="namespacesetup" kindref="compound">setup</ref>.scale(),<sp/>1.23);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1ada8cf249966fafa4e9cd3f42291430b5" kindref="member">test_unique_sheet_name</ref>()</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>first_created<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" kindref="member">create_sheet</ref>();</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>second_created<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" kindref="member">create_sheet</ref>();</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1ad026cf5049f92f630821e78608fc0ce9" kindref="member">xlnt_assert_differs</ref>(first_created.title(),<sp/>second_created.title());</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a87020ca553b5d3871d00b02ed082f12d" kindref="member">test_page_margins</ref>()</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>margins<sp/>=<sp/>ws.<ref refid="classxlnt_1_1worksheet_1aa4285c468a7384649abcf1a1a92cba1c" kindref="member">page_margins</ref>();</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margins.<ref refid="classxlnt_1_1page__margins_1a235332633fe353e3f2765899d0c57845" kindref="member">top</ref>(0);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margins.bottom(1);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margins.header(2);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margins.footer(3);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margins.left(4);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>margins.right(5);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.page_margins(margins);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_page_margins());</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.page_margins().top(),<sp/>0);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.page_margins().bottom(),<sp/>1);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.page_margins().header(),<sp/>2);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.page_margins().footer(),<sp/>3);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.page_margins().left(),<sp/>4);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.page_margins().right(),<sp/>5);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1adc7836eb81866bd1080e703cacade1b2" kindref="member">test_garbage_collect</ref>()</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dimensions<sp/>=<sp/>ws.<ref refid="classxlnt_1_1worksheet_1a261f05d8a62977747299d92461fc9e84" kindref="member">calculate_dimension</ref>();</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(dimensions,<sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.garbage_collect();</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimensions<sp/>=<sp/>ws.calculate_dimension();</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(dimensions,<sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref>(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a0640543176542f910df402364e8eee0b" kindref="member">test_has_cell</ref>()</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A3&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_cell(</highlight><highlight class="stringliteral">&quot;A3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1aed82f4d4823f5238c5e1d9b77b15a720" kindref="member">test_get_range_by_string</ref>()</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value(3.14);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A3&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B3&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacepybind11_1_1detail_1a33c4d7ef0a3ea3fc3c06ec4e58ee050c" kindref="member">range</ref><sp/>=<sp/>ws.range(</highlight><highlight class="stringliteral">&quot;A2:B3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>range_iter<sp/>=<sp/><ref refid="namespacepybind11_1_1detail_1a33c4d7ef0a3ea3fc3c06ec4e58ee050c" kindref="member">range</ref>.begin();</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref><sp/>=<sp/>*range_iter;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>row_iter<sp/>=<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>.begin();</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>((*row_iter).value&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&gt;(),<sp/>3.14);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>((*row_iter).reference(),<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>((*row_iter),<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>.front());</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_iter++;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>((*row_iter).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;text&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>((*row_iter).reference(),<sp/></highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>((*row_iter),<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>.back());</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range_iter++;</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref><sp/>=<sp/>*range_iter;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_iter<sp/>=<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>.begin();</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>((*row_iter).value&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>((*row_iter).reference(),<sp/></highlight><highlight class="stringliteral">&quot;A3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range_iter<sp/>=<sp/><ref refid="namespacepybind11_1_1detail_1a33c4d7ef0a3ea3fc3c06ec4e58ee050c" kindref="member">range</ref>.end();</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>range_iter--;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref><sp/>=<sp/>*range_iter;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_iter<sp/>=<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>.end();</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_iter--;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>((*row_iter).value&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1af99d2100b8944fd15614b9135912fb97" kindref="member">test_operators</ref>()</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" kindref="member">create_sheet</ref>();</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" kindref="member">create_sheet</ref>();</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws1<sp/>=<sp/>wb[1];</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws2<sp/>=<sp/>wb[2];</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1ad026cf5049f92f630821e78608fc0ce9" kindref="member">xlnt_assert_differs</ref>(ws1,<sp/>ws2);</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws1[<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">)].value(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws1[<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">)].value&lt;bool&gt;(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>((*(*ws1.range(</highlight><highlight class="stringliteral">&quot;A2:A2&quot;</highlight><highlight class="normal">).begin()).begin()).value&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws1.create_named_range(</highlight><highlight class="stringliteral">&quot;rangey&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A2:A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws1.range(</highlight><highlight class="stringliteral">&quot;rangey&quot;</highlight><highlight class="normal">),<sp/>ws1.range(</highlight><highlight class="stringliteral">&quot;A2:A2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws1.range(</highlight><highlight class="stringliteral">&quot;A2:A2&quot;</highlight><highlight class="normal">),<sp/>ws1.range(</highlight><highlight class="stringliteral">&quot;A2:A2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws1.range(</highlight><highlight class="stringliteral">&quot;rangey&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>ws1.range(</highlight><highlight class="stringliteral">&quot;A2:A3&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws1.range(</highlight><highlight class="stringliteral">&quot;rangey&quot;</highlight><highlight class="normal">).cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">),<sp/>ws1.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a35fda1503aad7ab9cd4145db7f0fb883" kindref="member">test_reserve</ref>()</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1ad914d72ec3dbc3458814f2680bc62854" kindref="member">reserve</ref>(1000);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>actual<sp/>tests<sp/>go<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a64313bf752166825cec70e373b51b91d" kindref="member">test_iterate</ref>()</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;B3&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;C7&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;C7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref><sp/>:<sp/>ws)</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>:<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell.has_value())</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.reference().to_string(),<sp/>cell.value&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws_const<sp/>=<sp/>ws;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref><sp/>:<sp/>ws_const)</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>:<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell.has_value())</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cell.reference().to_string(),<sp/>cell.value&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>const_range<sp/>=<sp/>ws_const.range(</highlight><highlight class="stringliteral">&quot;B3:C7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>const_range_iter<sp/>=<sp/>const_range.cbegin();</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_range_iter++;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const_range_iter--;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(const_range_iter,<sp/>const_range.begin());</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(<ref refid="classxlnt_1_1cell__iterator" kindref="compound">xlnt::cell_iterator</ref>{},<sp/><ref refid="classxlnt_1_1cell__iterator" kindref="compound">xlnt::cell_iterator</ref>{});</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(<ref refid="classxlnt_1_1range__iterator" kindref="compound">xlnt::range_iterator</ref>{},<sp/><ref refid="classxlnt_1_1range__iterator" kindref="compound">xlnt::range_iterator</ref>{});</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1aa9a4929175995cf6377015ddf789e536" kindref="member">test_range_reference</ref>()</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>ref1(</highlight><highlight class="stringliteral">&quot;A1:A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ref1.<ref refid="classxlnt_1_1range__reference_1abdab4eb2d5129364eb08abc0059b9d74" kindref="member">is_single_cell</ref>());</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>ref2(</highlight><highlight class="stringliteral">&quot;A1:B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ref2.<ref refid="classxlnt_1_1range__reference_1abdab4eb2d5129364eb08abc0059b9d74" kindref="member">is_single_cell</ref>());</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ref1<sp/>==<sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref>(</highlight><highlight class="stringliteral">&quot;A1:A1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ref1<sp/>!=<sp/>ref2);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ref1<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;A1:A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ref1<sp/>==<sp/>std::string(</highlight><highlight class="stringliteral">&quot;A1:A1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(std::string(</highlight><highlight class="stringliteral">&quot;A1:A1&quot;</highlight><highlight class="normal">)<sp/>==<sp/>ref1);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(</highlight><highlight class="stringliteral">&quot;A1:A1&quot;</highlight><highlight class="normal"><sp/>==<sp/>ref1);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ref1<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;A1:B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ref1<sp/>!=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;A1:B2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(std::string(</highlight><highlight class="stringliteral">&quot;A1:B2&quot;</highlight><highlight class="normal">)<sp/>!=<sp/>ref1);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(</highlight><highlight class="stringliteral">&quot;A1:B2&quot;</highlight><highlight class="normal"><sp/>!=<sp/>ref1);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a3c39f580de9a46bce8ed9c670ccca15e" kindref="member">test_get_point_pos</ref>()</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.point_pos(0,<sp/>0),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1af4d44d32d577286b1006372971fcf525" kindref="member">test_named_range_named_cell_reference</ref>()</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws.create_named_range(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">),<sp/><ref refid="classxlnt_1_1invalid__parameter" kindref="compound">xlnt::invalid_parameter</ref>);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws.create_named_range(</highlight><highlight class="stringliteral">&quot;XFD1048576&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">),<sp/><ref refid="classxlnt_1_1invalid__parameter" kindref="compound">xlnt::invalid_parameter</ref>);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a5d2756df44b343fcb3bdfaf9b0b46440" kindref="member">xlnt_assert_throws_nothing</ref>(ws.create_named_range(</highlight><highlight class="stringliteral">&quot;XFE1048576&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a5d2756df44b343fcb3bdfaf9b0b46440" kindref="member">xlnt_assert_throws_nothing</ref>(ws.create_named_range(</highlight><highlight class="stringliteral">&quot;XFD1048577&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a5d57ce67cc3c3e63950a127b5960903d" kindref="member">test_iteration_skip_empty</ref>()</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;F6&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;F6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;xlnt::cell&gt;<sp/>cells;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref><sp/>:<sp/>ws)</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>:<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells.push_back(cell);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cells.size(),<sp/>2);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cells[0].value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cells[1].value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;F6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws_const<sp/>=<sp/>ws;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;xlnt::cell&gt;<sp/>cells;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref><sp/>:<sp/>ws_const)</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell<sp/>:<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cells.push_back(cell);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cells.size(),<sp/>2);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cells[0].value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(cells[1].value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;F6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a6f3ea3387e33ba2fbd778bc3107842a2" kindref="member">test_dimensions</ref>()</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>workbook;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>workbook.<ref refid="classxlnt_1_1workbook_1ad835d8c19e8312765035c46d212c8c3f" kindref="member">load</ref>(<ref refid="classpath__helper_1a79a139a24788a9d3bb2ac71fb640f4e3" kindref="member">path_helper::test_file</ref>(</highlight><highlight class="stringliteral">&quot;4_every_style.xlsx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>active_sheet<sp/>=<sp/>workbook.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>sheet_range<sp/>=<sp/>active_sheet.<ref refid="classxlnt_1_1worksheet_1a261f05d8a62977747299d92461fc9e84" kindref="member">calculate_dimension</ref>();</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!sheet_range.is_single_cell());</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(sheet_range.width(),<sp/>4);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(sheet_range.height(),<sp/>35);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a67a1206ba44fdaec9f227695c1ed395d" kindref="member">test_view_properties_serialization</ref>()</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_active_cell());</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.active_cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_active_cell());</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.active_cell(),<sp/></highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1aeadec7536f669d4cf356753fa49f3b6b" kindref="member">save</ref>(</highlight><highlight class="stringliteral">&quot;temp.xlsx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb2;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb2.<ref refid="classxlnt_1_1workbook_1ad835d8c19e8312765035c46d212c8c3f" kindref="member">load</ref>(</highlight><highlight class="stringliteral">&quot;temp.xlsx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws2<sp/>=<sp/>wb2.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws2.has_active_cell());</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws2.active_cell(),<sp/></highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a6b86fac1635958a5f3d9143f26f1c082" kindref="member">test_clear_cell</ref>()</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1ad835d8c19e8312765035c46d212c8c3f" kindref="member">load</ref>(<ref refid="classpath__helper_1a79a139a24788a9d3bb2ac71fb640f4e3" kindref="member">path_helper::test_file</ref>(</highlight><highlight class="stringliteral">&quot;4_every_style.xlsx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>ws.<ref refid="classxlnt_1_1worksheet_1a261f05d8a62977747299d92461fc9e84" kindref="member">calculate_dimension</ref>().<ref refid="classxlnt_1_1range__reference_1af5e5413527659c6781ff0a010761b71e" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_row<sp/>=<sp/>ws.highest_row();</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_cell(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(1,<sp/>last_row)));</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.clear_cell(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(1,<sp/>last_row));</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_cell(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(1,<sp/>last_row)));</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.highest_row(),<sp/>last_row);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1aeadec7536f669d4cf356753fa49f3b6b" kindref="member">save</ref>(</highlight><highlight class="stringliteral">&quot;temp.xlsx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb2;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb2.<ref refid="classxlnt_1_1workbook_1ad835d8c19e8312765035c46d212c8c3f" kindref="member">load</ref>(</highlight><highlight class="stringliteral">&quot;temp.xlsx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws2<sp/>=<sp/>wb2.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws2.calculate_dimension().height(),<sp/>height);</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws2.has_cell(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(1,<sp/>last_row)));</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a6850250cd78c0ac3e73a264fabd8e90b" kindref="member">test_clear_row</ref>()</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1ad835d8c19e8312765035c46d212c8c3f" kindref="member">load</ref>(<ref refid="classpath__helper_1a79a139a24788a9d3bb2ac71fb640f4e3" kindref="member">path_helper::test_file</ref>(</highlight><highlight class="stringliteral">&quot;4_every_style.xlsx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>ws.<ref refid="classxlnt_1_1worksheet_1a261f05d8a62977747299d92461fc9e84" kindref="member">calculate_dimension</ref>().<ref refid="classxlnt_1_1range__reference_1af5e5413527659c6781ff0a010761b71e" kindref="member">height</ref>();</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>last_row<sp/>=<sp/>ws.highest_row();</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_cell(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(1,<sp/>last_row)));</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.clear_row(last_row);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_cell(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(1,<sp/>last_row)));</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.highest_row(),<sp/>last_row<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1aeadec7536f669d4cf356753fa49f3b6b" kindref="member">save</ref>(</highlight><highlight class="stringliteral">&quot;temp.xlsx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb2;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb2.<ref refid="classxlnt_1_1workbook_1ad835d8c19e8312765035c46d212c8c3f" kindref="member">load</ref>(</highlight><highlight class="stringliteral">&quot;temp.xlsx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws2<sp/>=<sp/>wb2.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws2.calculate_dimension().height(),<sp/>height<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws2.has_cell(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(1,<sp/>last_row)));</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a2892afb3ce764aff1bf8e347f2bfbe38" kindref="member">test_set_title</ref>()</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws1<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>titles<sp/>are<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws1.title(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/><ref refid="classxlnt_1_1invalid__sheet__title" kindref="compound">xlnt::invalid_sheet_title</ref>);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>titles<sp/>longer<sp/>than<sp/>31<sp/>chars<sp/>are<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>test_long_title(32,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(test_long_title.size()<sp/>&gt;<sp/>31);</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws1.title(test_long_title),<sp/><ref refid="classxlnt_1_1invalid__sheet__title" kindref="compound">xlnt::invalid_sheet_title</ref>);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>titles<sp/>containing<sp/>any<sp/>of<sp/>the<sp/>following<sp/>characters<sp/>are<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>invalid_chars<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;*:/\\?[]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;c<sp/>:<sp/>invalid_chars)</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>invalid_char<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;Sheet&quot;</highlight><highlight class="normal">)<sp/>+<sp/>c;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws1.title(invalid_char),<sp/><ref refid="classxlnt_1_1invalid__sheet__title" kindref="compound">xlnt::invalid_sheet_title</ref>);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>duplicate<sp/>names<sp/>are<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws2<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" kindref="member">create_sheet</ref>();</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws2.title(ws1.title()),<sp/><ref refid="classxlnt_1_1invalid__sheet__title" kindref="compound">xlnt::invalid_sheet_title</ref>);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws1.title(ws2.title()),<sp/><ref refid="classxlnt_1_1invalid__sheet__title" kindref="compound">xlnt::invalid_sheet_title</ref>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>naming<sp/>as<sp/>self<sp/>is<sp/>valid<sp/>and<sp/>is<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws1_title<sp/>=<sp/>ws1.title();</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws2_title<sp/>=<sp/>ws2.title();</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a5d2756df44b343fcb3bdfaf9b0b46440" kindref="member">xlnt_assert_throws_nothing</ref>(ws1.title(ws1.title()));</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a5d2756df44b343fcb3bdfaf9b0b46440" kindref="member">xlnt_assert_throws_nothing</ref>(ws2.title(ws2.title()));</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws1_title<sp/>==<sp/>ws1.title());</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws2_title<sp/>==<sp/>ws2.title());</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a16539a9f518e42fd05b9028acf5f9e8e" kindref="member">test_set_title_unicode</ref>()</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>31<sp/>char<sp/>limit<sp/>also<sp/>applies<sp/>to<sp/>4-byte<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>test_long_utf8_title(</highlight><highlight class="stringliteral">&quot;巧みな外交は戦争を避ける助けとなる。&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a5d2756df44b343fcb3bdfaf9b0b46440" kindref="member">xlnt_assert_throws_nothing</ref>(ws.title(test_long_utf8_title));</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>invalid_unicode(</highlight><highlight class="stringliteral">&quot;\xe6\x97\xa5\xd1\x88\xfa&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws.title(invalid_unicode),</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1exception" kindref="compound">xlnt::exception</ref>);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1ae606187f724e17413832210d4ac9cfd5" kindref="member">test_phonetics</ref>()</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1ad835d8c19e8312765035c46d212c8c3f" kindref="member">load</ref>(<ref refid="classpath__helper_1a79a139a24788a9d3bb2ac71fb640f4e3" kindref="member">path_helper::test_file</ref>(</highlight><highlight class="stringliteral">&quot;15_phonetics.xlsx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).phonetics_visible(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value&lt;<ref refid="classxlnt_1_1rich__text" kindref="compound">xlnt::rich_text</ref>&gt;().<ref refid="classxlnt_1_1rich__text_1af9bca6bb270d5cd4c6cb3857c44e036d" kindref="member">phonetic_runs</ref>()[0].text,<sp/></highlight><highlight class="stringliteral">&quot;シュウ<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).phonetics_visible(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">).phonetics_visible(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb.<ref refid="classxlnt_1_1workbook_1aeadec7536f669d4cf356753fa49f3b6b" kindref="member">save</ref>(</highlight><highlight class="stringliteral">&quot;temp.xlsx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb2;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wb2.<ref refid="classxlnt_1_1workbook_1ad835d8c19e8312765035c46d212c8c3f" kindref="member">load</ref>(</highlight><highlight class="stringliteral">&quot;temp.xlsx&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws2<sp/>=<sp/>wb2.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws2.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).phonetics_visible(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws2.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value&lt;<ref refid="classxlnt_1_1rich__text" kindref="compound">xlnt::rich_text</ref>&gt;().<ref refid="classxlnt_1_1rich__text_1af9bca6bb270d5cd4c6cb3857c44e036d" kindref="member">phonetic_runs</ref>()[0].text,<sp/></highlight><highlight class="stringliteral">&quot;シュウ<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws2.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).phonetics_visible(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws2.cell(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">).phonetics_visible(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1aed45bf939c91e01b950d6c1df9c801a1" kindref="member">test_insert_rows</ref>()</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>a<sp/>2x2<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1row__properties" kindref="compound">xlnt::row_properties</ref><sp/>row_prop;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_prop.<ref refid="classxlnt_1_1row__properties_1a27e8da8bc5fe827fba0f4a7cc49d487d" kindref="member">height</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_row_properties(1,<sp/>row_prop);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_prop.<ref refid="classxlnt_1_1row__properties_1a27e8da8bc5fe827fba0f4a7cc49d487d" kindref="member">height</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_row_properties(2,<sp/>row_prop);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1column__properties" kindref="compound">xlnt::column_properties</ref><sp/>col_prop;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_prop.<ref refid="classxlnt_1_1column__properties_1afcbf666e636ed7e9b861a3fadd464c68" kindref="member">width</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_column_properties(1,<sp/>col_prop);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_prop.<ref refid="classxlnt_1_1column__properties_1afcbf666e636ed7e9b861a3fadd464c68" kindref="member">width</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_column_properties(2,<sp/>col_prop);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.insert_rows(2,<sp/>2);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>row<sp/>should<sp/>be<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.row_properties(1).height,<sp/>1);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>and<sp/>third<sp/>rows<sp/>should<sp/>be<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_row_properties(2));</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.cell(</highlight><highlight class="stringliteral">&quot;A3&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.cell(</highlight><highlight class="stringliteral">&quot;B3&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_row_properties(3));</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fourth<sp/>row<sp/>should<sp/>have<sp/>the<sp/>contents<sp/>and<sp/>properties<sp/>of<sp/>the<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;B4&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;B4&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.row_properties(4).height,<sp/>2);</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>column<sp/>properties<sp/>should<sp/>remain<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_column_properties(1));</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_column_properties(2));</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a1b770fd3df5508a52da1d12ae1b56ae8" kindref="member">test_insert_columns</ref>()</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>a<sp/>2x2<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1row__properties" kindref="compound">xlnt::row_properties</ref><sp/>row_prop;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_prop.<ref refid="classxlnt_1_1row__properties_1a27e8da8bc5fe827fba0f4a7cc49d487d" kindref="member">height</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_row_properties(1,<sp/>row_prop);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_prop.<ref refid="classxlnt_1_1row__properties_1a27e8da8bc5fe827fba0f4a7cc49d487d" kindref="member">height</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_row_properties(2,<sp/>row_prop);</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1column__properties" kindref="compound">xlnt::column_properties</ref><sp/>col_prop;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_prop.<ref refid="classxlnt_1_1column__properties_1afcbf666e636ed7e9b861a3fadd464c68" kindref="member">width</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_column_properties(1,<sp/>col_prop);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_prop.<ref refid="classxlnt_1_1column__properties_1afcbf666e636ed7e9b861a3fadd464c68" kindref="member">width</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_column_properties(2,<sp/>col_prop);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.insert_columns(2,<sp/>2);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column<sp/>should<sp/>be<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.column_properties(1).width,<sp/>1);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>and<sp/>third<sp/>columns<sp/>should<sp/>be<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_column_properties(2));</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.cell(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.cell(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_column_properties(3));</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fourth<sp/>column<sp/>should<sp/>have<sp/>the<sp/>contents<sp/>and<sp/>properties<sp/>of<sp/>the<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;D1&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;D2&quot;</highlight><highlight class="normal">).has_value());</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;D1&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;D2&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.column_properties(4).width,<sp/>2);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>row<sp/>properties<sp/>should<sp/>remain<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.row_properties(1).height,<sp/>1);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.row_properties(2).height,<sp/>2);</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1ae9f62ee7f44fd36c910cb0d9221c3391" kindref="member">test_delete_rows</ref>()</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>a<sp/>4x4<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>4;<sp/>++i)</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>4;<sp/>++j)</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(i,<sp/>j)).value(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(i,<sp/>j).<ref refid="namespacexlnt_1_1detail_1a4a5416332c649035ad6503ea07a7d67f" kindref="member">to_string</ref>());</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1row__properties" kindref="compound">xlnt::row_properties</ref><sp/>row_prop;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_prop.<ref refid="classxlnt_1_1row__properties_1a27e8da8bc5fe827fba0f4a7cc49d487d" kindref="member">height</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_row_properties(i,<sp/>row_prop);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1column__properties" kindref="compound">xlnt::column_properties</ref><sp/>col_prop;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_prop.<ref refid="classxlnt_1_1column__properties_1afcbf666e636ed7e9b861a3fadd464c68" kindref="member">width</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_column_properties(i,<sp/>col_prop);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.delete_rows(2,<sp/>2);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>row<sp/>should<sp/>remain<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;D1&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;D1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_row_properties(1));</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.row_properties(1).height,<sp/>1);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>row<sp/>should<sp/>have<sp/>the<sp/>contents<sp/>and<sp/>properties<sp/>of<sp/>the<sp/>fourth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;B4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;C2&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;C4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;D2&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_row_properties(2));</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.row_properties(2).height,<sp/>4);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>third<sp/>and<sp/>fourth<sp/>rows<sp/>should<sp/>be<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>empty_range<sp/>=<sp/>ws.range(</highlight><highlight class="stringliteral">&quot;A3:D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>empty_row<sp/>:<sp/>empty_range)</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>empty_cell<sp/>:<sp/>empty_row)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!empty_cell.has_value());</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_row_properties(3));</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_row_properties(4));</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>column<sp/>properties<sp/>should<sp/>remain<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>4;<sp/>++i)</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_column_properties(i));</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.column_properties(i).width,<sp/>i);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a6fd31096c0af789040ee81a66b7a4782" kindref="member">test_delete_columns</ref>()</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>a<sp/>4x4<sp/>grid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>4;<sp/>++i)</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/>4;<sp/>++j)</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">cell</ref>(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(i,<sp/>j)).value(<ref refid="classxlnt_1_1cell__reference" kindref="compound">xlnt::cell_reference</ref>(i,<sp/>j).<ref refid="namespacexlnt_1_1detail_1a4a5416332c649035ad6503ea07a7d67f" kindref="member">to_string</ref>());</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1row__properties" kindref="compound">xlnt::row_properties</ref><sp/>row_prop;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_prop.<ref refid="classxlnt_1_1row__properties_1a27e8da8bc5fe827fba0f4a7cc49d487d" kindref="member">height</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_row_properties(i,<sp/>row_prop);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1column__properties" kindref="compound">xlnt::column_properties</ref><sp/>col_prop;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_prop.<ref refid="classxlnt_1_1column__properties_1afcbf666e636ed7e9b861a3fadd464c68" kindref="member">width</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.add_column_properties(i,<sp/>col_prop);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.delete_columns(2,<sp/>2);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>column<sp/>should<sp/>remain<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A3&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;A4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_column_properties(</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.column_properties(</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">).width.get(),<sp/>1);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>second<sp/>column<sp/>should<sp/>have<sp/>the<sp/>contents<sp/>and<sp/>properties<sp/>of<sp/>the<sp/>fourth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;B1&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;D1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;B2&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;D2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;B3&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;D3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.cell(</highlight><highlight class="stringliteral">&quot;B4&quot;</highlight><highlight class="normal">).value&lt;std::string&gt;(),<sp/></highlight><highlight class="stringliteral">&quot;D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_column_properties(</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.column_properties(</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">).width.get(),<sp/>4);</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>third<sp/>and<sp/>fourth<sp/>columns<sp/>should<sp/>be<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>empty_range<sp/>=<sp/>ws.range(</highlight><highlight class="stringliteral">&quot;C1:D4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>empty_row<sp/>:<sp/>empty_range)</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>empty_cell<sp/>:<sp/>empty_row)</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!empty_cell.has_value());</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_column_properties(</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!ws.has_column_properties(</highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>row<sp/>properties<sp/>should<sp/>remain<sp/>unchanged</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>4;<sp/>++i)</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(ws.has_row_properties(i));</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(ws.row_properties(i).height,<sp/>i);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1acc49343c20e40337c3a99a924ff9eedc" kindref="member">test_insert_too_many</ref>()</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aae9b7a77c74300ef311f9fb705f46ebb" kindref="member">xlnt_assert_throws</ref>(ws.insert_rows(10,<sp/>4294967290),</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1exception" kindref="compound">xlnt::exception</ref>);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite_1a2a39bf4fdfa3dfd2380e2473150306ad" kindref="member">test_insert_delete_moves_merges</ref>()</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1workbook" kindref="compound">xlnt::workbook</ref><sp/>wb;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/>wb.<ref refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" kindref="member">active_sheet</ref>();</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.<ref refid="classxlnt_1_1worksheet_1a5e51e2f8e3396adfc0a2751a3826aebf" kindref="member">merge_cells</ref>(</highlight><highlight class="stringliteral">&quot;A1:A2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.merge_cells(</highlight><highlight class="stringliteral">&quot;B2:B3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.merge_cells(</highlight><highlight class="stringliteral">&quot;C3:C4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.merge_cells(</highlight><highlight class="stringliteral">&quot;A5:B5&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.merge_cells(</highlight><highlight class="stringliteral">&quot;B6:C6&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.merge_cells(</highlight><highlight class="stringliteral">&quot;C7:D7&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.insert_rows(3,<sp/>3);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.insert_columns(3,<sp/>3);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>merged<sp/>=<sp/>ws.merged_ranges();</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;xlnt::range_reference&gt;<sp/>expected<sp/>=</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;A1:A2&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/>stays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;B2:B6&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/>expands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;F6:F7&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/>shifts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;A8:B8&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/>stays<sp/>(shifted<sp/>down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;B9:F9&quot;</highlight><highlight class="normal"><sp/><sp/><sp/>},<sp/></highlight><highlight class="comment">//<sp/>expands<sp/>(shifted<sp/>down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;F10:G10&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight><highlight class="comment">//<sp/>shifts<sp/>(shifted<sp/>down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(merged,<sp/>expected);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.delete_rows(4,<sp/>2);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ws.delete_columns(4,<sp/>2);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>merged<sp/>=<sp/>ws.merged_ranges();</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;xlnt::range_reference&gt;<sp/>expected<sp/>=</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;A1:A2&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight><highlight class="comment">//<sp/>stays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;B2:B4&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight><highlight class="comment">//<sp/>expands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;D4:D5&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight><highlight class="comment">//<sp/>shifts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;A6:B6&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight><highlight class="comment">//<sp/>stays<sp/>(shifted<sp/>down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;B7:D7&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight><highlight class="comment">//<sp/>expands<sp/>(shifted<sp/>down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1range__reference" kindref="compound">xlnt::range_reference</ref><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;D8:E8&quot;</highlight><highlight class="normal"><sp/>},<sp/></highlight><highlight class="comment">//<sp/>shifts<sp/>(shifted<sp/>down)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1aa52c020774e7cdb15a789ad2711b1779" kindref="member">xlnt_assert_equals</ref>(merged,<sp/>expected);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1585"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classworksheet__test__suite" kindref="compound">worksheet_test_suite</ref><sp/>x;</highlight></codeline>
    </programlisting>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/tests/worksheet/worksheet_test_suite.cpp"/>
  </compounddef>
</doxygen>
