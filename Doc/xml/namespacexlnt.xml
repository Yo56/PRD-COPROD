<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="namespacexlnt" kind="namespace" language="C++">
    <compoundname>xlnt</compoundname>
    <innerclass refid="classxlnt_1_1cell" prot="public">xlnt::cell</innerclass>
    <innerclass refid="structxlnt_1_1cell__reference__hash" prot="public">xlnt::cell_reference_hash</innerclass>
    <innerclass refid="classxlnt_1_1cell__reference" prot="public">xlnt::cell_reference</innerclass>
    <innerclass refid="classxlnt_1_1comment" prot="public">xlnt::comment</innerclass>
    <innerclass refid="classxlnt_1_1hyperlink" prot="public">xlnt::hyperlink</innerclass>
    <innerclass refid="classxlnt_1_1column__t" prot="public">xlnt::column_t</innerclass>
    <innerclass refid="structxlnt_1_1column__hash" prot="public">xlnt::column_hash</innerclass>
    <innerclass refid="structxlnt_1_1phonetic__run" prot="public">xlnt::phonetic_run</innerclass>
    <innerclass refid="classxlnt_1_1rich__text" prot="public">xlnt::rich_text</innerclass>
    <innerclass refid="classxlnt_1_1rich__text__hash" prot="public">xlnt::rich_text_hash</innerclass>
    <innerclass refid="structxlnt_1_1rich__text__run" prot="public">xlnt::rich_text_run</innerclass>
    <innerclass refid="classxlnt_1_1ext__list" prot="public">xlnt::ext_list</innerclass>
    <innerclass refid="classxlnt_1_1manifest" prot="public">xlnt::manifest</innerclass>
    <innerclass refid="classxlnt_1_1relationship" prot="public">xlnt::relationship</innerclass>
    <innerclass refid="classxlnt_1_1uri" prot="public">xlnt::uri</innerclass>
    <innerclass refid="classxlnt_1_1alignment" prot="public">xlnt::alignment</innerclass>
    <innerclass refid="classxlnt_1_1border" prot="public">xlnt::border</innerclass>
    <innerclass refid="classxlnt_1_1indexed__color" prot="public">xlnt::indexed_color</innerclass>
    <innerclass refid="classxlnt_1_1theme__color" prot="public">xlnt::theme_color</innerclass>
    <innerclass refid="classxlnt_1_1rgb__color" prot="public">xlnt::rgb_color</innerclass>
    <innerclass refid="classxlnt_1_1color" prot="public">xlnt::color</innerclass>
    <innerclass refid="classxlnt_1_1condition" prot="public">xlnt::condition</innerclass>
    <innerclass refid="classxlnt_1_1conditional__format" prot="public">xlnt::conditional_format</innerclass>
    <innerclass refid="classxlnt_1_1pattern__fill" prot="public">xlnt::pattern_fill</innerclass>
    <innerclass refid="classxlnt_1_1gradient__fill" prot="public">xlnt::gradient_fill</innerclass>
    <innerclass refid="classxlnt_1_1fill" prot="public">xlnt::fill</innerclass>
    <innerclass refid="classxlnt_1_1font" prot="public">xlnt::font</innerclass>
    <innerclass refid="classxlnt_1_1optional" prot="public">xlnt::optional</innerclass>
    <innerclass refid="classxlnt_1_1format" prot="public">xlnt::format</innerclass>
    <innerclass refid="classxlnt_1_1number__format" prot="public">xlnt::number_format</innerclass>
    <innerclass refid="classxlnt_1_1protection" prot="public">xlnt::protection</innerclass>
    <innerclass refid="classxlnt_1_1style" prot="public">xlnt::style</innerclass>
    <innerclass refid="structxlnt_1_1date" prot="public">xlnt::date</innerclass>
    <innerclass refid="structxlnt_1_1datetime" prot="public">xlnt::datetime</innerclass>
    <innerclass refid="classxlnt_1_1exception" prot="public">xlnt::exception</innerclass>
    <innerclass refid="classxlnt_1_1invalid__parameter" prot="public">xlnt::invalid_parameter</innerclass>
    <innerclass refid="classxlnt_1_1invalid__sheet__title" prot="public">xlnt::invalid_sheet_title</innerclass>
    <innerclass refid="classxlnt_1_1missing__number__format" prot="public">xlnt::missing_number_format</innerclass>
    <innerclass refid="classxlnt_1_1invalid__file" prot="public">xlnt::invalid_file</innerclass>
    <innerclass refid="classxlnt_1_1illegal__character" prot="public">xlnt::illegal_character</innerclass>
    <innerclass refid="classxlnt_1_1invalid__data__type" prot="public">xlnt::invalid_data_type</innerclass>
    <innerclass refid="classxlnt_1_1invalid__column__index" prot="public">xlnt::invalid_column_index</innerclass>
    <innerclass refid="classxlnt_1_1invalid__cell__reference" prot="public">xlnt::invalid_cell_reference</innerclass>
    <innerclass refid="classxlnt_1_1invalid__attribute" prot="public">xlnt::invalid_attribute</innerclass>
    <innerclass refid="classxlnt_1_1key__not__found" prot="public">xlnt::key_not_found</innerclass>
    <innerclass refid="classxlnt_1_1no__visible__worksheets" prot="public">xlnt::no_visible_worksheets</innerclass>
    <innerclass refid="classxlnt_1_1unhandled__switch__case" prot="public">xlnt::unhandled_switch_case</innerclass>
    <innerclass refid="classxlnt_1_1unsupported" prot="public">xlnt::unsupported</innerclass>
    <innerclass refid="classxlnt_1_1path" prot="public">xlnt::path</innerclass>
    <innerclass refid="structxlnt_1_1scoped__enum__hash" prot="public">xlnt::scoped_enum_hash</innerclass>
    <innerclass refid="structxlnt_1_1time" prot="public">xlnt::time</innerclass>
    <innerclass refid="structxlnt_1_1timedelta" prot="public">xlnt::timedelta</innerclass>
    <innerclass refid="classxlnt_1_1variant" prot="public">xlnt::variant</innerclass>
    <innerclass refid="classxlnt_1_1calculation__properties" prot="public">xlnt::calculation_properties</innerclass>
    <innerclass refid="classxlnt_1_1document__security" prot="public">xlnt::document_security</innerclass>
    <innerclass refid="classxlnt_1_1external__book" prot="public">xlnt::external_book</innerclass>
    <innerclass refid="classxlnt_1_1named__range" prot="public">xlnt::named_range</innerclass>
    <innerclass refid="classxlnt_1_1streaming__workbook__reader" prot="public">xlnt::streaming_workbook_reader</innerclass>
    <innerclass refid="classxlnt_1_1streaming__workbook__writer" prot="public">xlnt::streaming_workbook_writer</innerclass>
    <innerclass refid="classxlnt_1_1theme" prot="public">xlnt::theme</innerclass>
    <innerclass refid="classxlnt_1_1workbook" prot="public">xlnt::workbook</innerclass>
    <innerclass refid="classxlnt_1_1workbook__view" prot="public">xlnt::workbook_view</innerclass>
    <innerclass refid="classxlnt_1_1worksheet__iterator" prot="public">xlnt::worksheet_iterator</innerclass>
    <innerclass refid="classxlnt_1_1const__worksheet__iterator" prot="public">xlnt::const_worksheet_iterator</innerclass>
    <innerclass refid="classxlnt_1_1cell__iterator" prot="public">xlnt::cell_iterator</innerclass>
    <innerclass refid="classxlnt_1_1const__cell__iterator" prot="public">xlnt::const_cell_iterator</innerclass>
    <innerclass refid="classxlnt_1_1cell__vector" prot="public">xlnt::cell_vector</innerclass>
    <innerclass refid="classxlnt_1_1column__properties" prot="public">xlnt::column_properties</innerclass>
    <innerclass refid="classxlnt_1_1header__footer" prot="public">xlnt::header_footer</innerclass>
    <innerclass refid="classxlnt_1_1page__margins" prot="public">xlnt::page_margins</innerclass>
    <innerclass refid="structxlnt_1_1page__setup" prot="public">xlnt::page_setup</innerclass>
    <innerclass refid="structxlnt_1_1pane" prot="public">xlnt::pane</innerclass>
    <innerclass refid="classxlnt_1_1phonetic__pr" prot="public">xlnt::phonetic_pr</innerclass>
    <innerclass refid="structxlnt_1_1print__options" prot="public">xlnt::print_options</innerclass>
    <innerclass refid="classxlnt_1_1range" prot="public">xlnt::range</innerclass>
    <innerclass refid="classxlnt_1_1range__iterator" prot="public">xlnt::range_iterator</innerclass>
    <innerclass refid="classxlnt_1_1const__range__iterator" prot="public">xlnt::const_range_iterator</innerclass>
    <innerclass refid="classxlnt_1_1range__reference" prot="public">xlnt::range_reference</innerclass>
    <innerclass refid="classxlnt_1_1row__properties" prot="public">xlnt::row_properties</innerclass>
    <innerclass refid="classxlnt_1_1selection" prot="public">xlnt::selection</innerclass>
    <innerclass refid="classxlnt_1_1sheet__format__properties" prot="public">xlnt::sheet_format_properties</innerclass>
    <innerclass refid="structxlnt_1_1sheet__pr" prot="public">xlnt::sheet_pr</innerclass>
    <innerclass refid="classxlnt_1_1sheet__protection" prot="public">xlnt::sheet_protection</innerclass>
    <innerclass refid="classxlnt_1_1sheet__view" prot="public">xlnt::sheet_view</innerclass>
    <innerclass refid="classxlnt_1_1worksheet" prot="public">xlnt::worksheet</innerclass>
    <innerclass refid="classxlnt_1_1python__streambuf" prot="public">xlnt::python_streambuf</innerclass>
    <innerclass refid="structxlnt_1_1constants" prot="public">xlnt::constants</innerclass>
    <innernamespace refid="namespacexlnt_1_1benchmarks">xlnt::benchmarks</innernamespace>
    <innernamespace refid="namespacexlnt_1_1detail">xlnt::detail</innernamespace>
    <innernamespace refid="namespacexlnt_1_1drawing">xlnt::drawing</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacexlnt_1a8dc0eda024e26470579fd066826f64f3" prot="public" static="no" strong="yes">
        <type>int</type>
        <name>row_or_col_t</name>
        <enumvalue id="namespacexlnt_1a8dc0eda024e26470579fd066826f64f3af1965a857bc285d26fe22023aa5ab50d" prot="public">
          <name>row</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a8dc0eda024e26470579fd066826f64f3a1afd32818d1c9525f82aff4c09efd254" prot="public">
          <name>column</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/index_types.hpp" line="271" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/index_types.hpp" bodystart="272" bodyend="275"/>
      </memberdef>
      <memberdef kind="enum" id="namespacexlnt_1a48b08fbcfa6c350d50d193b4f3feb0a1" prot="public" static="no" strong="yes">
        <type></type>
        <name>color_type</name>
        <enumvalue id="namespacexlnt_1a48b08fbcfa6c350d50d193b4f3feb0a1a7efb96e1de8fcda98dee6e2a29a521f0" prot="public">
          <name>indexed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a48b08fbcfa6c350d50d193b4f3feb0a1af484570d7cf557020e11ace406901b10" prot="public">
          <name>theme</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a48b08fbcfa6c350d50d193b4f3feb0a1aef70a6546536ccd835479f6cddc0188e" prot="public">
          <name>rgb</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Some colors are references to colors rather than having a particular RGB value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="154" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="enum" id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029d" prot="public" static="no" strong="yes">
        <type></type>
        <name>core_property</name>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029dac4ef352f74e502ef5e7bc98e6f4e493d" prot="public">
          <name>category</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029da1c0020a801c87fc4f059dcc2a113e632" prot="public">
          <name>content_status</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029dae2fa538867c3830a859a5b17ab24644b" prot="public">
          <name>created</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029daee2433259b0fe399b40e81d2c98a38b6" prot="public">
          <name>creator</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029da67daf92c833c41c95db874e18fcb2786" prot="public">
          <name>description</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029daf393f3f5e496869a15bc72cbfd56f541" prot="public">
          <name>identifier</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029da59aeb2c9970b7b25be2fab2317e31fcb" prot="public">
          <name>keywords</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029da8512ae7d57b1396273f76fe6ed341a23" prot="public">
          <name>language</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029da473795ce4b1f1eff494b35c914f579d3" prot="public">
          <name>last_modified_by</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029da7665c7ff6d2dd1d2062f59073b3cf1a0" prot="public">
          <name>last_printed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029da9ae73c65f418e6f79ceb4f0e4a4b98d5" prot="public">
          <name>modified</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029dab5f927bae9a11c2967a368e3e9bd9e75" prot="public">
          <name>revision</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029dab5e3374e43f6544852f7751dfc529100" prot="public">
          <name>subject</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029dad5d3db1765287eef77d7927cc956f50a" prot="public">
          <name>title</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029da2af72f100c356273d46284f6fd1dfc08" prot="public">
          <name>version</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Every core property in a workbook must be one of these types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/metadata_property.hpp" line="33" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/metadata_property.hpp" bodystart="34" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5" prot="public" static="no" strong="yes">
        <type></type>
        <name>extended_property</name>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a3676d55f84497cbeadfc614c1b1b62fc" prot="public">
          <name>application</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a5e603fe8549380dcb8b43465eef93edd" prot="public">
          <name>app_version</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a2593c7ce3ff937293feb1e61c152e551" prot="public">
          <name>characters</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5aa9e18381fda96489c3b7acc605bce3cd" prot="public">
          <name>characters_with_spaces</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a93c731f1c3a84ef05cd54d044c379eaa" prot="public">
          <name>company</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5ab4ebbdcbd4e3f3ee3496c0a6297aa034" prot="public">
          <name>dig_sig</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5afcd4b06a11e1941cf0590ab7208c8293" prot="public">
          <name>doc_security</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a9b9157340a1bfcdad9ca36c5e50f1962" prot="public">
          <name>heading_pairs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5aa85a2c42db352712814114ab409bb394" prot="public">
          <name>hidden_slides</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5ac0bc14d36ed9e270b38bc8348b23f0d0" prot="public">
          <name>h_links</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a82493a2f628b27c2a73c23b49ca01e6a" prot="public">
          <name>hyperlink_base</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5aa920557033f86d6ad96c2129714b11d4" prot="public">
          <name>hyperlinks_changed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a980da98409d058c365664ff7ea33dd6b" prot="public">
          <name>lines</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5ac3cb81b049eaa85c73a4de84e4d5bbd5" prot="public">
          <name>links_up_to_date</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a1d0258c2440a8d19e716292b231e3190" prot="public">
          <name>manager</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a834859a15c5769d5658a51e2381eb80e" prot="public">
          <name>m_m_clips</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a4358b5009c67d0e31d7fbf1663fcd3bf" prot="public">
          <name>notes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5ab3b32a2d422265cd25c3323ed0157f81" prot="public">
          <name>pages</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5ad070fd4ebb68ed9399034d1a708e978c" prot="public">
          <name>paragraphs</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a2ef1bc10c171978d2c8804a0378c66a9" prot="public">
          <name>presentation_format</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a79519e6e6d5f987eba8fec956ef3569a" prot="public">
          <name>scale_crop</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a759626e7be199f37a261c5fb1b26fcf5" prot="public">
          <name>shared_doc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5af4d5c52946e476c66dfc36433c82aa78" prot="public">
          <name>slides</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a8dbe92c724f41906fcb820e6d873a5a0" prot="public">
          <name>template_</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a6db91eda377b1f25258bcb59971b1f3c" prot="public">
          <name>titles_of_parts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a843b9f46c0bf720976d53057a3b40877" prot="public">
          <name>total_time</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5a89759e1284e2479b991d2669de104942" prot="public">
          <name>words</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Every extended property in a workbook must be one of these types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/metadata_property.hpp" line="55" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/metadata_property.hpp" bodystart="56" bodyend="84"/>
      </memberdef>
      <memberdef kind="enum" id="namespacexlnt_1ab0c3101c39024923299c02588cf84fab" prot="public" static="no" strong="yes">
        <type></type>
        <name>sheet_view_type</name>
        <enumvalue id="namespacexlnt_1ab0c3101c39024923299c02588cf84fabafea087517c26fadd409bd4b9dc642555" prot="public">
          <name>normal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1ab0c3101c39024923299c02588cf84faba773fe03eb8113c0fe5cc533ce4a4e71f" prot="public">
          <name>page_break_preview</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacexlnt_1ab0c3101c39024923299c02588cf84faba23552f57484c5ed0ce8301c052df8b09" prot="public">
          <name>page_layout</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of possible types of sheet views </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/sheet_view.hpp" line="37" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/sheet_view.hpp" bodystart="38" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" prot="public" static="no">
        <type>std::uint32_t</type>
        <definition>using xlnt::row_t = typedef std::uint32_t</definition>
        <argsstring></argsstring>
        <name>row_t</name>
        <briefdescription>
<para>All rows should be referred to by an instance of this type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/index_types.hpp" line="40" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/index_types.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacexlnt_1a87898d966ebb2cf7326f2ef778daad96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref> bool</type>
        <definition>bool xlnt::operator==</definition>
        <argsstring>(std::nullptr_t, const cell &amp;cell)</argsstring>
        <name>operator==</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref> &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Returns true if this cell is uninitialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" line="773" column="6" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="773" bodyend="776" declfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" declline="660" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a7802113e587a86dcfc4bdc0ccd404ab3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref> bool</type>
        <definition>bool xlnt::operator==</definition>
        <argsstring>(const cell &amp;cell, std::nullptr_t)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref> &amp;</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
<para>Returns true if this cell is uninitialized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" line="778" column="6" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="778" bodyend="781" declfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" declline="665" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a51a9f54016ae86168addb7eea204212d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref> std::ostream &amp;</type>
        <definition>XLNT_API std::ostream &amp; xlnt::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;stream, const xlnt::cell &amp;cell)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1cell" kindref="compound">xlnt::cell</ref> &amp;</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
<para>Convenience function for writing cell to an ostream. Uses <ref refid="classxlnt_1_1cell_1a7a51abb90f9e716f242512a9f53cf09a" kindref="member">cell::to_string()</ref> internally. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" line="783" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="783" bodyend="786" declfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" declline="671" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a415ca763052fe616a4d8372bccb7f684" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string xlnt::cell::value&lt; std::string &gt;</definition>
        <argsstring>() const</argsstring>
        <name>cell::value&lt; std::string &gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="707" column="1" declfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" declline="707" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a65c4210b114358a6ccfcdb89537f0d5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator==</definition>
        <argsstring>(const ext_list::ext &amp;lhs, const ext_list::ext &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structxlnt_1_1ext__list_1_1ext" kindref="compound">ext_list::ext</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structxlnt_1_1ext__list_1_1ext" kindref="compound">ext_list::ext</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/ext_list.hpp" line="74" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/ext_list.hpp" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a7b9126cda8582b08af4bc56649da73c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator==</definition>
        <argsstring>(const calculation_properties &amp;lhs, const calculation_properties &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1calculation__properties" kindref="compound">calculation_properties</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1calculation__properties" kindref="compound">calculation_properties</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/calculation_properties.hpp" line="49" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/calculation_properties.hpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1affb2440325ffde78da1573704a2e5464" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator==</definition>
        <argsstring>(const workbook_view &amp;lhs, const workbook_view &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1workbook__view" kindref="compound">workbook_view</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1workbook__view" kindref="compound">workbook_view</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook_view.hpp" line="105" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook_view.hpp" bodystart="105" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a2b842e584ae4c71e0a38a963b8197958" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator==</definition>
        <argsstring>(const column_properties &amp;lhs, const column_properties &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1column__properties" kindref="compound">column_properties</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1column__properties" kindref="compound">column_properties</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/column_properties.hpp" line="66" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/column_properties.hpp" bodystart="66" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1acdaaf06ed7df2cf86601ac4e1c4b4402" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator==</definition>
        <argsstring>(const print_options &amp;lhs, const print_options &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structxlnt_1_1print__options" kindref="compound">print_options</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structxlnt_1_1print__options" kindref="compound">print_options</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/print_options.hpp" line="59" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/print_options.hpp" bodystart="59" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1af23cf5411c67ef324e627ccc9ab45c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref> bool</type>
        <definition>XLNT_API bool xlnt::operator==</definition>
        <argsstring>(const std::string &amp;reference_string, const range_reference &amp;ref)</argsstring>
        <name>operator==</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>reference_string</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Returns true if the string representation of the range is equivalent to ref. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_reference.cpp" line="160" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_reference.cpp" bodystart="160" bodyend="163" declfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_reference.hpp" declline="167" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a5b38d0aa27eacd5908295d0bb6ae2271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref> bool</type>
        <definition>XLNT_API bool xlnt::operator==</definition>
        <argsstring>(const char *reference_string, const range_reference &amp;ref)</argsstring>
        <name>operator==</name>
        <param>
          <type>const char *</type>
          <declname>reference_string</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Returns true if the string representation of the range is equivalent to ref. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_reference.cpp" line="165" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_reference.cpp" bodystart="165" bodyend="168" declfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_reference.hpp" declline="172" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a427646713a34d6803c6338e09315c84e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref> bool</type>
        <definition>XLNT_API bool xlnt::operator!=</definition>
        <argsstring>(const std::string &amp;reference_string, const range_reference &amp;ref)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>reference_string</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Returns true if the string representation of the range is not equivalent to ref. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_reference.cpp" line="170" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_reference.cpp" bodystart="170" bodyend="173" declfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_reference.hpp" declline="177" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a7f1bbdd14fd50ad785111d2e4da32649" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref> bool</type>
        <definition>XLNT_API bool xlnt::operator!=</definition>
        <argsstring>(const char *reference_string, const range_reference &amp;ref)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const char *</type>
          <declname>reference_string</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Returns true if the string representation of the range is not equivalent to ref. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_reference.cpp" line="175" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_reference.cpp" bodystart="175" bodyend="178" declfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_reference.hpp" declline="182" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a952330fed611130a362aa8446d010314" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator==</definition>
        <argsstring>(const row_properties &amp;lhs, const row_properties &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1row__properties" kindref="compound">row_properties</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1row__properties" kindref="compound">row_properties</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/row_properties.hpp" line="75" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/row_properties.hpp" bodystart="75" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a96bd5f3d5578fdcac8a60d1c096792f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator==</definition>
        <argsstring>(const sheet_format_properties &amp;lhs, const sheet_format_properties &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1sheet__format__properties" kindref="compound">sheet_format_properties</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1sheet__format__properties" kindref="compound">sheet_format_properties</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/sheet_format_properties.hpp" line="59" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/sheet_format_properties.hpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a62c97b6b6850a20033805905884e80a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator==</definition>
        <argsstring>(const sheet_pr &amp;lhs, const sheet_pr &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structxlnt_1_1sheet__pr" kindref="compound">sheet_pr</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="structxlnt_1_1sheet__pr" kindref="compound">sheet_pr</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/sheet_pr.hpp" line="82" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/sheet_pr.hpp" bodystart="82" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1aebe47f0cf2f86bdb768820ae1344075c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
        <definition>column_t xlnt::operator+</definition>
        <argsstring>(column_t lhs, const column_t &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" line="243" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" bodystart="243" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1a386259a67eebc150448a71bf30887be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
        <definition>column_t xlnt::operator-</definition>
        <argsstring>(column_t lhs, const column_t &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" line="249" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" bodystart="249" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1abaddfecdb4c1d97c4a6bfd234816f2ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator&gt;</definition>
        <argsstring>(const column_t::index_t &amp;left, const column_t &amp;right)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classxlnt_1_1column__t_1ab514d159582ca03315e0f020dc8efedd" kindref="member">column_t::index_t</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" line="267" column="6" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1aed3d660dcbef0a8b8ee76d612cd4750d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator&gt;=</definition>
        <argsstring>(const column_t::index_t &amp;left, const column_t &amp;right)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1column__t_1ab514d159582ca03315e0f020dc8efedd" kindref="member">column_t::index_t</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" line="272" column="6" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" bodystart="272" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1aa385c45b3ae3f25ad0e665f2d3e9d663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator&lt;</definition>
        <argsstring>(const column_t::index_t &amp;left, const column_t &amp;right)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classxlnt_1_1column__t_1ab514d159582ca03315e0f020dc8efedd" kindref="member">column_t::index_t</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" line="277" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1ad3421f4f5c8a1b2a590baaa1a54f22e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::operator&lt;=</definition>
        <argsstring>(const column_t::index_t &amp;left, const column_t &amp;right)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1column__t_1ab514d159582ca03315e0f020dc8efedd" kindref="member">column_t::index_t</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" line="282" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1af71f79e47be6a25b150550b994f3d306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::swap</definition>
        <argsstring>(column_t &amp;left, column_t &amp;right)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" line="287" column="6" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/index_types.cpp" bodystart="287" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="namespacexlnt_1aaea1ec35281e76156330bf4788ba0394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::uint8_t &gt; &amp;</type>
        <definition>const std::vector&lt; std::uint8_t &gt; &amp; xlnt::excel_thumbnail</definition>
        <argsstring>()</argsstring>
        <name>excel_thumbnail</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/serialization/excel_thumbnail.hpp" line="33" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/serialization/excel_thumbnail.hpp" bodystart="33" bodyend="453" declfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/serialization/excel_thumbnail.hpp" declline="31" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Enumerates the possible types a cell can be determined by it&apos;s current value. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="36" column="1"/>
  </compounddef>
</doxygen>
