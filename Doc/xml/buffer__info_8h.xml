<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="buffer__info_8h" kind="file" language="C++">
    <compoundname>buffer_info.h</compoundname>
    <includes refid="common_8h" local="yes">common.h</includes>
    <includedby refid="pytypes_8h" local="yes">C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pytypes.h</includedby>
    <incdepgraph>
      <node id="11">
        <label>stdexcept</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="1">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/buffer_info.h</label>
        <link refid="buffer__info_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>unordered_set</label>
      </node>
      <node id="4">
        <label>frameobject.h</label>
      </node>
      <node id="3">
        <label>Python.h</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="5">
        <label>pythread.h</label>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="13">
        <label>unordered_map</label>
      </node>
      <node id="2">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>type_traits</label>
      </node>
      <node id="8">
        <label>forward_list</label>
      </node>
      <node id="7">
        <label>cstring</label>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="15">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="13">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/embed.h</label>
        <link refid="embed_8h"/>
      </node>
      <node id="6">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h</label>
        <link refid="pybind11_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/numpy.h</label>
        <link refid="numpy_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h</label>
        <link refid="stl_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/buffer_info.h</label>
        <link refid="buffer__info_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/python/python_streambuf.hpp</label>
        <link refid="python__streambuf_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h</label>
        <link refid="cast_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/class_support.h</label>
        <link refid="class__support_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h</label>
        <link refid="functional_8h"/>
      </node>
      <node id="17">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl_bind.h</label>
        <link refid="stl__bind_8h"/>
      </node>
      <node id="8">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/python/xlntpyarrow.lib.cpp</label>
        <link refid="xlntpyarrow_8lib_8cpp"/>
      </node>
      <node id="9">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/chrono.h</label>
        <link refid="chrono_8h"/>
      </node>
      <node id="2">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pytypes.h</label>
        <link refid="pytypes_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/operators.h</label>
        <link refid="operators_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eval.h</label>
        <link refid="eval_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/attr.h</label>
        <link refid="attr_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h</label>
        <link refid="eigen_8h"/>
      </node>
      <node id="10">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/complex.h</label>
        <link refid="complex_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structpybind11_1_1buffer__info" prot="public">pybind11::buffer_info</innerclass>
    <innerclass refid="structpybind11_1_1buffer__info_1_1private__ctr__tag" prot="private">pybind11::buffer_info::private_ctr_tag</innerclass>
    <innerclass refid="structpybind11_1_1detail_1_1compare__buffer__info" prot="public">pybind11::detail::compare_buffer_info</innerclass>
    <innerclass refid="structpybind11_1_1detail_1_1compare__buffer__info_3_01_t_00_01detail_1_1enable__if__t_3_01std_1_05cc5953ac48b25f185c5d5aabb43d85" prot="public">pybind11::detail::compare_buffer_info&lt; T, detail::enable_if_t&lt; std::is_integral&lt; T &gt;::value &gt; &gt;</innerclass>
    <innernamespace refid="namespacepybind11">pybind11</innernamespace>
    <innernamespace refid="namespacepybind11_1_1detail">pybind11::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>pybind11/buffer_info.h:<sp/>Python<sp/>buffer<sp/>object<sp/>interface</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2016<sp/>Wenzel<sp/>Jakob<sp/>&lt;wenzel.jakob@epfl.ch&gt;</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>All<sp/>rights<sp/>reserved.<sp/>Use<sp/>of<sp/>this<sp/>source<sp/>code<sp/>is<sp/>governed<sp/>by<sp/>a</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>BSD-style<sp/>license<sp/>that<sp/>can<sp/>be<sp/>found<sp/>in<sp/>the<sp/>LICENSE<sp/>file.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="common_8h_1a577cd817cb71b655998cad4387cdaeba" kindref="member">NAMESPACE_BEGIN</ref>(<ref refid="namespacepybind11" kindref="compound">pybind11</ref>)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">buffer_info<sp/>{</highlight></codeline>
<codeline lineno="18" refid="structpybind11_1_1buffer__info_1ae76be2c1e7c0719ab49dfb4d4de56377" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pointer<sp/>to<sp/>the<sp/>underlying<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="structpybind11_1_1buffer__info_1acf1ef96f83718e98bbe9ab4c2f8d45ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref><sp/>itemsize<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Size<sp/>of<sp/>individual<sp/>items<sp/>in<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structpybind11_1_1buffer__info_1a4c32c997a99827a3c074ec09cbcf16ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref><sp/>size<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Total<sp/>number<sp/>of<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structpybind11_1_1buffer__info_1a90c21deeddd49bc4436d8654b76ad9a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structpybind11_1_1buffer__info_1a90c21deeddd49bc4436d8654b76ad9a5" kindref="member">format</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>homogeneous<sp/>buffers,<sp/>this<sp/>should<sp/>be<sp/>set<sp/>to<sp/>format_descriptor&lt;T&gt;::format()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="structpybind11_1_1buffer__info_1a3d1de61ded85de5f2bffa71c3f99b62c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref><sp/>ndim<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="structpybind11_1_1buffer__info_1a23473655ad61dee362f67eade9cfddde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ssize_t&gt;<sp/><ref refid="structpybind11_1_1buffer__info_1a23473655ad61dee362f67eade9cfddde" kindref="member">shape</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shape<sp/>of<sp/>the<sp/>tensor<sp/>(1<sp/>entry<sp/>per<sp/>dimension)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structpybind11_1_1buffer__info_1a451b5dbcc97130bf0f41090fa7f3fadf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;ssize_t&gt;<sp/><ref refid="structpybind11_1_1buffer__info_1a451b5dbcc97130bf0f41090fa7f3fadf" kindref="member">strides</ref>;<sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>entries<sp/>between<sp/>adjacent<sp/>entries<sp/>(for<sp/>each<sp/>per<sp/>dimension)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structpybind11_1_1buffer__info_1acb41fb1e28b401ca33101862622230ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpybind11_1_1buffer__info_1acb41fb1e28b401ca33101862622230ce" kindref="member">buffer_info</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="structpybind11_1_1buffer__info_1a59758309b4de14ffd9802476a8afd602" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpybind11_1_1buffer__info_1a59758309b4de14ffd9802476a8afd602" kindref="member">buffer_info</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/><ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref><sp/>itemsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;format,<sp/><ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref><sp/>ndim,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classpybind11_1_1detail_1_1any__container" kindref="compound">detail::any_container&lt;ssize_t&gt;</ref><sp/>shape_in,<sp/><ref refid="classpybind11_1_1detail_1_1any__container" kindref="compound">detail::any_container&lt;ssize_t&gt;</ref><sp/>strides_in)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>ptr(ptr),<sp/>itemsize(itemsize),<sp/>size(1),<sp/>format(format),<sp/>ndim(ndim),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape(<ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="namespacepybind11_1a3cadb7f665dad17868aa4cd045f3b017" kindref="member">move</ref>(shape_in)),<sp/>strides(<ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="namespacepybind11_1a3cadb7f665dad17868aa4cd045f3b017" kindref="member">move</ref>(strides_in))<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ndim<sp/>!=<sp/>(<ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref>)<sp/>shape.size()<sp/>||<sp/>ndim<sp/>!=<sp/>(<ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref>)<sp/>strides.size())</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pybind11_fail(</highlight><highlight class="stringliteral">&quot;buffer_info:<sp/>ndim<sp/>doesn&apos;t<sp/>match<sp/>shape<sp/>and/or<sp/>strides<sp/>length&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(<ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref>)<sp/>ndim;<sp/>++i)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>*=<sp/>shape[i];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="39" refid="structpybind11_1_1buffer__info_1acc784d82c1c2c2c6c0e8151fdb862cb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpybind11_1_1buffer__info_1acc784d82c1c2c2c6c0e8151fdb862cb8" kindref="member">buffer_info</ref>(T<sp/>*ptr,<sp/><ref refid="classpybind11_1_1detail_1_1any__container" kindref="compound">detail::any_container&lt;ssize_t&gt;</ref><sp/>shape_in,<sp/><ref refid="classpybind11_1_1detail_1_1any__container" kindref="compound">detail::any_container&lt;ssize_t&gt;</ref><sp/>strides_in)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref>(private_ctr_tag(),<sp/>ptr,<sp/>sizeof(T),<sp/><ref refid="structpybind11_1_1format__descriptor" kindref="compound">format_descriptor</ref>&lt;T&gt;::format(),<sp/>static_cast&lt;<ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref>&gt;(shape_in-&gt;size()),<sp/><ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="namespacepybind11_1a3cadb7f665dad17868aa4cd045f3b017" kindref="member">move</ref>(shape_in),<sp/><ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="namespacepybind11_1a3cadb7f665dad17868aa4cd045f3b017" kindref="member">move</ref>(strides_in))<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structpybind11_1_1buffer__info_1affda15a1595192ca8881374da1d384f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpybind11_1_1buffer__info_1affda15a1595192ca8881374da1d384f5" kindref="member">buffer_info</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/><ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref><sp/>itemsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;format,<sp/><ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref><sp/>size)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref>(ptr,<sp/>itemsize,<sp/>format,<sp/>1,<sp/>{size},<sp/>{itemsize})<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="46" refid="structpybind11_1_1buffer__info_1a7a5b7ed62b690e74e564ae57fbc167c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpybind11_1_1buffer__info_1a7a5b7ed62b690e74e564ae57fbc167c1" kindref="member">buffer_info</ref>(T<sp/>*ptr,<sp/><ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref><sp/>size)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref>(ptr,<sp/>sizeof(T),<sp/><ref refid="structpybind11_1_1format__descriptor" kindref="compound">format_descriptor</ref>&lt;T&gt;::format(),<sp/>size)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structpybind11_1_1buffer__info_1a0b0ab92d653e9e6e7629979d1d1b7e54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structpybind11_1_1buffer__info_1a0b0ab92d653e9e6e7629979d1d1b7e54" kindref="member">buffer_info</ref>(Py_buffer<sp/>*view,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ownview<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/><ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref>(view-&gt;buf,<sp/>view-&gt;itemsize,<sp/>view-&gt;format,<sp/>view-&gt;ndim,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{view-&gt;shape,<sp/>view-&gt;shape<sp/>+<sp/>view-&gt;ndim},<sp/>{view-&gt;strides,<sp/>view-&gt;strides<sp/>+<sp/>view-&gt;ndim})<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;view<sp/>=<sp/>view;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ownview<sp/>=<sp/>ownview;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structpybind11_1_1buffer__info_1a199c8145eaaff18f587a2b416cd9e148" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpybind11_1_1buffer__info_1a199c8145eaaff18f587a2b416cd9e148" kindref="member">buffer_info</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57" refid="structpybind11_1_1buffer__info_1adb4272b61f16c99be46d80f6cd5a9aac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref>&amp;<sp/><ref refid="structpybind11_1_1buffer__info_1adb4272b61f16c99be46d80f6cd5a9aac" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref><sp/>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="structpybind11_1_1buffer__info_1a26be81f9b7e01bf7d9c2638b112712b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpybind11_1_1buffer__info_1a26be81f9b7e01bf7d9c2638b112712b9" kindref="member">buffer_info</ref>(<ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref><sp/>&amp;&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)<sp/>=<sp/>std::move(other);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structpybind11_1_1buffer__info_1a03f2ec1a792e10b866f4d5d8eb93e3f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref>&amp;<sp/><ref refid="structpybind11_1_1buffer__info_1a03f2ec1a792e10b866f4d5d8eb93e3f6" kindref="member">operator=</ref>(<ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref><sp/>&amp;&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>rhs.<ref refid="structpybind11_1_1buffer__info_1ae76be2c1e7c0719ab49dfb4d4de56377" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itemsize<sp/>=<sp/>rhs.itemsize;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>rhs.size;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/>std::move(rhs.format);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ndim<sp/>=<sp/>rhs.ndim;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape<sp/>=<sp/>std::move(rhs.shape);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strides<sp/>=<sp/>std::move(rhs.strides);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacexlnt_1af71f79e47be6a25b150550b994f3d306" kindref="member">std::swap</ref>(view,<sp/>rhs.view);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacexlnt_1af71f79e47be6a25b150550b994f3d306" kindref="member">std::swap</ref>(ownview,<sp/>rhs.ownview);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structpybind11_1_1buffer__info_1a542269d679de37bb0b2069e98b7f2894" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpybind11_1_1buffer__info_1a542269d679de37bb0b2069e98b7f2894" kindref="member">~buffer_info</ref>()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(view<sp/>&amp;&amp;<sp/>ownview)<sp/>{<sp/>PyBuffer_Release(view);<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>view;<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">private_ctr_tag<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_info(private_ctr_tag,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/><ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref><sp/>itemsize,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;format,<sp/><ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref><sp/>ndim,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::any_container&lt;ssize_t&gt;<sp/>&amp;&amp;shape_in,<sp/>detail::any_container&lt;ssize_t&gt;<sp/>&amp;&amp;strides_in)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>buffer_info(ptr,<sp/>itemsize,<sp/>format,<sp/>ndim,<sp/><ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="namespacepybind11_1a3cadb7f665dad17868aa4cd045f3b017" kindref="member">move</ref>(shape_in),<sp/><ref refid="namespacestd" kindref="compound">std</ref>::<ref refid="namespacepybind11_1a3cadb7f665dad17868aa4cd045f3b017" kindref="member">move</ref>(strides_in))<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>Py_buffer<sp/>*view<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ownview<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">};</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="common_8h_1a577cd817cb71b655998cad4387cdaeba" kindref="member">NAMESPACE_BEGIN</ref>(detail)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="structpybind11_1_1detail_1_1compare__buffer__info" refkind="compound"><highlight class="normal">template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>SFINAE<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;<sp/>struct<sp/><ref refid="structpybind11_1_1detail_1_1compare__buffer__info" kindref="compound">compare_buffer_info</ref><sp/>{</highlight></codeline>
<codeline lineno="94" refid="structpybind11_1_1detail_1_1compare__buffer__info_1a34f4bd91a7382de3737e9daa78c0a0c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structpybind11_1_1detail_1_1compare__buffer__info_1a34f4bd91a7382de3737e9daa78c0a0c4" kindref="member">compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref>&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>b.format<sp/>==<sp/><ref refid="structpybind11_1_1format__descriptor" kindref="compound">format_descriptor&lt;T&gt;::format</ref>()<sp/>&amp;&amp;<sp/>b.itemsize<sp/>==<sp/>(<ref refid="namespacepybind11_1a51e3d317b399f8925c3b9f1980018481" kindref="member">ssize_t</ref>)<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="structpybind11_1_1detail_1_1compare__buffer__info_3_01_t_00_01detail_1_1enable__if__t_3_01std_1_05cc5953ac48b25f185c5d5aabb43d85" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpybind11_1_1detail_1_1compare__buffer__info" kindref="compound">compare_buffer_info</ref>&lt;T,<sp/>detail::<ref refid="namespacepybind11_1_1detail_1a492fb1fcf079a5bc67248b852bc73619" kindref="member">enable_if_t</ref>&lt;std::is_integral&lt;T&gt;::value&gt;&gt;<sp/>{</highlight></codeline>
<codeline lineno="100" refid="structpybind11_1_1detail_1_1compare__buffer__info_3_01_t_00_01detail_1_1enable__if__t_3_01std_1_05cc5953ac48b25f185c5d5aabb43d85_1a4c208dea4430c09b4600206006dc81e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structpybind11_1_1detail_1_1compare__buffer__info_3_01_t_00_01detail_1_1enable__if__t_3_01std_1_05cc5953ac48b25f185c5d5aabb43d85_1a4c208dea4430c09b4600206006dc81e7" kindref="member">compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structpybind11_1_1buffer__info" kindref="compound">buffer_info</ref>&amp;<sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>b.itemsize<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>&amp;&amp;<sp/>(b.format<sp/>==<sp/><ref refid="structpybind11_1_1format__descriptor" kindref="compound">format_descriptor&lt;T&gt;::value</ref><sp/>||</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>b.format<sp/>==<sp/>(std::is_unsigned&lt;T&gt;::value<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;L&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">))<sp/>||</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>b.format<sp/>==<sp/>(std::is_unsigned&lt;T&gt;::value<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;N&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;n&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="common_8h_1a12bb24ea980ca8fb1f46b1992bc9c83a" kindref="member">NAMESPACE_END</ref>(detail)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><ref refid="common_8h_1a12bb24ea980ca8fb1f46b1992bc9c83a" kindref="member">NAMESPACE_END</ref>(<ref refid="namespacepybind11" kindref="compound">pybind11</ref>)</highlight></codeline>
    </programlisting>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/buffer_info.h"/>
  </compounddef>
</doxygen>
