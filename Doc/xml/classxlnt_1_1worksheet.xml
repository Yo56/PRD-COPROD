<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classxlnt_1_1worksheet" kind="class" language="C++" prot="public">
    <compoundname>xlnt::worksheet</compoundname>
    <includes refid="worksheet_8hpp" local="no">worksheet.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classxlnt_1_1worksheet_1ae96ed144ca5710f7e45e39e51a4b2dbe" prot="public" static="no">
        <type><ref refid="classxlnt_1_1range__iterator" kindref="compound">range_iterator</ref></type>
        <definition>using xlnt::worksheet::iterator =  range_iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>Iterate over a non-const worksheet with an iterator of this type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="82" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1worksheet_1a63658d488e4268777aa391fa0050233a" prot="public" static="no">
        <type><ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref></type>
        <definition>using xlnt::worksheet::const_iterator =  const_range_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>Iterate over a non-const worksheet with an iterator of this type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="87" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1worksheet_1a862aacebd1521c7d000ef740f6e1e918" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classxlnt_1_1worksheet_1ae96ed144ca5710f7e45e39e51a4b2dbe" kindref="member">iterator</ref> &gt;</type>
        <definition>using xlnt::worksheet::reverse_iterator =  std::reverse_iterator&lt;iterator&gt;</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
<para>Iterate in reverse over a non-const worksheet with an iterator of this type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="92" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1worksheet_1a5df76c014e585a15e75b9bb7afcef11f" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classxlnt_1_1worksheet_1a63658d488e4268777aa391fa0050233a" kindref="member">const_iterator</ref> &gt;</type>
        <definition>using xlnt::worksheet::const_reverse_iterator =  std::reverse_iterator&lt;const_iterator&gt;</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
<para>Iterate in reverse order over a const worksheet with an iterator of this type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="97" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class cell</definition>
        <argsstring></argsstring>
        <name>cell</name>
        <param>
          <type><ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="774" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="774" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1worksheet_1a487acfcdb9d580938240775d2f99c7df" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class const_range_iterator</definition>
        <argsstring></argsstring>
        <name>const_range_iterator</name>
        <param>
          <type><ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="775" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="775" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1worksheet_1a06e4ef1ae5a9412e52086ec54ec7c3d2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class range_iterator</definition>
        <argsstring></argsstring>
        <name>range_iterator</name>
        <param>
          <type><ref refid="classxlnt_1_1range__iterator" kindref="compound">range_iterator</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="776" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1worksheet_1a71339f4270bfea0439cd2aa3c11f9b02" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>workbook &amp; xlnt::worksheet::workbook</definition>
        <argsstring></argsstring>
        <name>workbook</name>
        <param>
          <type><ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="777" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="777" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1worksheet_1a5c27ff96f65a231e21871a228cbaf740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class detail::xlsx_consumer</definition>
        <argsstring></argsstring>
        <name>detail::xlsx_consumer</name>
        <param>
          <type><ref refid="classxlnt_1_1detail_1_1xlsx__consumer" kindref="compound">detail::xlsx_consumer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="778" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="778" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1worksheet_1aeaa1b2a5f3d37ddb4b8ca1ebaab144f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class detail::xlsx_producer</definition>
        <argsstring></argsstring>
        <name>detail::xlsx_producer</name>
        <param>
          <type><ref refid="classxlnt_1_1detail_1_1xlsx__producer" kindref="compound">detail::xlsx_producer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="779" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="779" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxlnt_1_1worksheet_1afb9f40992f3fc406260c4a38517ee19e" prot="private" static="no" mutable="no">
        <type><ref refid="structxlnt_1_1detail_1_1worksheet__impl" kindref="compound">detail::worksheet_impl</ref> *</type>
        <definition>detail::worksheet_impl* xlnt::worksheet::d_</definition>
        <argsstring></argsstring>
        <name>d_</name>
        <briefdescription>
<para>The pointer to this sheet&apos;s implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="815" column="28" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="815" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a060c9a7e63a0f118d118580eb3a2bb7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::worksheet::worksheet</definition>
        <argsstring>()</argsstring>
        <name>worksheet</name>
        <briefdescription>
<para>Construct a null worksheet. No methods should be called on such a worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="102" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a12ed1c574b4e5b4de187f32e85c19f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::worksheet::worksheet</definition>
        <argsstring>(const worksheet &amp;rhs)</argsstring>
        <name>worksheet</name>
        <param>
          <type>const <ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy constructor. This worksheet will point to the same memory as rhs&apos;s worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="107" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ae4f3620687b70078065dababe2d43524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> &amp;</type>
        <definition>class workbook&amp; xlnt::worksheet::workbook</definition>
        <argsstring>()</argsstring>
        <name>workbook</name>
        <briefdescription>
<para>Returns a reference to the workbook this worksheet is owned by. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="112" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1af2643961703e50d7254222e6c2c2a0c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> &amp;</type>
        <definition>const workbook &amp; xlnt::worksheet::workbook</definition>
        <argsstring>() const</argsstring>
        <name>workbook</name>
        <briefdescription>
<para>Returns a reference to the workbook this worksheet is owned by. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="117" column="25" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a4f218d49d06f6f44dbab452bf2bdec3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::garbage_collect</definition>
        <argsstring>()</argsstring>
        <name>garbage_collect</name>
        <briefdescription>
<para>Deletes data held in the worksheet that does not affect the internal data or display. For example, unreference styles and empty cells will be removed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="123" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="202" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a2a84f029276bfd9faec801fb17d3d6a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t xlnt::worksheet::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
<para>Returns the unique numeric identifier of this worksheet. This will sometimes but not necessarily be the index of the worksheet in the workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="131" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1aad07421a40956072818d448c7bc0e812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::id</definition>
        <argsstring>(std::size_t id)</argsstring>
        <name>id</name>
        <param>
          <type>std::size_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Set the unique numeric identifier. The id defaults to the lowest unused id in the workbook so this should not be called without a good reason. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="137" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ad6b664b8fd51d88bb50b6aca9870ac07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::worksheet::title</definition>
        <argsstring>() const</argsstring>
        <name>title</name>
        <briefdescription>
<para>Returns the title of this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="142" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a1042c97e2d1a85f45e1cef1e5104268a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::title</definition>
        <argsstring>(const std::string &amp;title)</argsstring>
        <name>title</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Sets the title of this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="147" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="234" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a9242ee6abf016a88fbfda441ded5fcff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref></type>
        <definition>cell_reference xlnt::worksheet::frozen_panes</definition>
        <argsstring>() const</argsstring>
        <name>frozen_panes</name>
        <briefdescription>
<para>Returns the top left corner of the region above and to the left of which panes are frozen. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="154" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="267" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a0cbbf8626202bd83a901e0c8ff3c4d33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::freeze_panes</definition>
        <argsstring>(cell top_left_cell)</argsstring>
        <name>freeze_panes</name>
        <param>
          <type><ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
          <declname>top_left_cell</declname>
        </param>
        <briefdescription>
<para>Freeze panes above and to the left of top_left_cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="159" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1af00727b60f55c3c673444d55c3ce8b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::freeze_panes</definition>
        <argsstring>(const cell_reference &amp;top_left_coordinate)</argsstring>
        <name>freeze_panes</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> &amp;</type>
          <declname>top_left_coordinate</declname>
        </param>
        <briefdescription>
<para>Freeze panes above and to the left of top_left_coordinate. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="164" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="282" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a09deeb4f6b94bf1ce596644d75370321" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::unfreeze_panes</definition>
        <argsstring>()</argsstring>
        <name>unfreeze_panes</name>
        <briefdescription>
<para>Remove frozen panes. The data in those panes will be unaffected<ndash/>this affects only the view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="169" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="327" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1af47eda457f89f9a0c8da5dadec53e01d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_frozen_panes</definition>
        <argsstring>() const</argsstring>
        <name>has_frozen_panes</name>
        <briefdescription>
<para>Returns true if this sheet has a frozen row, frozen column, or both. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="174" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="81" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1aa96b7d1b9ee7e63b00220a1039db96c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_cell</definition>
        <argsstring>(const cell_reference &amp;reference) const</argsstring>
        <name>has_cell</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Returns true if this sheet has an initialized cell at the given reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="413" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a537be721b2b8c8c2c0cb4a3f159741a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        <definition>cell xlnt::worksheet::cell</definition>
        <argsstring>(const cell_reference &amp;reference)</argsstring>
        <name>cell</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Returns the cell at the given reference. If the cell doesn&apos;t exist, it will be initialized to null before being returned. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="383" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1abf8998a003c3d6e5e527020da5f155fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        <definition>const cell xlnt::worksheet::cell</definition>
        <argsstring>(const cell_reference &amp;reference) const</argsstring>
        <name>cell</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Returns the cell at the given reference. If the cell doesn&apos;t exist, an <ref refid="classxlnt_1_1invalid__parameter" kindref="compound">invalid_parameter</ref> exception will be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="398" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ad312313d5a4c0c15957a16e87d97b54e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        <definition>cell xlnt::worksheet::cell</definition>
        <argsstring>(column_t column, row_t row)</argsstring>
        <name>cell</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Returns the cell at the given column and row. If the cell doesn&apos;t exist, it will be initialized to null before being returned. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="403" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1af3956bc78f3d6b06a29b218596ed37c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        <definition>const cell xlnt::worksheet::cell</definition>
        <argsstring>(column_t column, row_t row) const</argsstring>
        <name>cell</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Returns the cell at the given column and row. If the cell doesn&apos;t exist, an <ref refid="classxlnt_1_1invalid__parameter" kindref="compound">invalid_parameter</ref> exception will be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="408" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a8f9c0cc9493c0976f97a49dac38f6732" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1range" kindref="compound">range</ref></type>
        <definition>range xlnt::worksheet::range</definition>
        <argsstring>(const std::string &amp;reference_string)</argsstring>
        <name>range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>reference_string</declname>
        </param>
        <briefdescription>
<para>Returns the range defined by reference string. If reference string is the name of a previously-defined named range in the sheet, it will be returned. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="618" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ae653c3d890293c629c9f17d48b11bea2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1range" kindref="compound">range</ref></type>
        <definition>const range xlnt::worksheet::range</definition>
        <argsstring>(const std::string &amp;reference_string) const</argsstring>
        <name>range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>reference_string</declname>
        </param>
        <briefdescription>
<para>Returns the range defined by reference string. If reference string is the name of a previously-defined named range in the sheet, it will be returned. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="628" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ad68bda36461c1e961e4c03cb979dde2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1range" kindref="compound">range</ref></type>
        <definition>range xlnt::worksheet::range</definition>
        <argsstring>(const range_reference &amp;reference)</argsstring>
        <name>range</name>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Returns the range defined by reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="638" bodyend="641"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a474966ce22a4e6dcef1f0e7c35569ca1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1range" kindref="compound">range</ref></type>
        <definition>const range xlnt::worksheet::range</definition>
        <argsstring>(const range_reference &amp;reference) const</argsstring>
        <name>range</name>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Returns the range defined by reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="643" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a12778fcfc846484b59f95aa858a6d904" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1range" kindref="compound">range</ref></type>
        <definition>xlnt::range xlnt::worksheet::rows</definition>
        <argsstring>(bool skip_null=true)</argsstring>
        <name>rows</name>
        <param>
          <type>bool</type>
          <declname>skip_null</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns a range encompassing all cells in this sheet which will be iterated upon in row-major order. If skip_null is true (default), empty rows and cells will be skipped during iteration of the range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="718" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ad57834107e0c93a2c1b64c4cb6d01d9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1range" kindref="compound">range</ref></type>
        <definition>const xlnt::range xlnt::worksheet::rows</definition>
        <argsstring>(bool skip_null=true) const</argsstring>
        <name>rows</name>
        <param>
          <type>bool</type>
          <declname>skip_null</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns a range encompassing all cells in this sheet which will be iterated upon in row-major order. If skip_null is true (default), empty rows and cells will be skipped during iteration of the range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="723" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1aef7f7c5c52affd4c8a10f40f782794ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1range" kindref="compound">range</ref></type>
        <definition>xlnt::range xlnt::worksheet::columns</definition>
        <argsstring>(bool skip_null=true)</argsstring>
        <name>columns</name>
        <param>
          <type>bool</type>
          <declname>skip_null</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns a range ecompassing all cells in this sheet which will be iterated upon in column-major order. If skip_null is true (default), empty columns and cells will be skipped during iteration of the range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="728" bodyend="731"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1adad29f025fae53ffb3a9203e3a2976d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1range" kindref="compound">range</ref></type>
        <definition>const xlnt::range xlnt::worksheet::columns</definition>
        <argsstring>(bool skip_null=true) const</argsstring>
        <name>columns</name>
        <param>
          <type>bool</type>
          <declname>skip_null</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns a range ecompassing all cells in this sheet which will be iterated upon in column-major order. If skip_null is true (default), empty columns and cells will be skipped during iteration of the range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="181" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="733" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a0f5e7357a5d62397bf826371ff8cf5ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::clear_cell</definition>
        <argsstring>(const cell_reference &amp;ref)</argsstring>
        <name>clear_cell</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Clears memory used by the given cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="266" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="754" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ac04b853a21d8f8a06bd08896db5260b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::clear_row</definition>
        <argsstring>(row_t row)</argsstring>
        <name>clear_row</name>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Clears memory used by all cells in the given row. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="271" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="760" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ab6925c264dfd8571f59e9aa42b95839e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::insert_rows</definition>
        <argsstring>(row_t row, std::uint32_t amount)</argsstring>
        <name>insert_rows</name>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Insert empty rows before the given row index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="276" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="777" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ac925be7acfd64ff61a2bed5ace6afda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::insert_columns</definition>
        <argsstring>(column_t column, std::uint32_t amount)</argsstring>
        <name>insert_columns</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Insert empty columns before the given column index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="281" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="782" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a1e4853431c31b53d455bf158570cc393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::delete_rows</definition>
        <argsstring>(row_t row, std::uint32_t amount)</argsstring>
        <name>delete_rows</name>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Delete rows before the given row index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="286" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="787" bodyend="790"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a651d63782df4463c8431c9c52113ee54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::delete_columns</definition>
        <argsstring>(column_t column, std::uint32_t amount)</argsstring>
        <name>delete_columns</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Delete columns before the given column index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="291" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="792" bodyend="795"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a4b03bdef7998ec5f9f1689a03ec54785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1column__properties" kindref="compound">xlnt::column_properties</ref> &amp;</type>
        <definition>column_properties &amp; xlnt::worksheet::column_properties</definition>
        <argsstring>(column_t column)</argsstring>
        <name>column_properties</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Returns the column properties for the given column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="298" column="29" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1087" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a2b6a1f89c2dcaaf170058f65d4db04f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1column__properties" kindref="compound">xlnt::column_properties</ref> &amp;</type>
        <definition>const column_properties &amp; xlnt::worksheet::column_properties</definition>
        <argsstring>(column_t column) const</argsstring>
        <name>column_properties</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Returns the column properties for the given column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="303" column="35" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1092" bodyend="1095"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a9cc68476d47cf5fea8761ef67fdefe6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_column_properties</definition>
        <argsstring>(column_t column) const</argsstring>
        <name>has_column_properties</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Returns true if column properties have been set for the given column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="308" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1082" bodyend="1085"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a158ef9ecc40eb80ec0350377ee3c757d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::add_column_properties</definition>
        <argsstring>(column_t column, const class column_properties &amp;props)</argsstring>
        <name>add_column_properties</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>column</declname>
        </param>
        <param>
          <type>const class <ref refid="classxlnt_1_1column__properties" kindref="compound">column_properties</ref> &amp;</type>
          <declname>props</declname>
        </param>
        <briefdescription>
<para>Sets column properties for the given column to props. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="313" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1077" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a71b1660f42ffee879079463393efe24c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double xlnt::worksheet::column_width</definition>
        <argsstring>(column_t column) const</argsstring>
        <name>column_width</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Calculates the width of the given column. This will be the default column width if a custom width is not set on this column&apos;s <ref refid="classxlnt_1_1column__properties" kindref="compound">column_properties</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="319" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1264" bodyend="1276"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1aff6507aa5653c439811f1f7c5aa16d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1row__properties" kindref="compound">xlnt::row_properties</ref> &amp;</type>
        <definition>row_properties &amp; xlnt::worksheet::row_properties</definition>
        <argsstring>(row_t row)</argsstring>
        <name>row_properties</name>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Returns the row properties for the given row. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="324" column="26" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1097" bodyend="1100"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a003ac3abdf0cb218f8664214bb52ceb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1row__properties" kindref="compound">xlnt::row_properties</ref> &amp;</type>
        <definition>const row_properties &amp; xlnt::worksheet::row_properties</definition>
        <argsstring>(row_t row) const</argsstring>
        <name>row_properties</name>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Returns the row properties for the given row. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="329" column="32" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1102" bodyend="1105"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ab02c7ae0e6b5be9c8253eae5e14986ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_row_properties</definition>
        <argsstring>(row_t row) const</argsstring>
        <name>has_row_properties</name>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Returns true if row properties have been set for the given row. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="334" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="419" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ad2cabfe79e832411e6a52bb16f98dc95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::add_row_properties</definition>
        <argsstring>(row_t row, const class row_properties &amp;props)</argsstring>
        <name>add_row_properties</name>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>row</declname>
        </param>
        <param>
          <type>const class <ref refid="classxlnt_1_1row__properties" kindref="compound">row_properties</ref> &amp;</type>
          <declname>props</declname>
        </param>
        <briefdescription>
<para>Sets row properties for the given row to props. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="339" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1107" bodyend="1110"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a9dfad3c8abf86758156649388d54d18e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double xlnt::worksheet::row_height</definition>
        <argsstring>(row_t row) const</argsstring>
        <name>row_height</name>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Calculate the height of the given row. This will be the default row height if a custom height is not set on this row&apos;s <ref refid="classxlnt_1_1row__properties" kindref="compound">row_properties</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="345" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1278" bodyend="1290"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a627951189735a34fdbd953e91fb8534f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref></type>
        <definition>cell_reference xlnt::worksheet::point_pos</definition>
        <argsstring>(int left, int top) const</argsstring>
        <name>point_pos</name>
        <param>
          <type>int</type>
          <declname>left</declname>
        </param>
        <param>
          <type>int</type>
          <declname>top</declname>
        </param>
        <briefdescription>
<para>Returns a reference to the cell at the given point coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="352" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1046" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ad11c6a505ee9a08a13251250a355a447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::create_named_range</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;reference_string)</argsstring>
        <name>create_named_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>reference_string</declname>
        </param>
        <briefdescription>
<para>Creates a new named range with the given name encompassing the string representing a range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="359" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1af73844f7be716fa3f34ca2175a7fbfb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::create_named_range</definition>
        <argsstring>(const std::string &amp;name, const range_reference &amp;reference)</argsstring>
        <name>create_named_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Creates a new named range with the given name encompassing the given range reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="364" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="93" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1aaed7880fd2b7bf2ffcd92fe64e768e4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_named_range</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>has_named_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns true if this worksheet contains a named range with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="369" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1021" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a3e8416a110ca2603076dd5c72556472b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1range" kindref="compound">range</ref></type>
        <definition>range xlnt::worksheet::named_range</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>named_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the named range with the given name. Throws <ref refid="classxlnt_1_1key__not__found" kindref="compound">key_not_found</ref> exception if the named range doesn&apos;t exist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="369" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="424" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a69a339b1a11a98ab428b23a0eda322a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1range" kindref="compound">range</ref></type>
        <definition>const range xlnt::worksheet::named_range</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>named_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the named range with the given name. Throws <ref refid="classxlnt_1_1key__not__found" kindref="compound">key_not_found</ref> exception if the named range doesn&apos;t exist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="369" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="439" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a3f527518c9a7b59c85c43c4a4f760c23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::remove_named_range</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>remove_named_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Removes a named range with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="386" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1026" bodyend="1034"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a4893d07dfed96b4d6bc586793dce1d4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
        <definition>row_t xlnt::worksheet::lowest_row</definition>
        <argsstring>() const</argsstring>
        <name>lowest_row</name>
        <briefdescription>
<para>Returns the row of the first non-empty cell in the worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="393" column="11" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="488" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ad9f7ade1268af691064d5ac5d17b5a9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
        <definition>row_t xlnt::worksheet::lowest_row_or_props</definition>
        <argsstring>() const</argsstring>
        <name>lowest_row_or_props</name>
        <briefdescription>
<para>Returns the row of the first non-empty cell or lowest row with properties in the worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="398" column="11" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="505" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a463fc655c6104badfcfffe79ee7e1a22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
        <definition>row_t xlnt::worksheet::highest_row</definition>
        <argsstring>() const</argsstring>
        <name>highest_row</name>
        <briefdescription>
<para>Returns the row of the last non-empty cell in the worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="403" column="11" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="522" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a00aa6db8c85ca3bc6e3c7165083df8bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
        <definition>row_t xlnt::worksheet::highest_row_or_props</definition>
        <argsstring>() const</argsstring>
        <name>highest_row_or_props</name>
        <briefdescription>
<para>Returns the row of the last non-empty cell or highest row with properties in the worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="408" column="11" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="534" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a0f8fb1aaa556f3415c5c8e4b3cd4bd2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
        <definition>row_t xlnt::worksheet::next_row</definition>
        <argsstring>() const</argsstring>
        <name>next_row</name>
        <briefdescription>
<para>Returns the row directly below the last non-empty cell in the worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="413" column="11" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="706" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1afceb7651672b605dd7617ba705721596" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
        <definition>column_t xlnt::worksheet::lowest_column</definition>
        <argsstring>() const</argsstring>
        <name>lowest_column</name>
        <briefdescription>
<para>Returns the column of the first non-empty cell in the worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="418" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="454" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a9b5aa18e8353e62fece137e1973c2042" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
        <definition>column_t xlnt::worksheet::lowest_column_or_props</definition>
        <argsstring>() const</argsstring>
        <name>lowest_column_or_props</name>
        <briefdescription>
<para>Returns the column of the first non-empty cell or lowest column with properties in the worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="423" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="471" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a48be494b534cf1c15ec62d6e861fe2d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
        <definition>column_t xlnt::worksheet::highest_column</definition>
        <argsstring>() const</argsstring>
        <name>highest_column</name>
        <briefdescription>
<para>Returns the column of the last non-empty cell in the worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="428" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="551" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1afd26b7db01d0aff7fb02feeb4f839cf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
        <definition>column_t xlnt::worksheet::highest_column_or_props</definition>
        <argsstring>() const</argsstring>
        <name>highest_column_or_props</name>
        <briefdescription>
<para>Returns the column of the last non-empty cell or highest column with properties in the worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="433" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="563" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a261f05d8a62977747299d92461fc9e84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref></type>
        <definition>range_reference xlnt::worksheet::calculate_dimension</definition>
        <argsstring>() const</argsstring>
        <name>calculate_dimension</name>
        <briefdescription>
<para>Returns a <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> pointing to the full range of non-empty cells in the worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="438" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="580" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a5e51e2f8e3396adfc0a2751a3826aebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::merge_cells</definition>
        <argsstring>(const std::string &amp;reference_string)</argsstring>
        <name>merge_cells</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>reference_string</declname>
        </param>
        <briefdescription>
<para>Merges the cells within the range represented by the given string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="445" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="648" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a370b7d922dc8662fa02fb6b413bbe7bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::merge_cells</definition>
        <argsstring>(const range_reference &amp;reference)</argsstring>
        <name>merge_cells</name>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Merges the cells within the given range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="450" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="658" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a4ce60b6626ef5de86dd3852b029bf94b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::unmerge_cells</definition>
        <argsstring>(const std::string &amp;reference_string)</argsstring>
        <name>unmerge_cells</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>reference_string</declname>
        </param>
        <briefdescription>
<para>Removes the merging of the cells in the range represented by the given string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="455" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="653" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a9fabc58e3c05d898aef057bf17a3ca0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::unmerge_cells</definition>
        <argsstring>(const range_reference &amp;reference)</argsstring>
        <name>unmerge_cells</name>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Removes the merging of the cells in the given range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="460" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="686" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ae3ac827eef04ab469c1d01ed2187c4bc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &gt;</type>
        <definition>std::vector&lt; range_reference &gt; xlnt::worksheet::merged_ranges</definition>
        <argsstring>() const</argsstring>
        <name>merged_ranges</name>
        <briefdescription>
<para>Returns a vector of references of all merged ranges in the worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="465" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a4569636da10049f96a59af63dea774d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::operator==</definition>
        <argsstring>(const worksheet &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this worksheet refers to the same worksheet as other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="472" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="949" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ac5ee8f14d02d9c202c83d6e36ac2f046" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::operator!=</definition>
        <argsstring>(const worksheet &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this worksheet doesn&apos;t refer to the same worksheet as other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="477" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="996" bodyend="999"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a739a624d0827ac0c7eaf6b7c622d217a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::operator==</definition>
        <argsstring>(std::nullptr_t) const</argsstring>
        <name>operator==</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
<para>Returns true if this worksheet is null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="482" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1001" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a63e4bc732cd957116255ae551a8173bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::operator!=</definition>
        <argsstring>(std::nullptr_t) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
<para>Returns true if this worksheet is not null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="487" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1006" bodyend="1009"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a9e69d7b5b2666d98fac1eb990f557b8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::operator=</definition>
        <argsstring>(const worksheet &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Sets the internal pointer of this worksheet object to point to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="492" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1011" bodyend="1014"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ac389497d95de112d2bdf973fd1a98020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        <definition>cell xlnt::worksheet::operator[]</definition>
        <argsstring>(const cell_reference &amp;reference)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Convenience method for <ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">worksheet::cell</ref> method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="492" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1af851ccb46c8df6eeead3ebf17e62a9dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        <definition>const cell xlnt::worksheet::operator[]</definition>
        <argsstring>(const cell_reference &amp;reference) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Convenience method for <ref refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" kindref="member">worksheet::cell</ref> method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="492" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1016" bodyend="1019"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a5c1614eb9bf609af862ae74206ac40f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::compare</definition>
        <argsstring>(const worksheet &amp;other, bool reference) const</argsstring>
        <name>compare</name>
        <param>
          <type>const <ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Returns true if this worksheet is equal to other. If reference is true, the comparison will only check that both worksheets point to the same sheet in the same workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="508" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="954" bodyend="994"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ab7021e96cba19202c1f36f3e1ac427c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_page_setup</definition>
        <argsstring>() const</argsstring>
        <name>has_page_setup</name>
        <briefdescription>
<para>Returns true if this worksheet has a page setup. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="515" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a5f3eefc4bfb1037624ffa120926b5f6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structxlnt_1_1page__setup" kindref="compound">xlnt::page_setup</ref></type>
        <definition>page_setup xlnt::worksheet::page_setup</definition>
        <argsstring>() const</argsstring>
        <name>page_setup</name>
        <briefdescription>
<para>Returns the page setup for this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="520" column="22" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="182" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a27f1aa4d2677e9db98b6668c5ce58b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::page_setup</definition>
        <argsstring>(const struct page_setup &amp;setup)</argsstring>
        <name>page_setup</name>
        <param>
          <type>const struct <ref refid="structxlnt_1_1page__setup" kindref="compound">page_setup</ref> &amp;</type>
          <declname>setup</declname>
        </param>
        <briefdescription>
<para>Sets the page setup for this sheet to setup. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="525" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1aa8ebe828801dc0e50fab4289227cd64d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_page_margins</definition>
        <argsstring>() const</argsstring>
        <name>has_page_margins</name>
        <briefdescription>
<para>Returns true if this page has margins. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="530" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1aa4285c468a7384649abcf1a1a92cba1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1page__margins" kindref="compound">xlnt::page_margins</ref></type>
        <definition>page_margins xlnt::worksheet::page_margins</definition>
        <argsstring>() const</argsstring>
        <name>page_margins</name>
        <briefdescription>
<para>Returns the margins of this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="535" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ae607465e03e2b9b4bf74f3609d753117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::page_margins</definition>
        <argsstring>(const class page_margins &amp;margins)</argsstring>
        <name>page_margins</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1page__margins" kindref="compound">page_margins</ref> &amp;</type>
          <declname>margins</declname>
        </param>
        <briefdescription>
<para>Sets the margins of this sheet to margins. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="540" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ae1c8c5f2ca9e88699a00eb574be06533" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref></type>
        <definition>range_reference xlnt::worksheet::auto_filter</definition>
        <argsstring>() const</argsstring>
        <name>auto_filter</name>
        <briefdescription>
<para>Returns the current auto-filter of this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="547" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a746e317f507c015a16323cd8ea42043b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::auto_filter</definition>
        <argsstring>(const std::string &amp;range_string)</argsstring>
        <name>auto_filter</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>range_string</declname>
        </param>
        <briefdescription>
<para>Sets the auto-filter of this sheet to the range defined by range_string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="552" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1aa13363509d7e87c7d83b165895bb8514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::auto_filter</definition>
        <argsstring>(const xlnt::range &amp;range)</argsstring>
        <name>auto_filter</name>
        <param>
          <type>const <ref refid="classxlnt_1_1range" kindref="compound">xlnt::range</ref> &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Sets the auto-filter of this sheet to the given range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="557" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a0830e6f7781b8af1031a0e505f17b344" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::auto_filter</definition>
        <argsstring>(const range_reference &amp;reference)</argsstring>
        <name>auto_filter</name>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Sets the auto-filter of this sheet to the range defined by reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="562" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a8ceeef08fc6fee74c61daf504be7a5ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::clear_auto_filter</definition>
        <argsstring>()</argsstring>
        <name>clear_auto_filter</name>
        <briefdescription>
<para>Clear the auto-filter from this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="567" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1afc1035b43426f60a946bb61b3671e98a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_auto_filter</definition>
        <argsstring>() const</argsstring>
        <name>has_auto_filter</name>
        <briefdescription>
<para>Returns true if this sheet has an auto-filter set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="572" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ad914d72ec3dbc3458814f2680bc62854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::reserve</definition>
        <argsstring>(std::size_t n)</argsstring>
        <name>reserve</name>
        <param>
          <type>std::size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Reserve n rows. This can be optionally called before adding many rows to improve performance. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="578" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1036" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a3d1c21b5dd1c29df57944e625dd9f7a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_phonetic_properties</definition>
        <argsstring>() const</argsstring>
        <name>has_phonetic_properties</name>
        <briefdescription>
<para>Returns true if this sheet has phonetic properties </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="583" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1213" bodyend="1216"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a73c5f29df7545c4d78926c6404d92513" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1phonetic__pr" kindref="compound">phonetic_pr</ref> &amp;</type>
        <definition>const phonetic_pr &amp; xlnt::worksheet::phonetic_properties</definition>
        <argsstring>() const</argsstring>
        <name>phonetic_properties</name>
        <briefdescription>
<para>Returns the phonetic properties of this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="588" column="23" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1218" bodyend="1221"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a3859407b94cf7cd6159518d15b7eb6d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::phonetic_properties</definition>
        <argsstring>(const phonetic_pr &amp;phonetic_props)</argsstring>
        <name>phonetic_properties</name>
        <param>
          <type>const <ref refid="classxlnt_1_1phonetic__pr" kindref="compound">phonetic_pr</ref> &amp;</type>
          <declname>phonetic_props</declname>
        </param>
        <briefdescription>
<para>Sets the phonetic properties of this sheet to phonetic_props </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="593" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1223" bodyend="1226"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1af5506249c8b3b00023f0ba60530919d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_header_footer</definition>
        <argsstring>() const</argsstring>
        <name>has_header_footer</name>
        <briefdescription>
<para>Returns true if this sheet has a header/footer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="598" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1228" bodyend="1231"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a6595eb968cbe9d0c384ace092f19f1ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1header__footer" kindref="compound">header_footer</ref></type>
        <definition>class header_footer xlnt::worksheet::header_footer</definition>
        <argsstring>() const</argsstring>
        <name>header_footer</name>
        <briefdescription>
<para>Returns the header/footer of this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="598" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1041" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a4c5285d235716f550605a90160b7a4cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::header_footer</definition>
        <argsstring>(const class header_footer &amp;new_header_footer)</argsstring>
        <name>header_footer</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1header__footer" kindref="compound">header_footer</ref> &amp;</type>
          <declname>new_header_footer</declname>
        </param>
        <briefdescription>
<para>Sets the header/footer of this sheet to new_header_footer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="608" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1233" bodyend="1236"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a38de65f307d983e9e828136ebf7e1b5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>xlnt::sheet_state</type>
        <definition>sheet_state xlnt::worksheet::sheet_state</definition>
        <argsstring>() const</argsstring>
        <name>sheet_state</name>
        <briefdescription>
<para>Returns the sheet state of this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="613" column="23" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1072" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a314b2933e883121cd277bfcafdebdfe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::sheet_state</definition>
        <argsstring>(xlnt::sheet_state state)</argsstring>
        <name>sheet_state</name>
        <param>
          <type>xlnt::sheet_state</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Sets the sheet state of this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="618" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1067" bodyend="1070"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a9dabe9096ad7eff66f361901b3617777" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet_1ae96ed144ca5710f7e45e39e51a4b2dbe" kindref="member">iterator</ref></type>
        <definition>worksheet::iterator xlnt::worksheet::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns an iterator to the first row in this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="623" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1112" bodyend="1115"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a18c9e4e7755097f09a19dc86d304f232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet_1ae96ed144ca5710f7e45e39e51a4b2dbe" kindref="member">iterator</ref></type>
        <definition>worksheet::iterator xlnt::worksheet::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns an iterator one past the last row in this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="628" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1117" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a6b94d70d3c06fbcb60238fdc98ab00e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet_1a63658d488e4268777aa391fa0050233a" kindref="member">const_iterator</ref></type>
        <definition>worksheet::const_iterator xlnt::worksheet::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Return a constant iterator to the first row in this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="633" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1132" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a8d3600237b5fb696fd070b1286b5d503" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet_1a63658d488e4268777aa391fa0050233a" kindref="member">const_iterator</ref></type>
        <definition>worksheet::const_iterator xlnt::worksheet::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns a constant iterator to one past the last row in this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="638" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1137" bodyend="1140"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1abeb4141869e19fe9f2dbdff09caa5617" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet_1a63658d488e4268777aa391fa0050233a" kindref="member">const_iterator</ref></type>
        <definition>worksheet::const_iterator xlnt::worksheet::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <briefdescription>
<para>Return a constant iterator to the first row in this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="643" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1122" bodyend="1125"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ae5428cd319db0c0284a279c2cb205ebd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet_1a63658d488e4268777aa391fa0050233a" kindref="member">const_iterator</ref></type>
        <definition>worksheet::const_iterator xlnt::worksheet::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <briefdescription>
<para>Returns a constant iterator to one past the last row in this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="648" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1127" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a1510c3bae89168cfb4ab381c29ce88db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::print_title_rows</definition>
        <argsstring>(row_t first_row, row_t last_row)</argsstring>
        <name>print_title_rows</name>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>first_row</declname>
        </param>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>last_row</declname>
        </param>
        <briefdescription>
<para>Sets rows to repeat at top during printing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="653" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1147" bodyend="1150"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ace768d103a9e0e4dcb30c0f4ab9f3969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::print_title_rows</definition>
        <argsstring>(row_t last_row)</argsstring>
        <name>print_title_rows</name>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>last_row</declname>
        </param>
        <briefdescription>
<para>Sets rows to repeat at top during printing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="658" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1142" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a2684cdb908ea3cdff7aa66c1539c1882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::print_title_cols</definition>
        <argsstring>(column_t first_column, column_t last_column)</argsstring>
        <name>print_title_cols</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>first_column</declname>
        </param>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>last_column</declname>
        </param>
        <briefdescription>
<para>Sets columns to repeat at left during printing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="663" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1157" bodyend="1160"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1adf13f46ace48e54232633852f138d37b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::print_title_cols</definition>
        <argsstring>(column_t last_column)</argsstring>
        <name>print_title_cols</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>last_column</declname>
        </param>
        <briefdescription>
<para>Sets columns to repeat at left during printing. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="668" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1152" bodyend="1155"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a98cbec7939236c4ee7e8a5f7ccd28cd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::worksheet::print_titles</definition>
        <argsstring>() const</argsstring>
        <name>print_titles</name>
        <briefdescription>
<para>Returns a string representation of the defined print titles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="673" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1162" bodyend="1176"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a8acdd63570f0dc32734ef6fe5eb30919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::print_area</definition>
        <argsstring>(const std::string &amp;print_area)</argsstring>
        <name>print_area</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>print_area</declname>
        </param>
        <briefdescription>
<para>Sets the print area of this sheet to print_area. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="678" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1178" bodyend="1181"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a0c2f5c3d47499969321e2b7f2190328b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref></type>
        <definition>range_reference xlnt::worksheet::print_area</definition>
        <argsstring>() const</argsstring>
        <name>print_area</name>
        <briefdescription>
<para>Returns the print area defined for this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="683" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1183" bodyend="1186"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a786995df580eb382f86723c634c4ffe9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_view</definition>
        <argsstring>() const</argsstring>
        <name>has_view</name>
        <briefdescription>
<para>Returns true if this sheet has any number of views defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="688" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1188" bodyend="1191"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1afd8b8426c2a74615000d7a30157b5520" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1sheet__view" kindref="compound">sheet_view</ref> &amp;</type>
        <definition>sheet_view &amp; xlnt::worksheet::view</definition>
        <argsstring>(std::size_t index=0) const</argsstring>
        <name>view</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Returns the view at the given index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="693" column="16" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1193" bodyend="1196"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a17b07f13febfae1a31d728d2fa7eb377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::add_view</definition>
        <argsstring>(const sheet_view &amp;new_view)</argsstring>
        <name>add_view</name>
        <param>
          <type>const <ref refid="classxlnt_1_1sheet__view" kindref="compound">sheet_view</ref> &amp;</type>
          <declname>new_view</declname>
        </param>
        <briefdescription>
<para>Adds new_view to the set of available views for this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="698" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1198" bodyend="1201"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a96226f3aebb43c0c348b1fefb42fd109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::active_cell</definition>
        <argsstring>(const cell_reference &amp;ref)</argsstring>
        <name>active_cell</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <briefdescription>
<para>Set the active cell on the default worksheet view to the given reference. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="703" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="337" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a8bc9f4975ccb951a6ef73688cc3a2a1c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_active_cell</definition>
        <argsstring>() const</argsstring>
        <name>has_active_cell</name>
        <briefdescription>
<para>Returns true if the worksheet has a view and the view has an active cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="708" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="356" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a41ccc231a9581c5d7037a1b17d690bd0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref></type>
        <definition>cell_reference xlnt::worksheet::active_cell</definition>
        <argsstring>() const</argsstring>
        <name>active_cell</name>
        <briefdescription>
<para>Returns the active cell on the default worksheet view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="713" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="366" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a416c5ea1d961fecda670181c6ac234e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::clear_page_breaks</definition>
        <argsstring>()</argsstring>
        <name>clear_page_breaks</name>
        <briefdescription>
<para>Remove all manual column and row page breaks (represented as dashed blue lines in the page view in Excel). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="721" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1238" bodyend="1242"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ae4b4f4123e826dd6788f30554e12de6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; row_t &gt; &amp; xlnt::worksheet::page_break_rows</definition>
        <argsstring>() const</argsstring>
        <name>page_break_rows</name>
        <briefdescription>
<para>Returns vector where each element represents a row which will break a page below it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="726" column="23" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1249" bodyend="1252"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1aa5f8638ca90d1796dde3269789bcdb91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::page_break_at_row</definition>
        <argsstring>(row_t row)</argsstring>
        <name>page_break_at_row</name>
        <param>
          <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Add a page break at the given row. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="731" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1244" bodyend="1247"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a61b87666b6ace6e6d1ee406425102a21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; column_t &gt; &amp; xlnt::worksheet::page_break_columns</definition>
        <argsstring>() const</argsstring>
        <name>page_break_columns</name>
        <briefdescription>
<para>Returns vector where each element represents a column which will break a page to the right. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="736" column="23" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1259" bodyend="1262"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ae3349851433d5a7754995eb478be8c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::page_break_at_column</definition>
        <argsstring>(column_t column)</argsstring>
        <name>page_break_at_column</name>
        <param>
          <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>Add a page break at the given column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="741" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1254" bodyend="1257"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ac08cf6404e8235e376215d67d391d53b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1conditional__format" kindref="compound">xlnt::conditional_format</ref></type>
        <definition>conditional_format xlnt::worksheet::conditional_format</definition>
        <argsstring>(const range_reference &amp;ref, const condition &amp;when)</argsstring>
        <name>conditional_format</name>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1condition" kindref="compound">condition</ref> &amp;</type>
          <declname>when</declname>
        </param>
        <briefdescription>
<para>Creates a conditional format for the given range with the given condition. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="746" column="30" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1302" bodyend="1305"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a9690eae90ec94f7fbfe37188aa775e35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1path" kindref="compound">xlnt::path</ref></type>
        <definition>path xlnt::worksheet::path</definition>
        <argsstring>() const</argsstring>
        <name>path</name>
        <briefdescription>
<para>Returns the path of this worksheet in the containing package. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="751" column="16" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1307" bodyend="1311"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a628d2af9edc362c99f19d2606c918bfe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1relationship" kindref="compound">relationship</ref></type>
        <definition>relationship xlnt::worksheet::referring_relationship</definition>
        <argsstring>() const</argsstring>
        <name>referring_relationship</name>
        <briefdescription>
<para>Returns the relationship from the parent workbook to this worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="756" column="18" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1313" bodyend="1321"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a3b6e1b0209c89c0e6ee9748d7d3b5d2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1sheet__format__properties" kindref="compound">sheet_format_properties</ref></type>
        <definition>sheet_format_properties xlnt::worksheet::format_properties</definition>
        <argsstring>() const</argsstring>
        <name>format_properties</name>
        <briefdescription>
<para>Returns the current formatting properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="761" column="29" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1323" bodyend="1326"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a6414c6ba52c0a3a63d8f196c7d8604d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::format_properties</definition>
        <argsstring>(const sheet_format_properties &amp;properties)</argsstring>
        <name>format_properties</name>
        <param>
          <type>const <ref refid="classxlnt_1_1sheet__format__properties" kindref="compound">sheet_format_properties</ref> &amp;</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
<para>Sets the format properties to the given properties. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="766" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1328" bodyend="1331"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a61ab53ed257e2ac41daa63480fe8a7c8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::worksheet::has_drawing</definition>
        <argsstring>() const</argsstring>
        <name>has_drawing</name>
        <briefdescription>
<para>Returns true if this worksheet has a page setup. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="771" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1333" bodyend="1336"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a7f26bb4ffed33e459b52ff53ff9edc35" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::worksheet::worksheet</definition>
        <argsstring>(detail::worksheet_impl *d)</argsstring>
        <name>worksheet</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1worksheet__impl" kindref="compound">detail::worksheet_impl</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Constructs a worksheet impl wrapper from d. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="784" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1ad27c11a7aed398ba78ffd637fc90a640" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::register_comments_in_manifest</definition>
        <argsstring>()</argsstring>
        <name>register_comments_in_manifest</name>
        <briefdescription>
<para>Creates a comments part in the manifest as a relationship target of this sheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="789" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1203" bodyend="1206"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1aa21df3b0c198d27152e30bc1a5eace7e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::register_calc_chain_in_manifest</definition>
        <argsstring>()</argsstring>
        <name>register_calc_chain_in_manifest</name>
        <briefdescription>
<para>Creates a calcChain part in the manifest if it doesn&apos;t already exist. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="794" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1208" bodyend="1211"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a460ef98b5d935d96716fbb33c4d26288" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::garbage_collect_formulae</definition>
        <argsstring>()</argsstring>
        <name>garbage_collect_formulae</name>
        <briefdescription>
<para>Removes calcChain part from manifest if no formulae remain in workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="799" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1292" bodyend="1295"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a63d5167264a2bb7183293b5ba8d0f6be" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::parent</definition>
        <argsstring>(class workbook &amp;wb)</argsstring>
        <name>parent</name>
        <param>
          <type>class <ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> &amp;</type>
          <declname>wb</declname>
        </param>
        <briefdescription>
<para>Sets the parent of this worksheet to wb. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="804" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="1297" bodyend="1300"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1worksheet_1a9056737770c87d21d188e00053fd4cf7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::worksheet::move_cells</definition>
        <argsstring>(std::uint32_t index, std::uint32_t amount, row_or_col_t row_or_col, bool reverse=false)</argsstring>
        <name>move_cells</name>
        <param>
          <type>std::uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>std::uint32_t</type>
          <declname>amount</declname>
        </param>
        <param>
          <type><ref refid="namespacexlnt_1a8dc0eda024e26470579fd066826f64f3" kindref="member">row_or_col_t</ref></type>
          <declname>row_or_col</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>reverse</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Move cells after index down or right by a given amount. The direction is decided by row_or_col. If reverse is true, the cells will be moved up or left, depending on row_or_col. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="810" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/worksheet.cpp" bodystart="797" bodyend="947"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A worksheet is a 2D array of cells starting with cell A1 in the top-left corner and extending indefinitely down and right as needed. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" line="76" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/worksheet.hpp" bodystart="77" bodyend="816"/>
    <listofallmembers>
      <member refid="classxlnt_1_1worksheet_1a96226f3aebb43c0c348b1fefb42fd109" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>active_cell</name></member>
      <member refid="classxlnt_1_1worksheet_1a41ccc231a9581c5d7037a1b17d690bd0" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>active_cell</name></member>
      <member refid="classxlnt_1_1worksheet_1a158ef9ecc40eb80ec0350377ee3c757d" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>add_column_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1ad2cabfe79e832411e6a52bb16f98dc95" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>add_row_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1a17b07f13febfae1a31d728d2fa7eb377" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>add_view</name></member>
      <member refid="classxlnt_1_1worksheet_1ae1c8c5f2ca9e88699a00eb574be06533" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>auto_filter</name></member>
      <member refid="classxlnt_1_1worksheet_1a746e317f507c015a16323cd8ea42043b" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>auto_filter</name></member>
      <member refid="classxlnt_1_1worksheet_1aa13363509d7e87c7d83b165895bb8514" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>auto_filter</name></member>
      <member refid="classxlnt_1_1worksheet_1a0830e6f7781b8af1031a0e505f17b344" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>auto_filter</name></member>
      <member refid="classxlnt_1_1worksheet_1a9dabe9096ad7eff66f361901b3617777" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>begin</name></member>
      <member refid="classxlnt_1_1worksheet_1a6b94d70d3c06fbcb60238fdc98ab00e5" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>begin</name></member>
      <member refid="classxlnt_1_1worksheet_1a261f05d8a62977747299d92461fc9e84" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>calculate_dimension</name></member>
      <member refid="classxlnt_1_1worksheet_1abeb4141869e19fe9f2dbdff09caa5617" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>cbegin</name></member>
      <member refid="classxlnt_1_1worksheet_1aae88f49f4ddcc1e24b2e6c1841c35018" prot="private" virt="non-virtual"><scope>xlnt::worksheet</scope><name>cell</name></member>
      <member refid="classxlnt_1_1worksheet_1a537be721b2b8c8c2c0cb4a3f159741a4" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>cell</name></member>
      <member refid="classxlnt_1_1worksheet_1abf8998a003c3d6e5e527020da5f155fa" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>cell</name></member>
      <member refid="classxlnt_1_1worksheet_1ad312313d5a4c0c15957a16e87d97b54e" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>cell</name></member>
      <member refid="classxlnt_1_1worksheet_1af3956bc78f3d6b06a29b218596ed37c1" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>cell</name></member>
      <member refid="classxlnt_1_1worksheet_1ae5428cd319db0c0284a279c2cb205ebd" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>cend</name></member>
      <member refid="classxlnt_1_1worksheet_1a8ceeef08fc6fee74c61daf504be7a5ee" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>clear_auto_filter</name></member>
      <member refid="classxlnt_1_1worksheet_1a0f5e7357a5d62397bf826371ff8cf5ee" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>clear_cell</name></member>
      <member refid="classxlnt_1_1worksheet_1a416c5ea1d961fecda670181c6ac234e9" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>clear_page_breaks</name></member>
      <member refid="classxlnt_1_1worksheet_1ac04b853a21d8f8a06bd08896db5260b0" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>clear_row</name></member>
      <member refid="classxlnt_1_1worksheet_1a4b03bdef7998ec5f9f1689a03ec54785" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>column_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1a2b6a1f89c2dcaaf170058f65d4db04f6" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>column_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1a71b1660f42ffee879079463393efe24c" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>column_width</name></member>
      <member refid="classxlnt_1_1worksheet_1aef7f7c5c52affd4c8a10f40f782794ad" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>columns</name></member>
      <member refid="classxlnt_1_1worksheet_1adad29f025fae53ffb3a9203e3a2976d2" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>columns</name></member>
      <member refid="classxlnt_1_1worksheet_1a5c1614eb9bf609af862ae74206ac40f9" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>compare</name></member>
      <member refid="classxlnt_1_1worksheet_1ac08cf6404e8235e376215d67d391d53b" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>conditional_format</name></member>
      <member refid="classxlnt_1_1worksheet_1a63658d488e4268777aa391fa0050233a" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>const_iterator</name></member>
      <member refid="classxlnt_1_1worksheet_1a487acfcdb9d580938240775d2f99c7df" prot="private" virt="non-virtual"><scope>xlnt::worksheet</scope><name>const_range_iterator</name></member>
      <member refid="classxlnt_1_1worksheet_1a5df76c014e585a15e75b9bb7afcef11f" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>const_reverse_iterator</name></member>
      <member refid="classxlnt_1_1worksheet_1ad11c6a505ee9a08a13251250a355a447" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>create_named_range</name></member>
      <member refid="classxlnt_1_1worksheet_1af73844f7be716fa3f34ca2175a7fbfb5" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>create_named_range</name></member>
      <member refid="classxlnt_1_1worksheet_1afb9f40992f3fc406260c4a38517ee19e" prot="private" virt="non-virtual"><scope>xlnt::worksheet</scope><name>d_</name></member>
      <member refid="classxlnt_1_1worksheet_1a651d63782df4463c8431c9c52113ee54" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>delete_columns</name></member>
      <member refid="classxlnt_1_1worksheet_1a1e4853431c31b53d455bf158570cc393" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>delete_rows</name></member>
      <member refid="classxlnt_1_1worksheet_1a5c27ff96f65a231e21871a228cbaf740" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>detail::xlsx_consumer</name></member>
      <member refid="classxlnt_1_1worksheet_1aeaa1b2a5f3d37ddb4b8ca1ebaab144f3" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>detail::xlsx_producer</name></member>
      <member refid="classxlnt_1_1worksheet_1a18c9e4e7755097f09a19dc86d304f232" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>end</name></member>
      <member refid="classxlnt_1_1worksheet_1a8d3600237b5fb696fd070b1286b5d503" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>end</name></member>
      <member refid="classxlnt_1_1worksheet_1a3b6e1b0209c89c0e6ee9748d7d3b5d2e" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>format_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1a6414c6ba52c0a3a63d8f196c7d8604d5" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>format_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1a0cbbf8626202bd83a901e0c8ff3c4d33" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>freeze_panes</name></member>
      <member refid="classxlnt_1_1worksheet_1af00727b60f55c3c673444d55c3ce8b6f" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>freeze_panes</name></member>
      <member refid="classxlnt_1_1worksheet_1a9242ee6abf016a88fbfda441ded5fcff" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>frozen_panes</name></member>
      <member refid="classxlnt_1_1worksheet_1a4f218d49d06f6f44dbab452bf2bdec3e" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>garbage_collect</name></member>
      <member refid="classxlnt_1_1worksheet_1a460ef98b5d935d96716fbb33c4d26288" prot="private" virt="non-virtual"><scope>xlnt::worksheet</scope><name>garbage_collect_formulae</name></member>
      <member refid="classxlnt_1_1worksheet_1a8bc9f4975ccb951a6ef73688cc3a2a1c" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_active_cell</name></member>
      <member refid="classxlnt_1_1worksheet_1afc1035b43426f60a946bb61b3671e98a" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_auto_filter</name></member>
      <member refid="classxlnt_1_1worksheet_1aa96b7d1b9ee7e63b00220a1039db96c4" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_cell</name></member>
      <member refid="classxlnt_1_1worksheet_1a9cc68476d47cf5fea8761ef67fdefe6e" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_column_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1a61ab53ed257e2ac41daa63480fe8a7c8" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_drawing</name></member>
      <member refid="classxlnt_1_1worksheet_1af47eda457f89f9a0c8da5dadec53e01d" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_frozen_panes</name></member>
      <member refid="classxlnt_1_1worksheet_1af5506249c8b3b00023f0ba60530919d0" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_header_footer</name></member>
      <member refid="classxlnt_1_1worksheet_1aaed7880fd2b7bf2ffcd92fe64e768e4f" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_named_range</name></member>
      <member refid="classxlnt_1_1worksheet_1aa8ebe828801dc0e50fab4289227cd64d" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_page_margins</name></member>
      <member refid="classxlnt_1_1worksheet_1ab7021e96cba19202c1f36f3e1ac427c4" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_page_setup</name></member>
      <member refid="classxlnt_1_1worksheet_1a3d1c21b5dd1c29df57944e625dd9f7a3" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_phonetic_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1ab02c7ae0e6b5be9c8253eae5e14986ed" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_row_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1a786995df580eb382f86723c634c4ffe9" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>has_view</name></member>
      <member refid="classxlnt_1_1worksheet_1a6595eb968cbe9d0c384ace092f19f1ec" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>header_footer</name></member>
      <member refid="classxlnt_1_1worksheet_1a4c5285d235716f550605a90160b7a4cd" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>header_footer</name></member>
      <member refid="classxlnt_1_1worksheet_1a48be494b534cf1c15ec62d6e861fe2d0" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>highest_column</name></member>
      <member refid="classxlnt_1_1worksheet_1afd26b7db01d0aff7fb02feeb4f839cf3" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>highest_column_or_props</name></member>
      <member refid="classxlnt_1_1worksheet_1a463fc655c6104badfcfffe79ee7e1a22" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>highest_row</name></member>
      <member refid="classxlnt_1_1worksheet_1a00aa6db8c85ca3bc6e3c7165083df8bc" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>highest_row_or_props</name></member>
      <member refid="classxlnt_1_1worksheet_1a2a84f029276bfd9faec801fb17d3d6a9" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>id</name></member>
      <member refid="classxlnt_1_1worksheet_1aad07421a40956072818d448c7bc0e812" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>id</name></member>
      <member refid="classxlnt_1_1worksheet_1ac925be7acfd64ff61a2bed5ace6afda2" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>insert_columns</name></member>
      <member refid="classxlnt_1_1worksheet_1ab6925c264dfd8571f59e9aa42b95839e" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>insert_rows</name></member>
      <member refid="classxlnt_1_1worksheet_1ae96ed144ca5710f7e45e39e51a4b2dbe" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>iterator</name></member>
      <member refid="classxlnt_1_1worksheet_1afceb7651672b605dd7617ba705721596" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>lowest_column</name></member>
      <member refid="classxlnt_1_1worksheet_1a9b5aa18e8353e62fece137e1973c2042" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>lowest_column_or_props</name></member>
      <member refid="classxlnt_1_1worksheet_1a4893d07dfed96b4d6bc586793dce1d4c" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>lowest_row</name></member>
      <member refid="classxlnt_1_1worksheet_1ad9f7ade1268af691064d5ac5d17b5a9e" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>lowest_row_or_props</name></member>
      <member refid="classxlnt_1_1worksheet_1a5e51e2f8e3396adfc0a2751a3826aebf" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>merge_cells</name></member>
      <member refid="classxlnt_1_1worksheet_1a370b7d922dc8662fa02fb6b413bbe7bc" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>merge_cells</name></member>
      <member refid="classxlnt_1_1worksheet_1ae3ac827eef04ab469c1d01ed2187c4bc" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>merged_ranges</name></member>
      <member refid="classxlnt_1_1worksheet_1a9056737770c87d21d188e00053fd4cf7" prot="private" virt="non-virtual"><scope>xlnt::worksheet</scope><name>move_cells</name></member>
      <member refid="classxlnt_1_1worksheet_1a3e8416a110ca2603076dd5c72556472b" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>named_range</name></member>
      <member refid="classxlnt_1_1worksheet_1a69a339b1a11a98ab428b23a0eda322a2" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>named_range</name></member>
      <member refid="classxlnt_1_1worksheet_1a0f8fb1aaa556f3415c5c8e4b3cd4bd2e" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>next_row</name></member>
      <member refid="classxlnt_1_1worksheet_1ac5ee8f14d02d9c202c83d6e36ac2f046" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>operator!=</name></member>
      <member refid="classxlnt_1_1worksheet_1a63e4bc732cd957116255ae551a8173bf" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>operator!=</name></member>
      <member refid="classxlnt_1_1worksheet_1a9e69d7b5b2666d98fac1eb990f557b8a" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>operator=</name></member>
      <member refid="classxlnt_1_1worksheet_1a4569636da10049f96a59af63dea774d7" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>operator==</name></member>
      <member refid="classxlnt_1_1worksheet_1a739a624d0827ac0c7eaf6b7c622d217a" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>operator==</name></member>
      <member refid="classxlnt_1_1worksheet_1ac389497d95de112d2bdf973fd1a98020" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>operator[]</name></member>
      <member refid="classxlnt_1_1worksheet_1af851ccb46c8df6eeead3ebf17e62a9dd" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>operator[]</name></member>
      <member refid="classxlnt_1_1worksheet_1ae3349851433d5a7754995eb478be8c9a" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>page_break_at_column</name></member>
      <member refid="classxlnt_1_1worksheet_1aa5f8638ca90d1796dde3269789bcdb91" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>page_break_at_row</name></member>
      <member refid="classxlnt_1_1worksheet_1a61b87666b6ace6e6d1ee406425102a21" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>page_break_columns</name></member>
      <member refid="classxlnt_1_1worksheet_1ae4b4f4123e826dd6788f30554e12de6a" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>page_break_rows</name></member>
      <member refid="classxlnt_1_1worksheet_1aa4285c468a7384649abcf1a1a92cba1c" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>page_margins</name></member>
      <member refid="classxlnt_1_1worksheet_1ae607465e03e2b9b4bf74f3609d753117" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>page_margins</name></member>
      <member refid="classxlnt_1_1worksheet_1a5f3eefc4bfb1037624ffa120926b5f6a" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>page_setup</name></member>
      <member refid="classxlnt_1_1worksheet_1a27f1aa4d2677e9db98b6668c5ce58b07" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>page_setup</name></member>
      <member refid="classxlnt_1_1worksheet_1a63d5167264a2bb7183293b5ba8d0f6be" prot="private" virt="non-virtual"><scope>xlnt::worksheet</scope><name>parent</name></member>
      <member refid="classxlnt_1_1worksheet_1a9690eae90ec94f7fbfe37188aa775e35" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>path</name></member>
      <member refid="classxlnt_1_1worksheet_1a73c5f29df7545c4d78926c6404d92513" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>phonetic_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1a3859407b94cf7cd6159518d15b7eb6d0" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>phonetic_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1a627951189735a34fdbd953e91fb8534f" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>point_pos</name></member>
      <member refid="classxlnt_1_1worksheet_1a8acdd63570f0dc32734ef6fe5eb30919" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>print_area</name></member>
      <member refid="classxlnt_1_1worksheet_1a0c2f5c3d47499969321e2b7f2190328b" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>print_area</name></member>
      <member refid="classxlnt_1_1worksheet_1a2684cdb908ea3cdff7aa66c1539c1882" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>print_title_cols</name></member>
      <member refid="classxlnt_1_1worksheet_1adf13f46ace48e54232633852f138d37b" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>print_title_cols</name></member>
      <member refid="classxlnt_1_1worksheet_1a1510c3bae89168cfb4ab381c29ce88db" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>print_title_rows</name></member>
      <member refid="classxlnt_1_1worksheet_1ace768d103a9e0e4dcb30c0f4ab9f3969" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>print_title_rows</name></member>
      <member refid="classxlnt_1_1worksheet_1a98cbec7939236c4ee7e8a5f7ccd28cd2" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>print_titles</name></member>
      <member refid="classxlnt_1_1worksheet_1a8f9c0cc9493c0976f97a49dac38f6732" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>range</name></member>
      <member refid="classxlnt_1_1worksheet_1ae653c3d890293c629c9f17d48b11bea2" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>range</name></member>
      <member refid="classxlnt_1_1worksheet_1ad68bda36461c1e961e4c03cb979dde2e" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>range</name></member>
      <member refid="classxlnt_1_1worksheet_1a474966ce22a4e6dcef1f0e7c35569ca1" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>range</name></member>
      <member refid="classxlnt_1_1worksheet_1a06e4ef1ae5a9412e52086ec54ec7c3d2" prot="private" virt="non-virtual"><scope>xlnt::worksheet</scope><name>range_iterator</name></member>
      <member refid="classxlnt_1_1worksheet_1a628d2af9edc362c99f19d2606c918bfe" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>referring_relationship</name></member>
      <member refid="classxlnt_1_1worksheet_1aa21df3b0c198d27152e30bc1a5eace7e" prot="private" virt="non-virtual"><scope>xlnt::worksheet</scope><name>register_calc_chain_in_manifest</name></member>
      <member refid="classxlnt_1_1worksheet_1ad27c11a7aed398ba78ffd637fc90a640" prot="private" virt="non-virtual"><scope>xlnt::worksheet</scope><name>register_comments_in_manifest</name></member>
      <member refid="classxlnt_1_1worksheet_1a3f527518c9a7b59c85c43c4a4f760c23" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>remove_named_range</name></member>
      <member refid="classxlnt_1_1worksheet_1ad914d72ec3dbc3458814f2680bc62854" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>reserve</name></member>
      <member refid="classxlnt_1_1worksheet_1a862aacebd1521c7d000ef740f6e1e918" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>reverse_iterator</name></member>
      <member refid="classxlnt_1_1worksheet_1a9dfad3c8abf86758156649388d54d18e" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>row_height</name></member>
      <member refid="classxlnt_1_1worksheet_1aff6507aa5653c439811f1f7c5aa16d03" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>row_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1a003ac3abdf0cb218f8664214bb52ceb1" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>row_properties</name></member>
      <member refid="classxlnt_1_1worksheet_1a12778fcfc846484b59f95aa858a6d904" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>rows</name></member>
      <member refid="classxlnt_1_1worksheet_1ad57834107e0c93a2c1b64c4cb6d01d9e" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>rows</name></member>
      <member refid="classxlnt_1_1worksheet_1a38de65f307d983e9e828136ebf7e1b5f" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>sheet_state</name></member>
      <member refid="classxlnt_1_1worksheet_1a314b2933e883121cd277bfcafdebdfe8" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>sheet_state</name></member>
      <member refid="classxlnt_1_1worksheet_1ad6b664b8fd51d88bb50b6aca9870ac07" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>title</name></member>
      <member refid="classxlnt_1_1worksheet_1a1042c97e2d1a85f45e1cef1e5104268a" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>title</name></member>
      <member refid="classxlnt_1_1worksheet_1a09deeb4f6b94bf1ce596644d75370321" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>unfreeze_panes</name></member>
      <member refid="classxlnt_1_1worksheet_1a4ce60b6626ef5de86dd3852b029bf94b" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>unmerge_cells</name></member>
      <member refid="classxlnt_1_1worksheet_1a9fabc58e3c05d898aef057bf17a3ca0b" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>unmerge_cells</name></member>
      <member refid="classxlnt_1_1worksheet_1afd8b8426c2a74615000d7a30157b5520" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>view</name></member>
      <member refid="classxlnt_1_1worksheet_1a71339f4270bfea0439cd2aa3c11f9b02" prot="private" virt="non-virtual"><scope>xlnt::worksheet</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1worksheet_1ae4f3620687b70078065dababe2d43524" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1worksheet_1af2643961703e50d7254222e6c2c2a0c6" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1worksheet_1a060c9a7e63a0f118d118580eb3a2bb7b" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>worksheet</name></member>
      <member refid="classxlnt_1_1worksheet_1a12ed1c574b4e5b4de187f32e85c19f9f" prot="public" virt="non-virtual"><scope>xlnt::worksheet</scope><name>worksheet</name></member>
      <member refid="classxlnt_1_1worksheet_1a7f26bb4ffed33e459b52ff53ff9edc35" prot="private" virt="non-virtual"><scope>xlnt::worksheet</scope><name>worksheet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
