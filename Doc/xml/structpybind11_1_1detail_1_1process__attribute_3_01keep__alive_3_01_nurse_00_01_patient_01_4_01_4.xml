<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="structpybind11_1_1detail_1_1process__attribute_3_01keep__alive_3_01_nurse_00_01_patient_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</compoundname>
    <basecompoundref refid="structpybind11_1_1detail_1_1process__attribute__default" prot="public" virt="non-virtual">pybind11::detail::process_attribute_default&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</basecompoundref>
    <includes refid="attr_8h" local="no">attr.h</includes>
    <templateparamlist>
      <param>
        <type><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref></type>
        <declname>Nurse</declname>
        <defname>Nurse</defname>
      </param>
      <param>
        <type><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref></type>
        <declname>Patient</declname>
        <defname>Patient</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1process__attribute_3_01keep__alive_3_01_nurse_00_01_patient_01_4_01_4_1a070196a560d82a5ac62ad275ca2503aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
            <defval>Nurse</defval>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref></type>
            <declname>P</declname>
            <defname>P</defname>
            <defval><ref refid="namespacepybind11_1_1detail_1aea77a49f75ac89645a479ae8562c6565" kindref="member">Patient</ref></defval>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1_1detail_1a492fb1fcf079a5bc67248b852bc73619" kindref="member">enable_if_t</ref>&lt; N !=0 &amp;&amp;P !=0, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;::precall</definition>
        <argsstring>(function_call &amp;call)</argsstring>
        <name>precall</name>
        <param>
          <type><ref refid="structpybind11_1_1detail_1_1function__call" kindref="compound">function_call</ref> &amp;</type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/attr.h" line="426" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/attr.h" bodystart="426" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1process__attribute_3_01keep__alive_3_01_nurse_00_01_patient_01_4_01_4_1a1b73a861be60ff3f27702c49941c6a9e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
            <defval>Nurse</defval>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref></type>
            <declname>P</declname>
            <defname>P</defname>
            <defval><ref refid="namespacepybind11_1_1detail_1aea77a49f75ac89645a479ae8562c6565" kindref="member">Patient</ref></defval>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1_1detail_1a492fb1fcf079a5bc67248b852bc73619" kindref="member">enable_if_t</ref>&lt; N !=0 &amp;&amp;P !=0, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;::postcall</definition>
        <argsstring>(function_call &amp;, handle)</argsstring>
        <name>postcall</name>
        <param>
          <type><ref refid="structpybind11_1_1detail_1_1function__call" kindref="compound">function_call</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/attr.h" line="428" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/attr.h" bodystart="428" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1process__attribute_3_01keep__alive_3_01_nurse_00_01_patient_01_4_01_4_1afa04221c71a949e617c45c129e7dc8f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
            <defval>Nurse</defval>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref></type>
            <declname>P</declname>
            <defname>P</defname>
            <defval><ref refid="namespacepybind11_1_1detail_1aea77a49f75ac89645a479ae8562c6565" kindref="member">Patient</ref></defval>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1_1detail_1a492fb1fcf079a5bc67248b852bc73619" kindref="member">enable_if_t</ref>&lt; N==0||P==0, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;::precall</definition>
        <argsstring>(function_call &amp;)</argsstring>
        <name>precall</name>
        <param>
          <type><ref refid="structpybind11_1_1detail_1_1function__call" kindref="compound">function_call</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/attr.h" line="430" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/attr.h" bodystart="430" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1process__attribute_3_01keep__alive_3_01_nurse_00_01_patient_01_4_01_4_1ad37c5771db301ed43d1d68d8476ed0af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref></type>
            <declname>N</declname>
            <defname>N</defname>
            <defval>Nurse</defval>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref></type>
            <declname>P</declname>
            <defname>P</defname>
            <defval><ref refid="namespacepybind11_1_1detail_1aea77a49f75ac89645a479ae8562c6565" kindref="member">Patient</ref></defval>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1_1detail_1a492fb1fcf079a5bc67248b852bc73619" kindref="member">enable_if_t</ref>&lt; N==0||P==0, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;::postcall</definition>
        <argsstring>(function_call &amp;call, handle ret)</argsstring>
        <name>postcall</name>
        <param>
          <type><ref refid="structpybind11_1_1detail_1_1function__call" kindref="compound">function_call</ref> &amp;</type>
          <declname>call</declname>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>ret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/attr.h" line="432" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/attr.h" bodystart="432" bodyend="432"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Process a <ref refid="structpybind11_1_1keep__alive" kindref="compound">keep_alive</ref> call policy <ndash/> invokes keep_alive_impl during the pre-call handler if both Nurse, Patient != 0 and use the post-call handler otherwise </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</label>
        <link refid="structpybind11_1_1detail_1_1process__attribute_3_01keep__alive_3_01_nurse_00_01_patient_01_4_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>pybind11::detail::process_attribute_default&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</label>
        <link refid="structpybind11_1_1detail_1_1process__attribute__default"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</label>
        <link refid="structpybind11_1_1detail_1_1process__attribute_3_01keep__alive_3_01_nurse_00_01_patient_01_4_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>pybind11::detail::process_attribute_default&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</label>
        <link refid="structpybind11_1_1detail_1_1process__attribute__default"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/attr.h" line="424" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/attr.h" bodystart="424" bodyend="433"/>
    <listofallmembers>
      <member refid="structpybind11_1_1detail_1_1process__attribute__default_1a29ec29aafd9201258a2797e2d6d19dcd" prot="public" virt="non-virtual"><scope>pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</scope><name>init</name></member>
      <member refid="structpybind11_1_1detail_1_1process__attribute__default_1a48f73dc7bad3e1e9d2295324e4b3b4ba" prot="public" virt="non-virtual"><scope>pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</scope><name>init</name></member>
      <member refid="structpybind11_1_1detail_1_1process__attribute_3_01keep__alive_3_01_nurse_00_01_patient_01_4_01_4_1a1b73a861be60ff3f27702c49941c6a9e" prot="public" virt="non-virtual"><scope>pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</scope><name>postcall</name></member>
      <member refid="structpybind11_1_1detail_1_1process__attribute_3_01keep__alive_3_01_nurse_00_01_patient_01_4_01_4_1ad37c5771db301ed43d1d68d8476ed0af" prot="public" virt="non-virtual"><scope>pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</scope><name>postcall</name></member>
      <member refid="structpybind11_1_1detail_1_1process__attribute_3_01keep__alive_3_01_nurse_00_01_patient_01_4_01_4_1a070196a560d82a5ac62ad275ca2503aa" prot="public" virt="non-virtual"><scope>pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</scope><name>precall</name></member>
      <member refid="structpybind11_1_1detail_1_1process__attribute_3_01keep__alive_3_01_nurse_00_01_patient_01_4_01_4_1afa04221c71a949e617c45c129e7dc8f5" prot="public" virt="non-virtual"><scope>pybind11::detail::process_attribute&lt; keep_alive&lt; Nurse, Patient &gt; &gt;</scope><name>precall</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
