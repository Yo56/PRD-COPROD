<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classpybind11_1_1class__" kind="class" language="C++" prot="public">
    <compoundname>pybind11::class_</compoundname>
    <basecompoundref refid="classpybind11_1_1detail_1_1generic__type" prot="public" virt="non-virtual">pybind11::detail::generic_type</basecompoundref>
    <includes refid="pybind11_8h" local="no">pybind11.h</includes>
    <innerclass refid="structpybind11_1_1class___1_1is__valid__class__option" prot="private">pybind11::class_::is_valid_class_option</innerclass>
    <templateparamlist>
      <param>
        <type>typename type_</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>options</declname>
        <defname>options</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classpybind11_1_1class___1a8924defaf13e1d518d97943836b2c9ee" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structpybind11_1_1detail_1_1is__holder__type" kindref="compound">detail::is_holder_type</ref>&lt; type_, T &gt;</type>
        <definition>using pybind11::class_&lt; type_, options &gt;::is_holder =  detail::is_holder_type&lt;type_, T&gt;</definition>
        <argsstring></argsstring>
        <name>is_holder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="930" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="930" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpybind11_1_1class___1a0fb86786d958ce41c9f2bacd4a015f5c" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacepybind11_1_1detail_1a5a4e15f62190f6790515a3c95146740d" kindref="member">detail::is_strict_base_of</ref>&lt; type_, T &gt;</type>
        <definition>using pybind11::class_&lt; type_, options &gt;::is_subtype =  detail::is_strict_base_of&lt;type_, T&gt;</definition>
        <argsstring></argsstring>
        <name>is_subtype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="931" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="931" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpybind11_1_1class___1ac1f33d18e57cd8e9d0978326baa9f429" prot="private" static="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacepybind11_1_1detail_1a5a4e15f62190f6790515a3c95146740d" kindref="member">detail::is_strict_base_of</ref>&lt; T, type_ &gt;</type>
        <definition>using pybind11::class_&lt; type_, options &gt;::is_base =  detail::is_strict_base_of&lt;T, type_&gt;</definition>
        <argsstring></argsstring>
        <name>is_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="932" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="932" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classpybind11_1_1class___1a4187e5fbbdeee8234dc765fabee393d8" prot="public" static="no">
        <type>type_</type>
        <definition>using pybind11::class_&lt; type_, options &gt;::type =  type_</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="938" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="938" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpybind11_1_1class___1a982c513c8540238a5d1c1ae2672f0654" prot="public" static="no">
        <type><ref refid="namespacepybind11_1_1detail_1a2145d26420c674c667080404b925bd23" kindref="member">detail::exactly_one_t</ref>&lt; is_subtype, void, options... &gt;</type>
        <definition>using pybind11::class_&lt; type_, options &gt;::type_alias =  detail::exactly_one_t&lt;is_subtype, void, options...&gt;</definition>
        <argsstring></argsstring>
        <name>type_alias</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="939" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="939" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classpybind11_1_1class___1ad8634e039384d1bd616b5006a3fdbc62" prot="public" static="no">
        <type><ref refid="namespacepybind11_1_1detail_1a2145d26420c674c667080404b925bd23" kindref="member">detail::exactly_one_t</ref>&lt; <ref refid="structpybind11_1_1detail_1_1is__holder__type" kindref="compound">is_holder</ref>, std::unique_ptr&lt; <ref refid="classpybind11_1_1class___1a4187e5fbbdeee8234dc765fabee393d8" kindref="member">type</ref> &gt;, options... &gt;</type>
        <definition>using pybind11::class_&lt; type_, options &gt;::holder_type =  detail::exactly_one_t&lt;is_holder, std::unique_ptr&lt;type&gt;, options...&gt;</definition>
        <argsstring></argsstring>
        <name>holder_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="941" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="941" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classpybind11_1_1class___1ad079ff744f01f3933357f77dd6f62237" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static bool</type>
        <definition>constexpr static bool pybind11::class_&lt; type_, options &gt;::has_alias</definition>
        <argsstring></argsstring>
        <name>has_alias</name>
        <initializer>= !std::is_void&lt;<ref refid="classpybind11_1_1class___1a982c513c8540238a5d1c1ae2672f0654" kindref="member">type_alias</ref>&gt;::value</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="940" column="27" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="940" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classpybind11_1_1class___1a4ce7a2966e85cd9a411d366f7303314b" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool pybind11::class_&lt; type_, options &gt;::is_borrowed</definition>
        <argsstring></argsstring>
        <name>is_borrowed</name>
        <bitfield> generic_type (is_borrowed ? generic_type (h</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="946" column="40" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="946" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpybind11_1_1class___1adc97ee07771ea4d0d2de97a5ceefc3af" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool pybind11::class_&lt; type_, options &gt;::borrowed_t</definition>
        <argsstring></argsstring>
        <name>borrowed_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="946" column="53" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="946" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classpybind11_1_1class___1a2f2c4770b8a309879dc9020b83a48338" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool pybind11::class_&lt; type_, options &gt;::int</definition>
        <argsstring></argsstring>
        <name>int</name>
        <initializer>= 0&gt;
    static void add_base(<ref refid="structpybind11_1_1detail_1_1type__record" kindref="compound">detail::type_record</ref> &amp;rec) {
        rec.add_base(typeid(Base), [](void *src) -&gt; void * {
            return static_cast&lt;Base *&gt;(reinterpret_cast&lt;<ref refid="classpybind11_1_1class___1a4187e5fbbdeee8234dc765fabee393d8" kindref="member">type</ref> *&gt;(src));
        });
    }

    template &lt;typename Base</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="986" column="2" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="986" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpybind11_1_1class___1a6d73fa21f0074fe24c266ecf4a00d82f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>pybind11::class_&lt; type_, options &gt;::__attribute__</definition>
        <argsstring>((deprecated(&quot;Use reinterpret_borrow&lt;&quot;&quot;class_&quot;&quot;&gt;() or reinterpret_steal&lt;&quot;&quot;class_&quot;&quot;&gt;()&quot;))) class_(handle h</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(deprecated(&quot;Use <ref refid="classpybind11_1_1object_1ac1ea1a4cbcf197d7c8096037633720d7" kindref="member">reinterpret_borrow</ref>&lt;&quot;&quot;<ref refid="classpybind11_1_1class__" kindref="compound">class_</ref>&quot;&quot;&gt;() or <ref refid="classpybind11_1_1object_1ae1de2ab5a755c10582ac1e46071de5c5" kindref="member">reinterpret_steal</ref>&lt;&quot;&quot;<ref refid="classpybind11_1_1class__" kindref="compound">class_</ref>&quot;&quot;&gt;()&quot;))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="946" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a21605c83614e9e55b46b4c9782020c35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool typename Extra <ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>bool typename Extra class_&amp; pybind11::class_&lt; type_, options &gt;::def</definition>
        <argsstring>(const char *name_, Func &amp;&amp;f, const Extra &amp;... extra)</argsstring>
        <name>def</name>
        <param>
          <type>const char *</type>
          <declname>name_</declname>
        </param>
        <param>
          <type>Func &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="997" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="997" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a76c9a91182068bff54ee076aea79024e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Func</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_static</definition>
        <argsstring>(const char *name_, Func &amp;&amp;f, const Extra &amp;... extra)</argsstring>
        <name>def_static</name>
        <param>
          <type>const char *</type>
          <declname>name_</declname>
        </param>
        <param>
          <type>Func &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1005" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1005" bodyend="1012"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1ac62858c05101d684491877233bb4a66f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespacepybind11_1_1detail_1a60eaefc77d8e336f21b31425d79e0111" kindref="member">detail::op_id</ref></type>
            <declname>id</declname>
            <defname>id</defname>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1_1detail_1aab1046200267d81fe97a73f1c99bca53" kindref="member">detail::op_type</ref></type>
            <declname>ot</declname>
            <defname>ot</defname>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def</definition>
        <argsstring>(const detail::op_&lt; id, ot, L, R &gt; &amp;op, const Extra &amp;... extra)</argsstring>
        <name>def</name>
        <param>
          <type>const <ref refid="structpybind11_1_1detail_1_1op__" kindref="compound">detail::op_</ref>&lt; id, ot, L, R &gt; &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1015" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1015" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a0c93054f4540fecc46003104813cbf67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespacepybind11_1_1detail_1a60eaefc77d8e336f21b31425d79e0111" kindref="member">detail::op_id</ref></type>
            <declname>id</declname>
            <defname>id</defname>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1_1detail_1aab1046200267d81fe97a73f1c99bca53" kindref="member">detail::op_type</ref></type>
            <declname>ot</declname>
            <defname>ot</defname>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_cast</definition>
        <argsstring>(const detail::op_&lt; id, ot, L, R &gt; &amp;op, const Extra &amp;... extra)</argsstring>
        <name>def_cast</name>
        <param>
          <type>const <ref refid="structpybind11_1_1detail_1_1op__" kindref="compound">detail::op_</ref>&lt; id, ot, L, R &gt; &amp;</type>
          <declname>op</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1021" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1021" bodyend="1024"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a336126828427a4ae1b3d618a0efe29bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def</definition>
        <argsstring>(const detail::init&lt; Args... &gt; &amp;init, const Extra &amp;... extra)</argsstring>
        <name>def</name>
        <param>
          <type>const <ref refid="structpybind11_1_1detail_1_1init" kindref="compound">detail::init</ref>&lt; Args... &gt; &amp;</type>
          <declname>init</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1027" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1027" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1aed969b64fbb67f6b4a21fe1d0c49c97f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def</definition>
        <argsstring>(const detail::init_alias&lt; Args... &gt; &amp;init, const Extra &amp;... extra)</argsstring>
        <name>def</name>
        <param>
          <type>const <ref refid="structpybind11_1_1detail_1_1init__alias" kindref="compound">detail::init_alias</ref>&lt; Args... &gt; &amp;</type>
          <declname>init</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1033" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1033" bodyend="1036"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1af745618161ae14091ebf47ff1d476477" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Func</type>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_buffer</definition>
        <argsstring>(Func &amp;&amp;func)</argsstring>
        <name>def_buffer</name>
        <param>
          <type>Func &amp;&amp;</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1038" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1038" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a0c4d50b957d700cf0917b0236c06a9e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Return</type>
          </param>
          <param>
            <type>typename Class</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_buffer</definition>
        <argsstring>(Return(Class::*func)(Args...))</argsstring>
        <name>def_buffer</name>
        <param>
          <type>Return(Class::*)(Args...)</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1051" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1051" bodyend="1053"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1af4da949456a3cd4fe7de8bb2e3582e8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Return</type>
          </param>
          <param>
            <type>typename Class</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_buffer</definition>
        <argsstring>(Return(Class::*func)(Args...) const)</argsstring>
        <name>def_buffer</name>
        <param>
          <type>Return(Class::*)(Args...) const</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1056" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1056" bodyend="1058"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1af5cabac2913a3b8d031338ad4175861d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_readwrite</definition>
        <argsstring>(const char *name, D C::*pm, const Extra &amp;... extra)</argsstring>
        <name>def_readwrite</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>D C::*</type>
          <declname>pm</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1061" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1061" bodyend="1067"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a81ec72e1ae64b1bdfe5f31ea5294aab0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename C</type>
          </param>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_readonly</definition>
        <argsstring>(const char *name, const D C::*pm, const Extra &amp;...extra)</argsstring>
        <name>def_readonly</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const D C::*</type>
          <declname>pm</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1070" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1070" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a5c47d826935b8f40e4e6cd955c28eec5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_readwrite_static</definition>
        <argsstring>(const char *name, D *pm, const Extra &amp;...extra)</argsstring>
        <name>def_readwrite_static</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>D *</type>
          <declname>pm</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1078" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1078" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a5e976b8ca6d8ae71eb072b8790123eeb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_readonly_static</definition>
        <argsstring>(const char *name, const D *pm, const Extra &amp;...extra)</argsstring>
        <name>def_readonly_static</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const D *</type>
          <declname>pm</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1086" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1086" bodyend="1090"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a65438f27ae473dabd5fbb697841b6142" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Getter</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_property_readonly</definition>
        <argsstring>(const char *name, const Getter &amp;fget, const Extra &amp;...extra)</argsstring>
        <name>def_property_readonly</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Getter &amp;</type>
          <declname>fget</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
<para>Uses <ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69caa39bc0596cb125c1605a78fbd287df7f" kindref="member">return_value_policy::reference_internal</ref> by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1094" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1094" bodyend="1097"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a89850146eaa3c80814e950bd37a38729" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_property_readonly</definition>
        <argsstring>(const char *name, const cpp_function &amp;fget, const Extra &amp;...extra)</argsstring>
        <name>def_property_readonly</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref> &amp;</type>
          <declname>fget</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
<para>Uses <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref>&apos;s return_value_policy by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1101" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1101" bodyend="1103"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a6558672f1747a7abc8393c4ff0f830fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Getter</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_property_readonly_static</definition>
        <argsstring>(const char *name, const Getter &amp;fget, const Extra &amp;...extra)</argsstring>
        <name>def_property_readonly_static</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Getter &amp;</type>
          <declname>fget</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
<para>Uses <ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69cab8af13ea9c8fe890c9979a1fa8dbde22" kindref="member">return_value_policy::reference</ref> by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1107" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1107" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a18d97e66e946d6e159fe50c3010cd65d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_property_readonly_static</definition>
        <argsstring>(const char *name, const cpp_function &amp;fget, const Extra &amp;...extra)</argsstring>
        <name>def_property_readonly_static</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref> &amp;</type>
          <declname>fget</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
<para>Uses <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref>&apos;s return_value_policy by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1113" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1113" bodyend="1115"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1aa76f5195d9bd8bc43fe1d3532c14ab46" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Getter</type>
          </param>
          <param>
            <type>typename Setter</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_property</definition>
        <argsstring>(const char *name, const Getter &amp;fget, const Setter &amp;fset, const Extra &amp;...extra)</argsstring>
        <name>def_property</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Getter &amp;</type>
          <declname>fget</declname>
        </param>
        <param>
          <type>const Setter &amp;</type>
          <declname>fset</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
<para>Uses <ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69caa39bc0596cb125c1605a78fbd287df7f" kindref="member">return_value_policy::reference_internal</ref> by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1119" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1119" bodyend="1121"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a177d548ab8cca8efd9547e97801f5cce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Getter</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_property</definition>
        <argsstring>(const char *name, const Getter &amp;fget, const cpp_function &amp;fset, const Extra &amp;...extra)</argsstring>
        <name>def_property</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Getter &amp;</type>
          <declname>fget</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref> &amp;</type>
          <declname>fset</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1123" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1123" bodyend="1126"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a412d807f6a885fd03b2c3560f75fd47a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_property</definition>
        <argsstring>(const char *name, const cpp_function &amp;fget, const cpp_function &amp;fset, const Extra &amp;...extra)</argsstring>
        <name>def_property</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref> &amp;</type>
          <declname>fget</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref> &amp;</type>
          <declname>fset</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
<para>Uses <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref>&apos;s return_value_policy by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1130" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1130" bodyend="1132"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a0041c1304ecbc5bb6355d05f4908ab7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Getter</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_property_static</definition>
        <argsstring>(const char *name, const Getter &amp;fget, const cpp_function &amp;fset, const Extra &amp;...extra)</argsstring>
        <name>def_property_static</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const Getter &amp;</type>
          <declname>fget</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref> &amp;</type>
          <declname>fset</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
<para>Uses <ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69cab8af13ea9c8fe890c9979a1fa8dbde22" kindref="member">return_value_policy::reference</ref> by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1136" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1136" bodyend="1138"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a78115d5138cebc2489419e347a8d291b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename...</type>
            <declname>Extra</declname>
            <defname>Extra</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1class__" kindref="compound">class_</ref> &amp;</type>
        <definition>class_&amp; pybind11::class_&lt; type_, options &gt;::def_property_static</definition>
        <argsstring>(const char *name, const cpp_function &amp;fget, const cpp_function &amp;fset, const Extra &amp;...extra)</argsstring>
        <name>def_property_static</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref> &amp;</type>
          <declname>fget</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref> &amp;</type>
          <declname>fset</declname>
        </param>
        <param>
          <type>const Extra &amp;...</type>
          <declname>extra</declname>
        </param>
        <briefdescription>
<para>Uses <ref refid="classpybind11_1_1cpp__function" kindref="compound">cpp_function</ref>&apos;s return_value_policy by default. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1142" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1142" bodyend="1160"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classpybind11_1_1class___1a3f434cf56db22704666ae9cb9af705af" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void pybind11::class_&lt; type_, options &gt;::init_holder_helper</definition>
        <argsstring>(detail::instance *inst, detail::value_and_holder &amp;v_h, const holder_type *, const std::enable_shared_from_this&lt; T &gt; *)</argsstring>
        <name>init_holder_helper</name>
        <param>
          <type><ref refid="structpybind11_1_1detail_1_1instance" kindref="compound">detail::instance</ref> *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type><ref refid="structpybind11_1_1detail_1_1value__and__holder" kindref="compound">detail::value_and_holder</ref> &amp;</type>
          <declname>v_h</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1class___1ad8634e039384d1bd616b5006a3fdbc62" kindref="member">holder_type</ref> *</type>
        </param>
        <param>
          <type>const std::enable_shared_from_this&lt; T &gt; *</type>
        </param>
        <briefdescription>
<para>Initialize holder object, variant 1: object derives from enable_shared_from_this. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1165" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1165" bodyend="1180"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a0adccf74b49dd257f04c61386201d684" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pybind11::class_&lt; type_, options &gt;::init_holder_from_existing</definition>
        <argsstring>(const detail::value_and_holder &amp;v_h, const holder_type *holder_ptr, std::true_type)</argsstring>
        <name>init_holder_from_existing</name>
        <param>
          <type>const <ref refid="structpybind11_1_1detail_1_1value__and__holder" kindref="compound">detail::value_and_holder</ref> &amp;</type>
          <declname>v_h</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1class___1ad8634e039384d1bd616b5006a3fdbc62" kindref="member">holder_type</ref> *</type>
          <declname>holder_ptr</declname>
        </param>
        <param>
          <type>std::true_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1182" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1182" bodyend="1185"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a66d2872eafa57f4eaa1d4fabe6d3d258" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pybind11::class_&lt; type_, options &gt;::init_holder_from_existing</definition>
        <argsstring>(const detail::value_and_holder &amp;v_h, const holder_type *holder_ptr, std::false_type)</argsstring>
        <name>init_holder_from_existing</name>
        <param>
          <type>const <ref refid="structpybind11_1_1detail_1_1value__and__holder" kindref="compound">detail::value_and_holder</ref> &amp;</type>
          <declname>v_h</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1class___1ad8634e039384d1bd616b5006a3fdbc62" kindref="member">holder_type</ref> *</type>
          <declname>holder_ptr</declname>
        </param>
        <param>
          <type>std::false_type</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1187" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1187" bodyend="1190"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a657d1618ba72297cf0093542c91d3ad8" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pybind11::class_&lt; type_, options &gt;::init_holder_helper</definition>
        <argsstring>(detail::instance *inst, detail::value_and_holder &amp;v_h, const holder_type *holder_ptr, const void *)</argsstring>
        <name>init_holder_helper</name>
        <param>
          <type><ref refid="structpybind11_1_1detail_1_1instance" kindref="compound">detail::instance</ref> *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type><ref refid="structpybind11_1_1detail_1_1value__and__holder" kindref="compound">detail::value_and_holder</ref> &amp;</type>
          <declname>v_h</declname>
        </param>
        <param>
          <type>const <ref refid="classpybind11_1_1class___1ad8634e039384d1bd616b5006a3fdbc62" kindref="member">holder_type</ref> *</type>
          <declname>holder_ptr</declname>
        </param>
        <param>
          <type>const void *</type>
        </param>
        <briefdescription>
<para>Initialize holder object, variant 2: try to construct from existing holder object, if possible. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1193" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1193" bodyend="1202"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a501d6698f046672fec84fcd0dec21c0e" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pybind11::class_&lt; type_, options &gt;::init_holder</definition>
        <argsstring>(detail::instance *inst, const void *holder_ptr)</argsstring>
        <name>init_holder</name>
        <param>
          <type><ref refid="structpybind11_1_1detail_1_1instance" kindref="compound">detail::instance</ref> *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>holder_ptr</declname>
        </param>
        <briefdescription>
<para>Initialize holder object of an instance, possibly given a pointer to an existing holder. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1205" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1205" bodyend="1208"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1a4f174ae3ee0004f82457c0e642a4afbb" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void pybind11::class_&lt; type_, options &gt;::dealloc</definition>
        <argsstring>(const detail::value_and_holder &amp;v_h)</argsstring>
        <name>dealloc</name>
        <param>
          <type>const <ref refid="structpybind11_1_1detail_1_1value__and__holder" kindref="compound">detail::value_and_holder</ref> &amp;</type>
          <declname>v_h</declname>
        </param>
        <briefdescription>
<para>Deallocates an instance; via holder, if constructed; otherwise via operator delete. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1211" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1211" bodyend="1216"/>
      </memberdef>
      <memberdef kind="function" id="classpybind11_1_1class___1aaf947fc24310e040517370b426508768" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structpybind11_1_1detail_1_1function__record" kindref="compound">detail::function_record</ref> *</type>
        <definition>static detail::function_record* pybind11::class_&lt; type_, options &gt;::get_function_record</definition>
        <argsstring>(handle h)</argsstring>
        <name>get_function_record</name>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="1218" column="36" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="1218" bodyend="1222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>pybind11::detail::object_api&lt; handle &gt;</label>
        <link refid="classpybind11_1_1detail_1_1object__api"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>pybind11::detail::generic_type</label>
        <link refid="classpybind11_1_1detail_1_1generic__type"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>pybind11::detail::pyobject_tag</label>
        <link refid="classpybind11_1_1detail_1_1pyobject__tag"/>
      </node>
      <node id="3">
        <label>pybind11::object</label>
        <link refid="classpybind11_1_1object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>pybind11::class_&lt; type_, options &gt;</label>
        <link refid="classpybind11_1_1class__"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>pybind11::handle</label>
        <link refid="classpybind11_1_1handle"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>pybind11::detail::object_api&lt; handle &gt;</label>
        <link refid="classpybind11_1_1detail_1_1object__api"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>pybind11::detail::generic_type</label>
        <link refid="classpybind11_1_1detail_1_1generic__type"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>pybind11::detail::pyobject_tag</label>
        <link refid="classpybind11_1_1detail_1_1pyobject__tag"/>
      </node>
      <node id="3">
        <label>pybind11::object</label>
        <link refid="classpybind11_1_1object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>pybind11::class_&lt; type_, options &gt;</label>
        <link refid="classpybind11_1_1class__"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>pybind11::handle</label>
        <link refid="classpybind11_1_1handle"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" line="929" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pybind11.h" bodystart="929" bodyend="1223"/>
    <listofallmembers>
      <member refid="classpybind11_1_1class___1a6d73fa21f0074fe24c266ecf4a00d82f" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>__attribute__</name></member>
      <member refid="classpybind11_1_1detail_1_1generic__type_1a05a26a26b3a2eca9f2b89dad25bb99cf" prot="public" virt="non-virtual" ambiguityscope="pybind11::detail::generic_type::"><scope>pybind11::class_</scope><name>__attribute__</name></member>
      <member refid="classpybind11_1_1object_1af0de297f50a8c4db0b6712f4b990f8aa" prot="public" virt="non-virtual" ambiguityscope="pybind11::object::"><scope>pybind11::class_</scope><name>__attribute__</name></member>
      <member refid="classpybind11_1_1handle_1aae1e3eb62dbe66c97c161da1dc408abd" prot="public" virt="non-virtual" ambiguityscope="pybind11::handle::"><scope>pybind11::class_</scope><name>__attribute__</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1a9e40315e3b89ae491c4ff308048550ba" prot="public" virt="non-virtual" ambiguityscope="object_api&lt; handle &gt;::"><scope>pybind11::class_</scope><name>__attribute__</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1a1515b5309996f3109e3e73ea6c1ab8df" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>attr</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1a1ed2f42e544637c80b31c05c88cb916e" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>attr</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1a186bda3e95a07f59f9449ce0d050ae5e" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>begin</name></member>
      <member refid="classpybind11_1_1class___1adc97ee07771ea4d0d2de97a5ceefc3af" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>borrowed_t</name></member>
      <member refid="classpybind11_1_1object_1aece18ff0957cbd093908369dd7800519" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>cast</name></member>
      <member refid="classpybind11_1_1object_1a1d5a34290705e5124f352346563bf83d" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>cast</name></member>
      <member refid="classpybind11_1_1object_1aece18ff0957cbd093908369dd7800519" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>cast</name></member>
      <member refid="classpybind11_1_1object_1a1d5a34290705e5124f352346563bf83d" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>cast</name></member>
      <member refid="classpybind11_1_1object_1a764785e72f3f451c198c9d09c9ff0fe2" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>cast</name></member>
      <member refid="classpybind11_1_1object_1a8bc02531431d381c27343568a60d641e" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>cast</name></member>
      <member refid="classpybind11_1_1handle_1a010389458d06cdacb08f1e0e62f66dfc" prot="public" virt="non-virtual" ambiguityscope="pybind11::handle::"><scope>pybind11::class_</scope><name>cast</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1a18a4dd49680420a502a89d6d75e07748" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>contains</name></member>
      <member refid="classpybind11_1_1class___1a4f174ae3ee0004f82457c0e642a4afbb" prot="private" virt="non-virtual"><scope>pybind11::class_</scope><name>dealloc</name></member>
      <member refid="classpybind11_1_1handle_1aa5bf7731654070d8a6834183a3c63132" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>dec_ref</name></member>
      <member refid="classpybind11_1_1class___1a21605c83614e9e55b46b4c9782020c35" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def</name></member>
      <member refid="classpybind11_1_1class___1ac62858c05101d684491877233bb4a66f" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def</name></member>
      <member refid="classpybind11_1_1class___1a336126828427a4ae1b3d618a0efe29bf" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def</name></member>
      <member refid="classpybind11_1_1class___1aed969b64fbb67f6b4a21fe1d0c49c97f" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def</name></member>
      <member refid="classpybind11_1_1class___1af745618161ae14091ebf47ff1d476477" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_buffer</name></member>
      <member refid="classpybind11_1_1class___1a0c4d50b957d700cf0917b0236c06a9e6" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_buffer</name></member>
      <member refid="classpybind11_1_1class___1af4da949456a3cd4fe7de8bb2e3582e8f" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_buffer</name></member>
      <member refid="classpybind11_1_1class___1a0c93054f4540fecc46003104813cbf67" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_cast</name></member>
      <member refid="classpybind11_1_1class___1aa76f5195d9bd8bc43fe1d3532c14ab46" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_property</name></member>
      <member refid="classpybind11_1_1class___1a177d548ab8cca8efd9547e97801f5cce" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_property</name></member>
      <member refid="classpybind11_1_1class___1a412d807f6a885fd03b2c3560f75fd47a" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_property</name></member>
      <member refid="classpybind11_1_1class___1a65438f27ae473dabd5fbb697841b6142" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_property_readonly</name></member>
      <member refid="classpybind11_1_1class___1a89850146eaa3c80814e950bd37a38729" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_property_readonly</name></member>
      <member refid="classpybind11_1_1class___1a6558672f1747a7abc8393c4ff0f830fe" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_property_readonly_static</name></member>
      <member refid="classpybind11_1_1class___1a18d97e66e946d6e159fe50c3010cd65d" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_property_readonly_static</name></member>
      <member refid="classpybind11_1_1class___1a0041c1304ecbc5bb6355d05f4908ab7e" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_property_static</name></member>
      <member refid="classpybind11_1_1class___1a78115d5138cebc2489419e347a8d291b" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_property_static</name></member>
      <member refid="classpybind11_1_1class___1a81ec72e1ae64b1bdfe5f31ea5294aab0" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_readonly</name></member>
      <member refid="classpybind11_1_1class___1a5e976b8ca6d8ae71eb072b8790123eeb" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_readonly_static</name></member>
      <member refid="classpybind11_1_1class___1af5cabac2913a3b8d031338ad4175861d" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_readwrite</name></member>
      <member refid="classpybind11_1_1class___1a5c47d826935b8f40e4e6cd955c28eec5" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_readwrite_static</name></member>
      <member refid="classpybind11_1_1class___1a76c9a91182068bff54ee076aea79024e" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>def_static</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1a011483f62a9bd3c0fb60bfc7749fc28f" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>end</name></member>
      <member refid="classpybind11_1_1class___1aaf947fc24310e040517370b426508768" prot="private" virt="non-virtual"><scope>pybind11::class_</scope><name>get_function_record</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1ab2bf58fa4e77779d723142a1a51a9033" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>get_type</name></member>
      <member refid="classpybind11_1_1handle_1a4ba87579a3fba33e8e35e7a7884fe998" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>handle</name></member>
      <member refid="classpybind11_1_1handle_1aa8016278dbe2e4534cfa09f688ea17ee" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>handle</name></member>
      <member refid="classpybind11_1_1class___1ad079ff744f01f3933357f77dd6f62237" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>has_alias</name></member>
      <member refid="classpybind11_1_1class___1ad8634e039384d1bd616b5006a3fdbc62" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>holder_type</name></member>
      <member refid="classpybind11_1_1handle_1acc6d5c07da91466b4ebe6e5f8f7a1b58" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>inc_ref</name></member>
      <member refid="classpybind11_1_1class___1a501d6698f046672fec84fcd0dec21c0e" prot="private" virt="non-virtual"><scope>pybind11::class_</scope><name>init_holder</name></member>
      <member refid="classpybind11_1_1class___1a0adccf74b49dd257f04c61386201d684" prot="private" virt="non-virtual"><scope>pybind11::class_</scope><name>init_holder_from_existing</name></member>
      <member refid="classpybind11_1_1class___1a66d2872eafa57f4eaa1d4fabe6d3d258" prot="private" virt="non-virtual"><scope>pybind11::class_</scope><name>init_holder_from_existing</name></member>
      <member refid="classpybind11_1_1class___1a3f434cf56db22704666ae9cb9af705af" prot="private" virt="non-virtual"><scope>pybind11::class_</scope><name>init_holder_helper</name></member>
      <member refid="classpybind11_1_1class___1a657d1618ba72297cf0093542c91d3ad8" prot="private" virt="non-virtual"><scope>pybind11::class_</scope><name>init_holder_helper</name></member>
      <member refid="classpybind11_1_1class___1a2f2c4770b8a309879dc9020b83a48338" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>int</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1a5107835e7630a10868373383c003100b" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>is</name></member>
      <member refid="classpybind11_1_1class___1ac1f33d18e57cd8e9d0978326baa9f429" prot="private" virt="non-virtual"><scope>pybind11::class_</scope><name>is_base</name></member>
      <member refid="classpybind11_1_1class___1a4ce7a2966e85cd9a411d366f7303314b" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>is_borrowed</name></member>
      <member refid="classpybind11_1_1class___1a8924defaf13e1d518d97943836b2c9ee" prot="private" virt="non-virtual"><scope>pybind11::class_</scope><name>is_holder</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1a1e0426c7b1cc45d3b56574aaaa38ff06" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>is_none</name></member>
      <member refid="classpybind11_1_1class___1a0fb86786d958ce41c9f2bacd4a015f5c" prot="private" virt="non-virtual"><scope>pybind11::class_</scope><name>is_subtype</name></member>
      <member refid="classpybind11_1_1object_1a05110f45918e73ad56f66cc713fd1d21" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>object</name></member>
      <member refid="classpybind11_1_1object_1acd1e392727b7870b82404c6077fd7da3" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>object</name></member>
      <member refid="classpybind11_1_1object_1a8b3e38884a2467c88b61ad8b0f7b0469" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>object</name></member>
      <member refid="classpybind11_1_1object_1af43aa8511d39ad9fa3aae093962ca471" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>object</name></member>
      <member refid="classpybind11_1_1object_1a03cf406a7bee2cde9264d89f5c321e95" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>object</name></member>
      <member refid="classpybind11_1_1handle_1ac487a4afc7fb27d01ce4216813c7a91c" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>operator bool</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1ad5605908755b3a6ad07bbfa63f398ab8" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>operator()</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1a5babe5939b794c3408711be7fde14ee0" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>operator*</name></member>
      <member refid="classpybind11_1_1object_1aa02e0b7ba3182ecea17911e5fdc631dd" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>operator=</name></member>
      <member refid="classpybind11_1_1object_1a1f45b12a97cf4b93915fd9145747cd9b" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>operator=</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1ae10abab736d193f170eaa6cfbdab6d01" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>operator[]</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1a579d2eeebff07ddab98814ccbfbe2728" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>operator[]</name></member>
      <member refid="classpybind11_1_1handle_1a6f7e2e6beecb8c59c5192ea9bae7eaa5" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>ptr</name></member>
      <member refid="classpybind11_1_1handle_1ae837f0f5edde0818cd37e92f5664ebf2" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>ptr</name></member>
      <member refid="classpybind11_1_1detail_1_1object__api_1aa1e808c7d0773561b3c552cf93d13368" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>ref_count</name></member>
      <member refid="classpybind11_1_1object_1a6db3ef1f8b39f2038ecf578a7f07b59d" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>release</name></member>
      <member refid="classpybind11_1_1class___1a4187e5fbbdeee8234dc765fabee393d8" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>type</name></member>
      <member refid="classpybind11_1_1class___1a982c513c8540238a5d1c1ae2672f0654" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>type_alias</name></member>
      <member refid="classpybind11_1_1object_1a18a870a490c34d5a7775e90dc799d2f4" prot="public" virt="non-virtual"><scope>pybind11::class_</scope><name>~object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
