<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</compoundname>
    <includes refid="eigen_8h" local="no">eigen.h</includes>
    <templateparamlist>
      <param>
        <type>typename Type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a46f9a6901cbe138bd77b2874d91ff88e" prot="public" static="no">
        <type>Type::Scalar</type>
        <definition>typedef Type::Scalar pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::Scalar</definition>
        <argsstring></argsstring>
        <name>Scalar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="545" column="35" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="545" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a05cec2d27d1f31c6d3aad950c68c2863" prot="public" static="no">
        <type><ref refid="namespacepybind11_1_1detail_1a6c207068b00c8f12378fe4e8f02eaa73" kindref="member">remove_reference_t</ref>&lt; decltype(*std::declval&lt; Type &gt;).outerIndexPtr())&gt;</type>
        <definition>typedef remove_reference_t&lt;decltype(*std::declval&lt;Type&gt;).outerIndexPtr())&gt; pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::StorageIndex</definition>
        <argsstring></argsstring>
        <name>StorageIndex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="546" column="34" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a574f098b81284e4a1e3357ed5a9439c2" prot="public" static="no">
        <type>Type::Index</type>
        <definition>typedef Type::Index pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::Index</definition>
        <argsstring></argsstring>
        <name>Index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="547" column="34" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="547" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a515ad12f94c9a2fb3bf74deb4c01c1f4" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T_</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacepybind11_1_1detail_1a3e4f52c827f0391c3ca8166590c559c9" kindref="member">pybind11::detail::movable_cast_op_type</ref>&lt; T_ &gt;</type>
        <definition>using pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::cast_op_type =  pybind11::detail::movable_cast_op_type&lt;T_&gt;</definition>
        <argsstring></argsstring>
        <name>cast_op_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="600" column="581" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="600" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a8f46ffc552cc498be7c9a7a694ebe788" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::rowMajor</definition>
        <argsstring></argsstring>
        <name>rowMajor</name>
        <initializer>= Type::IsRowMajor</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="548" column="27" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="548" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a0b98a23e15cfb8d9a43e6f8354c91603" prot="protected" static="no" mutable="no">
        <type>Type</type>
        <definition>Type pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="600" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="600" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a4e8095750292a3e7c5cc2ba121de81c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::load</definition>
        <argsstring>(handle src, bool)</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="550" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="550" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a4f06dfa97aa1c9c29347bc261abe9043" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::operator Type *</definition>
        <argsstring>()</argsstring>
        <name>operator Type *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="600" column="451" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="600" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a2fad36ae571d24af7882bbeb6c9d3998" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::operator Type &amp;</definition>
        <argsstring>()</argsstring>
        <name>operator Type &amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="600" column="487" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="600" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a324948ceff6a63b961ea15d71d6f9c03" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type></type>
        <definition>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::operator Type &amp;&amp;</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>operator Type &amp;&amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="600" column="522" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="600" bodyend="600"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1afbeeed2fbd91dcf8c9674232b5ad6bb6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::cast</definition>
        <argsstring>(const Type &amp;src, return_value_policy, handle)</argsstring>
        <name>cast</name>
        <param>
          <type>const Type &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="583" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="583" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a84da859a5e63582b1d8fd1cbbfe6aee0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>::<ref refid="classpybind11_1_1detail_1_1descr" kindref="compound">pybind11::detail::descr</ref></type>
        <definition>::pybind11::detail::descr pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="600" column="74" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="600" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1acd814b4da8f26dab25d036f9873e6dab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_</type>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1_1detail_1a492fb1fcf079a5bc67248b852bc73619" kindref="member">enable_if_t</ref>&lt; std::is_same&lt; Type, <ref refid="namespacepybind11_1_1detail_1ada18e66a8c736bd49e83f6dad6b39af5" kindref="member">remove_cv_t</ref>&lt; T_ &gt;&gt;::<ref refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a0b98a23e15cfb8d9a43e6f8354c91603" kindref="member">value</ref>, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;::cast</definition>
        <argsstring>(T_ *src, return_value_policy policy, handle parent)</argsstring>
        <name>cast</name>
        <param>
          <type>T_ *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="600" column="223" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="600" bodyend="600"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" line="544" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/eigen.h" bodystart="544" bodyend="601"/>
    <listofallmembers>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1afbeeed2fbd91dcf8c9674232b5ad6bb6" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>cast</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1acd814b4da8f26dab25d036f9873e6dab" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>cast</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a515ad12f94c9a2fb3bf74deb4c01c1f4" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>cast_op_type</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a574f098b81284e4a1e3357ed5a9439c2" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>Index</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a4e8095750292a3e7c5cc2ba121de81c2" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>load</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a84da859a5e63582b1d8fd1cbbfe6aee0" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>name</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a2fad36ae571d24af7882bbeb6c9d3998" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>operator Type &amp;</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a324948ceff6a63b961ea15d71d6f9c03" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>operator Type &amp;&amp;</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a4f06dfa97aa1c9c29347bc261abe9043" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>operator Type *</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a8f46ffc552cc498be7c9a7a694ebe788" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>rowMajor</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a46f9a6901cbe138bd77b2874d91ff88e" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>Scalar</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a05cec2d27d1f31c6d3aad950c68c2863" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>StorageIndex</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01_type_00_01enable__if__t_3_01is__eigen__sparse_3_01_type_01_4_1_1value_01_4_01_4_1a0b98a23e15cfb8d9a43e6f8354c91603" prot="protected" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; Type, enable_if_t&lt; is_eigen_sparse&lt; Type &gt;::value &gt; &gt;</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
