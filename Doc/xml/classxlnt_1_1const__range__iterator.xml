<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classxlnt_1_1const__range__iterator" kind="class" language="C++" prot="public">
    <compoundname>xlnt::const_range_iterator</compoundname>
    <includes refid="range__iterator_8hpp" local="no">range_iterator.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classxlnt_1_1const__range__iterator_1a21c70245f3e364fdd6daec04225c82c1" prot="public" static="no">
        <type>std::bidirectional_iterator_tag</type>
        <definition>using xlnt::const_range_iterator::iterator_category =  std::bidirectional_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
<para>this iterator meets the interface requirements of bidirection_iterator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="168" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1const__range__iterator_1a073f59d5f67bde175eeee4ad9937155b" prot="public" static="no">
        <type>const <ref refid="classxlnt_1_1cell__vector" kindref="compound">cell_vector</ref></type>
        <definition>using xlnt::const_range_iterator::value_type =  const cell_vector</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="169" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1const__range__iterator_1a8bb50af166888307b573d42dbbc1426f" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using xlnt::const_range_iterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="170" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1const__range__iterator_1a4dee0e7f81e4c022646ed42aff406ce7" prot="public" static="no">
        <type>const <ref refid="classxlnt_1_1cell__vector" kindref="compound">cell_vector</ref> *</type>
        <definition>using xlnt::const_range_iterator::pointer =  const cell_vector *</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="171" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1const__range__iterator_1a08979a4e677d11e2871e9e7d268de8c7" prot="public" static="no">
        <type>const <ref refid="classxlnt_1_1cell__vector" kindref="compound">cell_vector</ref></type>
        <definition>using xlnt::const_range_iterator::reference =  const cell_vector</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="172" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxlnt_1_1const__range__iterator_1ab1f5b95a132562c7735bbb840b13881d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::const_range_iterator::skip_null_</definition>
        <argsstring></argsstring>
        <name>skip_null_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>If true, empty rows and cells will be skipped when iterating with this iterator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="250" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1const__range__iterator_1a2101a10321658ad11d04389521830767" prot="private" static="no" mutable="no">
        <type>major_order</type>
        <definition>major_order xlnt::const_range_iterator::order_</definition>
        <argsstring></argsstring>
        <name>order_</name>
        <initializer>= <ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">major_order::column</ref></initializer>
        <briefdescription>
<para>Determines whether iteration should move through rows or columns first </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="255" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1const__range__iterator_1a3be2cdc84187685b843373d0909c0aee" prot="private" static="no" mutable="no">
        <type><ref refid="structxlnt_1_1detail_1_1worksheet__impl" kindref="compound">detail::worksheet_impl</ref> *</type>
        <definition>detail::worksheet_impl* xlnt::const_range_iterator::ws_</definition>
        <argsstring></argsstring>
        <name>ws_</name>
        <briefdescription>
<para>The implementation of the worksheet this iterator points to </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="260" column="28" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1const__range__iterator_1a92e32d7d4dccd875b49f02dab9544bff" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref></type>
        <definition>cell_reference xlnt::const_range_iterator::cursor_</definition>
        <argsstring></argsstring>
        <name>cursor_</name>
        <briefdescription>
<para>The first cell in the current row or column this iterator points to </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="265" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1const__range__iterator_1aa3875b5e20d0639eee536eab25667c9a" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref></type>
        <definition>range_reference xlnt::const_range_iterator::bounds_</definition>
        <argsstring></argsstring>
        <name>bounds_</name>
        <briefdescription>
<para>The range this iterator starts and ends in </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="270" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1aac590cd5bbb9f9951745ab97aeab6153" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::const_range_iterator::const_range_iterator</definition>
        <argsstring>()=default</argsstring>
        <name>const_range_iterator</name>
        <briefdescription>
<para>Default constructs a range iterator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="177" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1afe3b117813996257b0b21f9aaf052c77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::const_range_iterator::const_range_iterator</definition>
        <argsstring>(const worksheet &amp;ws, const cell_reference &amp;cursor, const range_reference &amp;bounds, major_order order, bool skip_null)</argsstring>
        <name>const_range_iterator</name>
        <param>
          <type>const <ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref> &amp;</type>
          <declname>ws</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> &amp;</type>
          <declname>cursor</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>bounds</declname>
        </param>
        <param>
          <type>major_order</type>
          <declname>order</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skip_null</declname>
        </param>
        <briefdescription>
<para>Constructs a range iterator on a worksheet, cell pointing to the current row or column, range bounds, an order, and whether or not to skip null column/rows. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="183" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_iterator.cpp" bodystart="156" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1abc22bc229101417d87b7eaed07658cbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::const_range_iterator::const_range_iterator</definition>
        <argsstring>(const const_range_iterator &amp;)=default</argsstring>
        <name>const_range_iterator</name>
        <param>
          <type>const <ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Default copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="189" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1a674f5616707f3e6161aaa1e9fe55a21e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref> &amp;</type>
        <definition>const_range_iterator&amp; xlnt::const_range_iterator::operator=</definition>
        <argsstring>(const const_range_iterator &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Default assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="194" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1a06300a3585a0e86ef0b33b3f602aacdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::const_range_iterator::const_range_iterator</definition>
        <argsstring>(const_range_iterator &amp;&amp;)=default</argsstring>
        <name>const_range_iterator</name>
        <param>
          <type><ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Default move constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="199" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1afe363ef3c5c792d2ee900e08df3ee308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref> &amp;</type>
        <definition>const_range_iterator&amp; xlnt::const_range_iterator::operator=</definition>
        <argsstring>(const_range_iterator &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Default move assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="204" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1ac5b8adf5b8b2faf56090df91cd50381d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::const_range_iterator::~const_range_iterator</definition>
        <argsstring>()=default</argsstring>
        <name>~const_range_iterator</name>
        <briefdescription>
<para>Default destructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="209" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1ab9cab4ed95a6cd7514379cccd6ecd82f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1const__range__iterator_1a08979a4e677d11e2871e9e7d268de8c7" kindref="member">reference</ref></type>
        <definition>const const_range_iterator::reference xlnt::const_range_iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Dereferennce the iterator to return the current column/row. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="214" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_iterator.cpp" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1a1c0419e93c53e27453c96a288432752d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::const_range_iterator::operator==</definition>
        <argsstring>(const const_range_iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this iterator is equivalent to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="219" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_iterator.cpp" bodystart="170" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1a11496a9fd2f4cf72fc22d47fb2e5d917" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::const_range_iterator::operator!=</definition>
        <argsstring>(const const_range_iterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this iterator is not equivalent to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="224" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_iterator.cpp" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1af704282bab7741586d87fa542daad77b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref> &amp;</type>
        <definition>const_range_iterator &amp; xlnt::const_range_iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
<para>Pre-decrement the iterator to point to the next row/column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="229" column="26" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_iterator.cpp" bodystart="183" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1a2d304e5fefc0ddc37f5686030b5d6816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref></type>
        <definition>const_range_iterator xlnt::const_range_iterator::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Post-decrement the iterator to point to the next row/column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="234" column="26" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_iterator.cpp" bodystart="219" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1a357be8d8bbe6fc7681870ccf156d4917" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref> &amp;</type>
        <definition>const_range_iterator &amp; xlnt::const_range_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>Pre-increment the iterator to point to the next row/column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="239" column="26" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_iterator.cpp" bodystart="227" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__range__iterator_1a81eca5ba218a3acbe659bfe1cef4979d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__range__iterator" kindref="compound">const_range_iterator</ref></type>
        <definition>const_range_iterator xlnt::const_range_iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Post-increment the iterator to point to the next row/column. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="244" column="26" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/range_iterator.cpp" bodystart="263" bodyend="269"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A const version of <ref refid="classxlnt_1_1range__iterator" kindref="compound">range_iterator</ref> which does not allow modification to the dereferenced <ref refid="classxlnt_1_1cell__vector" kindref="compound">cell_vector</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" line="162" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/range_iterator.hpp" bodystart="163" bodyend="271"/>
    <listofallmembers>
      <member refid="classxlnt_1_1const__range__iterator_1aa3875b5e20d0639eee536eab25667c9a" prot="private" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>bounds_</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1aac590cd5bbb9f9951745ab97aeab6153" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>const_range_iterator</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1afe3b117813996257b0b21f9aaf052c77" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>const_range_iterator</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1abc22bc229101417d87b7eaed07658cbf" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>const_range_iterator</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a06300a3585a0e86ef0b33b3f602aacdc" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>const_range_iterator</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a92e32d7d4dccd875b49f02dab9544bff" prot="private" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>cursor_</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a8bb50af166888307b573d42dbbc1426f" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>difference_type</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a21c70245f3e364fdd6daec04225c82c1" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>iterator_category</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a11496a9fd2f4cf72fc22d47fb2e5d917" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>operator!=</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1ab9cab4ed95a6cd7514379cccd6ecd82f" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>operator*</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a357be8d8bbe6fc7681870ccf156d4917" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>operator++</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a81eca5ba218a3acbe659bfe1cef4979d" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>operator++</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1af704282bab7741586d87fa542daad77b" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>operator--</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a2d304e5fefc0ddc37f5686030b5d6816" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>operator--</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a674f5616707f3e6161aaa1e9fe55a21e" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>operator=</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1afe363ef3c5c792d2ee900e08df3ee308" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>operator=</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a1c0419e93c53e27453c96a288432752d" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>operator==</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a2101a10321658ad11d04389521830767" prot="private" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>order_</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a4dee0e7f81e4c022646ed42aff406ce7" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>pointer</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a08979a4e677d11e2871e9e7d268de8c7" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>reference</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1ab1f5b95a132562c7735bbb840b13881d" prot="private" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>skip_null_</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a073f59d5f67bde175eeee4ad9937155b" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>value_type</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1a3be2cdc84187685b843373d0909c0aee" prot="private" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>ws_</name></member>
      <member refid="classxlnt_1_1const__range__iterator_1ac5b8adf5b8b2faf56090df91cd50381d" prot="public" virt="non-virtual"><scope>xlnt::const_range_iterator</scope><name>~const_range_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
