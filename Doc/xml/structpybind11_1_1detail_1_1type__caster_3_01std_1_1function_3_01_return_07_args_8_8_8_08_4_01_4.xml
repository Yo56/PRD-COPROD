<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;</compoundname>
    <includes refid="functional_8h" local="no">functional.h</includes>
    <templateparamlist>
      <param>
        <type>typename Return</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>Args</declname>
        <defname>Args</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1aae0ac4c47acc1fd77bc8f23283fd8dd9" prot="public" static="no">
        <type>std::function&lt; Return(Args...)&gt;</type>
        <definition>using pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;::type =  std::function&lt;Return(Args...)&gt;</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" line="20" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1aadeba6f34170fe2957ceadd30a10cbd2" prot="public" static="no">
        <type><ref refid="namespacepybind11_1_1detail_1aef2d4be22c22106ff1a07aeb9394fb60" kindref="member">conditional_t</ref>&lt; std::is_same&lt; Return, void &gt;::<ref refid="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1a7931983d4e0e1c93522cf100c0841a08" kindref="member">value</ref>, <ref refid="structpybind11_1_1detail_1_1void__type" kindref="compound">void_type</ref>, Return &gt;</type>
        <definition>using pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;::retval_type =  conditional_t&lt;std::is_same&lt;Return, void&gt;::value, void_type, Return&gt;</definition>
        <argsstring></argsstring>
        <name>retval_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" line="21" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1a1a82074a4a96a322c06ee8abf3aa164d" prot="public" static="no">
        <type>Return(*)(Args...)</type>
        <definition>using pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;::function_type =  Return (*) (Args...)</definition>
        <argsstring></argsstring>
        <name>function_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" line="22" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1a7931983d4e0e1c93522cf100c0841a08" prot="protected" static="no" mutable="no">
        <type><ref refid="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1aae0ac4c47acc1fd77bc8f23283fd8dd9" kindref="member">type</ref></type>
        <definition>type pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" line="81" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1a77cec886e10e95a65bcb4b4a16d155ad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;::load</definition>
        <argsstring>(handle src, bool convert)</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>convert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" line="25" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" bodystart="25" bodyend="64"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1a6e982e3040df087969d5d675b06419d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Func</type>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;::cast</definition>
        <argsstring>(Func &amp;&amp;f_, return_value_policy policy, handle)</argsstring>
        <name>cast</name>
        <param>
          <type>Func &amp;&amp;</type>
          <declname>f_</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" line="67" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" bodystart="67" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1a714f889817a931e02335acea50b039a9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>::<ref refid="classpybind11_1_1detail_1_1descr" kindref="compound">pybind11::detail::descr</ref></type>
        <definition>::pybind11::detail::descr pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" line="81" column="74" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" line="19" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/functional.h" bodystart="19" bodyend="82"/>
    <listofallmembers>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1a6e982e3040df087969d5d675b06419d5" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;</scope><name>cast</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1a1a82074a4a96a322c06ee8abf3aa164d" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;</scope><name>function_type</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1a77cec886e10e95a65bcb4b4a16d155ad" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;</scope><name>load</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1a714f889817a931e02335acea50b039a9" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;</scope><name>name</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1aadeba6f34170fe2957ceadd30a10cbd2" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;</scope><name>retval_type</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1aae0ac4c47acc1fd77bc8f23283fd8dd9" prot="public" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;</scope><name>type</name></member>
      <member refid="structpybind11_1_1detail_1_1type__caster_3_01std_1_1function_3_01_return_07_args_8_8_8_08_4_01_4_1a7931983d4e0e1c93522cf100c0841a08" prot="protected" virt="non-virtual"><scope>pybind11::detail::type_caster&lt; std::function&lt; Return(Args...)&gt; &gt;</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
