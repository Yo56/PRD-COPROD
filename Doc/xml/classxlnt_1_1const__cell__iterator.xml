<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classxlnt_1_1const__cell__iterator" kind="class" language="C++" prot="public">
    <compoundname>xlnt::const_cell_iterator</compoundname>
    <includes refid="cell__iterator_8hpp" local="no">cell_iterator.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classxlnt_1_1const__cell__iterator_1aebed3225748e77d3ea1dbee50af1f2e0" prot="public" static="no">
        <type>std::bidirectional_iterator_tag</type>
        <definition>using xlnt::const_cell_iterator::iterator_category =  std::bidirectional_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
<para>iterator tags required for use with standard algorithms and adapters </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="185" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1const__cell__iterator_1a6359018f6bf466f5040f31c103c3ac38" prot="public" static="no">
        <type>const <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        <definition>using xlnt::const_cell_iterator::value_type =  const cell</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="186" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1const__cell__iterator_1adf46b03698d32c5635621a49ca923eeb" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using xlnt::const_cell_iterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="187" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1const__cell__iterator_1aafb76cb7f099fdfe31ce555178972f34" prot="public" static="no">
        <type>const <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref> *</type>
        <definition>using xlnt::const_cell_iterator::pointer =  const cell *</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="188" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1const__cell__iterator_1a658244030193fa48a9f9ac1c49659e97" prot="public" static="no">
        <type>const <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        <definition>using xlnt::const_cell_iterator::reference =  const cell</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="189" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="189" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxlnt_1_1const__cell__iterator_1a1d099e4ff0dad9581e78675870750b0b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::const_cell_iterator::skip_null_</definition>
        <argsstring></argsstring>
        <name>skip_null_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>If true, cells that don&apos;t exist in the worksheet will be skipped during iteration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="270" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1const__cell__iterator_1adfb6b94590959bb3baa609c23ffa65ca" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::const_cell_iterator::wrap_</definition>
        <argsstring></argsstring>
        <name>wrap_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>If true, when on the last column, the cursor will continue to the next row (and vice versa when iterating in column-major order) until reaching the bottom right corner of the range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="277" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1const__cell__iterator_1a217c34ce431102a199de4d41ca35794a" prot="private" static="no" mutable="no">
        <type>major_order</type>
        <definition>major_order xlnt::const_cell_iterator::order_</definition>
        <argsstring></argsstring>
        <name>order_</name>
        <initializer>= <ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">major_order::column</ref></initializer>
        <briefdescription>
<para>The order this iterator will move, by column or by row. Note that this has the opposite meaning as in a <ref refid="classxlnt_1_1range__iterator" kindref="compound">range_iterator</ref> because after getting a row-major <ref refid="classxlnt_1_1range__iterator" kindref="compound">range_iterator</ref>, the row-major <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> will iterate over a column and vice versa. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="285" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1const__cell__iterator_1af5247ed9c6c6dbd96892cb230352de30" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::const_cell_iterator::ws_</definition>
        <argsstring></argsstring>
        <name>ws_</name>
        <briefdescription>
<para>The worksheet this iterator will return cells from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="290" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1const__cell__iterator_1a372e3febbe95c1819e13c924e1070071" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref></type>
        <definition>cell_reference xlnt::const_cell_iterator::cursor_</definition>
        <argsstring></argsstring>
        <name>cursor_</name>
        <briefdescription>
<para>The current cell the iterator points to </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="295" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1const__cell__iterator_1a343870cb9e1048924917eedaacae087d" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref></type>
        <definition>range_reference xlnt::const_cell_iterator::bounds_</definition>
        <argsstring></argsstring>
        <name>bounds_</name>
        <briefdescription>
<para>The range of cells this iterator is restricted to </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="300" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="300" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1ab02edd955b1fbc8023989b6a67cd189b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::const_cell_iterator::const_cell_iterator</definition>
        <argsstring>()=default</argsstring>
        <name>const_cell_iterator</name>
        <briefdescription>
<para>Default constructs a <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="194" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1a89fd4a50d2cd0b6b4c60c62fdee0fa6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::const_cell_iterator::const_cell_iterator</definition>
        <argsstring>(worksheet ws, const cell_reference &amp;start_cell, const range_reference &amp;limits, major_order order, bool skip_null, bool wrap)</argsstring>
        <name>const_cell_iterator</name>
        <param>
          <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
          <declname>ws</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> &amp;</type>
          <declname>start_cell</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>limits</declname>
        </param>
        <param>
          <type>major_order</type>
          <declname>order</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skip_null</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> from a worksheet, range, and iteration settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="199" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="46" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1a963ead172d8c29beb6e96489ca0f7f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::const_cell_iterator::const_cell_iterator</definition>
        <argsstring>(const const_cell_iterator &amp;)=default</argsstring>
        <name>const_cell_iterator</name>
        <param>
          <type>const <ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> as a copy of an existing <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="205" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1a940ecf2e0efad38c7731343bb1e9104c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> &amp;</type>
        <definition>const_cell_iterator&amp; xlnt::const_cell_iterator::operator=</definition>
        <argsstring>(const const_cell_iterator &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Assigns this iterator to match the data in rhs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="210" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1a2a95bdc3b7a9b2a28dd00636a8463bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::const_cell_iterator::const_cell_iterator</definition>
        <argsstring>(const_cell_iterator &amp;&amp;)=default</argsstring>
        <name>const_cell_iterator</name>
        <param>
          <type><ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> by moving from a <ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> temporary </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="215" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1afef6cc657a7c310d7e2aed4278051f2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> &amp;</type>
        <definition>const_cell_iterator&amp; xlnt::const_cell_iterator::operator=</definition>
        <argsstring>(const_cell_iterator &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Assigns this iterator to from a <ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> temporary </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="220" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1a6c356a7cd5939a4f899a10a4b83cee41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::const_cell_iterator::~const_cell_iterator</definition>
        <argsstring>()=default</argsstring>
        <name>~const_cell_iterator</name>
        <briefdescription>
<para>destructor for <ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="225" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1a0cd45359a22d5211ef8995c44d55fdff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1const__cell__iterator_1a658244030193fa48a9f9ac1c49659e97" kindref="member">reference</ref></type>
        <definition>const const_cell_iterator::reference xlnt::const_cell_iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Dereferences this iterator to return the cell it points to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="230" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1a3aa8b526bc08df9acc9280624f7fbff0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::const_cell_iterator::operator==</definition>
        <argsstring>(const const_cell_iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this iterator is equivalent to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="235" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="71" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1a86975e284e99ca3df50335ba2bb595f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::const_cell_iterator::operator!=</definition>
        <argsstring>(const const_cell_iterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this iterator isn&apos;t equivalent to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="240" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1a907d2a8d72fa2d8f7bf9e38535e03074" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> &amp;</type>
        <definition>const_cell_iterator &amp; xlnt::const_cell_iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
<para>Pre-decrements the iterator to point to the previous cell and returns a reference to the iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="246" column="25" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="127" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1af763ab76bab94a343748e7757ebadf62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref></type>
        <definition>const_cell_iterator xlnt::const_cell_iterator::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Post-decrements the iterator to point to the previous cell and return a copy of the iterator before the decrement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="252" column="25" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="171" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1a59f214d4ce6d0862dfc0fb00064e2ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> &amp;</type>
        <definition>const_cell_iterator &amp; xlnt::const_cell_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>Pre-increments the iterator to point to the previous cell and returns a reference to the iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="258" column="25" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="215" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1const__cell__iterator_1a2be6577fbe9b1771e85563fbd5582c75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref></type>
        <definition>const_cell_iterator xlnt::const_cell_iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Post-increments the iterator to point to the previous cell and return a copy of the iterator before the decrement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="264" column="25" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="259" bodyend="265"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A cell iterator iterates over a 1D range by row or by column. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="179" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="180" bodyend="301"/>
    <listofallmembers>
      <member refid="classxlnt_1_1const__cell__iterator_1a343870cb9e1048924917eedaacae087d" prot="private" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>bounds_</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1ab02edd955b1fbc8023989b6a67cd189b" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>const_cell_iterator</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a89fd4a50d2cd0b6b4c60c62fdee0fa6f" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>const_cell_iterator</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a963ead172d8c29beb6e96489ca0f7f14" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>const_cell_iterator</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a2a95bdc3b7a9b2a28dd00636a8463bc8" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>const_cell_iterator</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a372e3febbe95c1819e13c924e1070071" prot="private" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>cursor_</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1adf46b03698d32c5635621a49ca923eeb" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>difference_type</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1aebed3225748e77d3ea1dbee50af1f2e0" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>iterator_category</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a86975e284e99ca3df50335ba2bb595f2" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>operator!=</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a0cd45359a22d5211ef8995c44d55fdff" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>operator*</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a59f214d4ce6d0862dfc0fb00064e2ccd" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>operator++</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a2be6577fbe9b1771e85563fbd5582c75" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>operator++</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a907d2a8d72fa2d8f7bf9e38535e03074" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>operator--</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1af763ab76bab94a343748e7757ebadf62" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>operator--</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a940ecf2e0efad38c7731343bb1e9104c" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>operator=</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1afef6cc657a7c310d7e2aed4278051f2a" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>operator=</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a3aa8b526bc08df9acc9280624f7fbff0" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>operator==</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a217c34ce431102a199de4d41ca35794a" prot="private" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>order_</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1aafb76cb7f099fdfe31ce555178972f34" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>pointer</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a658244030193fa48a9f9ac1c49659e97" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>reference</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a1d099e4ff0dad9581e78675870750b0b" prot="private" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>skip_null_</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a6359018f6bf466f5040f31c103c3ac38" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>value_type</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1adfb6b94590959bb3baa609c23ffa65ca" prot="private" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>wrap_</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1af5247ed9c6c6dbd96892cb230352de30" prot="private" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>ws_</name></member>
      <member refid="classxlnt_1_1const__cell__iterator_1a6c356a7cd5939a4f899a10a4b83cee41" prot="public" virt="non-virtual"><scope>xlnt::const_cell_iterator</scope><name>~const_cell_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
