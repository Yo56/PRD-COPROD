<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classxlnt_1_1variant" kind="class" language="C++" prot="public">
    <compoundname>xlnt::variant</compoundname>
    <includes refid="variant_8hpp" local="no">variant.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classxlnt_1_1variant_1a7256ff9116aab1d86fe6ddc428746fa3" prot="public" static="no" strong="yes">
        <type></type>
        <name>type</name>
        <enumvalue id="classxlnt_1_1variant_1a7256ff9116aab1d86fe6ddc428746fa3a6ba8844da718b4a65f60dbfd0d92d6ef" prot="public">
          <name>vector</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classxlnt_1_1variant_1a7256ff9116aab1d86fe6ddc428746fa3a37a6259cc0c1dae299a7866489dff0bd" prot="public">
          <name>null</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classxlnt_1_1variant_1a7256ff9116aab1d86fe6ddc428746fa3aa9818d533a6a867304dd2a16f5644215" prot="public">
          <name>i4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classxlnt_1_1variant_1a7256ff9116aab1d86fe6ddc428746fa3a50832ec233be4417bbec35cd56b1f312" prot="public">
          <name>lpstr</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classxlnt_1_1variant_1a7256ff9116aab1d86fe6ddc428746fa3a5fc732311905cb27e82d67f4f6511f7f" prot="public">
          <name>date</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classxlnt_1_1variant_1a7256ff9116aab1d86fe6ddc428746fa3a84e2c64f38f78ba3ea5c905ab5a2da27" prot="public">
          <name>boolean</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The possible types a variant can hold. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="46" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" bodystart="47" bodyend="81"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxlnt_1_1variant_1ac354c45e10ab8f80eb184956ea6f5c8b" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1variant_1a7256ff9116aab1d86fe6ddc428746fa3" kindref="member">type</ref></type>
        <definition>type xlnt::variant::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="168" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1variant_1a7d07f37fd5068ab54d408b048ef6c26e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classxlnt_1_1variant" kindref="compound">variant</ref> &gt;</type>
        <definition>std::vector&lt;variant&gt; xlnt::variant::vector_value_</definition>
        <argsstring></argsstring>
        <name>vector_value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="169" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1variant_1a6a8e401adc3ef38b00ba545d46b8c8d9" prot="private" static="no" mutable="no">
        <type>std::int32_t</type>
        <definition>std::int32_t xlnt::variant::i4_value_</definition>
        <argsstring></argsstring>
        <name>i4_value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="170" column="18" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1variant_1acd2cf3a750cc86424fce1f1a458d0e46" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string xlnt::variant::lpstr_value_</definition>
        <argsstring></argsstring>
        <name>lpstr_value_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="171" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxlnt_1_1variant_1a229f10a100c8812cbfe2c35360dfff9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>()</argsstring>
        <name>variant</name>
        <briefdescription>
<para>Default constructor. Creates a null-type variant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="86" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1ab3f3482e47d60c835a89dc664a1c4c04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>variant</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a string-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="91" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1aea0802fa6f2859412e60f255aceb8fac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(const char *value)</argsstring>
        <name>variant</name>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a string-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="96" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1af57057f67e3d9d56e5f45ae298c68cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(std::int32_t value)</argsstring>
        <name>variant</name>
        <param>
          <type>std::int32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a i4-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="101" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1a0f6256bf7810c977e50f2828271bd909" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(bool value)</argsstring>
        <name>variant</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a bool-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="106" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1ac81021f5d181679770554c0ac08941ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(const datetime &amp;value)</argsstring>
        <name>variant</name>
        <param>
          <type>const <ref refid="structxlnt_1_1datetime" kindref="compound">datetime</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a date-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="111" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="57" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1ad73b6f6ccd483f25e500c7d443e93c2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(const std::initializer_list&lt; std::int32_t &gt; &amp;value)</argsstring>
        <name>variant</name>
        <param>
          <type>const std::initializer_list&lt; std::int32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a vector_i4-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="116" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1af90a188ad302bb0bde173b2d6062ca72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(const std::vector&lt; std::int32_t &gt; &amp;value)</argsstring>
        <name>variant</name>
        <param>
          <type>const std::vector&lt; std::int32_t &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a vector_i4-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="121" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1ac7e940a9ecb55b9c73813c3fd5ec7105" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(const std::initializer_list&lt; const char * &gt; &amp;value)</argsstring>
        <name>variant</name>
        <param>
          <type>const std::initializer_list&lt; const char * &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a vector_string-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="126" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="81" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1a790307ccb76c6c3dc00e5d55b999402a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(const std::vector&lt; const char * &gt; &amp;value)</argsstring>
        <name>variant</name>
        <param>
          <type>const std::vector&lt; const char * &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a vector_string-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="131" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1a64da7cc5b04050cc235c6bdaff2d8861" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(const std::initializer_list&lt; std::string &gt; &amp;value)</argsstring>
        <name>variant</name>
        <param>
          <type>const std::initializer_list&lt; std::string &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a vector_string-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="136" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="99" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1a5b85c2d24b9de7ac393b83771b3a50a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(const std::vector&lt; std::string &gt; &amp;value)</argsstring>
        <name>variant</name>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a vector_string-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="141" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="108" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1ab8fce396095bb6df500a97bb4a5857b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::variant::variant</definition>
        <argsstring>(const std::vector&lt; variant &gt; &amp;value)</argsstring>
        <name>variant</name>
        <param>
          <type>const std::vector&lt; <ref refid="classxlnt_1_1variant" kindref="compound">variant</ref> &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a vector_variant-type variant with the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="146" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="117" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1ad656fbf89d112561b2a635da22e4685f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::variant::is</definition>
        <argsstring>(type t) const</argsstring>
        <name>is</name>
        <param>
          <type><ref refid="classxlnt_1_1variant_1a7256ff9116aab1d86fe6ddc428746fa3" kindref="member">type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Returns true if this variant is of type t. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="151" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1ad6e30eb5fce5d6a4a087ddc139d344e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T xlnt::variant::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
<para>Returns the value of this variant as type T. An exception will be thrown if the types are not convertible. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="158" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1ae1c3eb43528c5989f85635000c77c575" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1variant_1a7256ff9116aab1d86fe6ddc428746fa3" kindref="member">type</ref></type>
        <definition>variant::type xlnt::variant::value_type</definition>
        <argsstring>() const</argsstring>
        <name>value_type</name>
        <briefdescription>
<para>Returns the type of this variant. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="163" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="183" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1a031f0bc8e96231e775c5bb84fff5ee27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::variant::operator==</definition>
        <argsstring>(const variant &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1variant" kindref="compound">variant</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="165" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="126" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1variant_1abdc58e27e9ab76b2ea585ac043ffa613" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>XLNT_API datetime xlnt::variant::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="175" column="6" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/utils/variant.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an object that can have variable type. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" line="38" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/utils/variant.hpp" bodystart="39" bodyend="172"/>
    <listofallmembers>
      <member refid="classxlnt_1_1variant_1ad6e30eb5fce5d6a4a087ddc139d344e3" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>get</name></member>
      <member refid="classxlnt_1_1variant_1abdc58e27e9ab76b2ea585ac043ffa613" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>get</name></member>
      <member refid="classxlnt_1_1variant_1a6a8e401adc3ef38b00ba545d46b8c8d9" prot="private" virt="non-virtual"><scope>xlnt::variant</scope><name>i4_value_</name></member>
      <member refid="classxlnt_1_1variant_1ad656fbf89d112561b2a635da22e4685f" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>is</name></member>
      <member refid="classxlnt_1_1variant_1acd2cf3a750cc86424fce1f1a458d0e46" prot="private" virt="non-virtual"><scope>xlnt::variant</scope><name>lpstr_value_</name></member>
      <member refid="classxlnt_1_1variant_1a031f0bc8e96231e775c5bb84fff5ee27" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>operator==</name></member>
      <member refid="classxlnt_1_1variant_1a7256ff9116aab1d86fe6ddc428746fa3" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>type</name></member>
      <member refid="classxlnt_1_1variant_1ac354c45e10ab8f80eb184956ea6f5c8b" prot="private" virt="non-virtual"><scope>xlnt::variant</scope><name>type_</name></member>
      <member refid="classxlnt_1_1variant_1ae1c3eb43528c5989f85635000c77c575" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>value_type</name></member>
      <member refid="classxlnt_1_1variant_1a229f10a100c8812cbfe2c35360dfff9a" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1ab3f3482e47d60c835a89dc664a1c4c04" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1aea0802fa6f2859412e60f255aceb8fac" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1af57057f67e3d9d56e5f45ae298c68cdf" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1a0f6256bf7810c977e50f2828271bd909" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1ac81021f5d181679770554c0ac08941ca" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1ad73b6f6ccd483f25e500c7d443e93c2d" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1af90a188ad302bb0bde173b2d6062ca72" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1ac7e940a9ecb55b9c73813c3fd5ec7105" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1a790307ccb76c6c3dc00e5d55b999402a" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1a64da7cc5b04050cc235c6bdaff2d8861" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1a5b85c2d24b9de7ac393b83771b3a50a3" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1ab8fce396095bb6df500a97bb4a5857b8" prot="public" virt="non-virtual"><scope>xlnt::variant</scope><name>variant</name></member>
      <member refid="classxlnt_1_1variant_1a7d07f37fd5068ab54d408b048ef6c26e" prot="private" virt="non-virtual"><scope>xlnt::variant</scope><name>vector_value_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
