<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classxlnt_1_1cell__iterator" kind="class" language="C++" prot="public">
    <compoundname>xlnt::cell_iterator</compoundname>
    <includes refid="cell__iterator_8hpp" local="no">cell_iterator.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classxlnt_1_1cell__iterator_1acef623e3fccdc7dc28ec82110f9b93a0" prot="public" static="no">
        <type>std::bidirectional_iterator_tag</type>
        <definition>using xlnt::cell_iterator::iterator_category =  std::bidirectional_iterator_tag</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
<para>iterator tags required for use with standard algorithms and adapters </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="53" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1cell__iterator_1a37f2f7d770bb74addc8f6f6b0f3f6612" prot="public" static="no">
        <type><ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        <definition>using xlnt::cell_iterator::value_type =  cell</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="54" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1cell__iterator_1a704bb3cf93bd4819f08e84d2999ab84f" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using xlnt::cell_iterator::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="55" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1cell__iterator_1a6d3ac0c1bdd444a7f2cacc1e28970deb" prot="public" static="no">
        <type><ref refid="classxlnt_1_1cell" kindref="compound">cell</ref> *</type>
        <definition>using xlnt::cell_iterator::pointer =  cell *</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="56" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1cell__iterator_1a88cb384863178de6d7e76f93c2592b51" prot="public" static="no">
        <type><ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        <definition>using xlnt::cell_iterator::reference =  cell</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="57" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxlnt_1_1cell__iterator_1a672fcd1ddea2673e59b15c7e1f0645eb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::cell_iterator::skip_null_</definition>
        <argsstring></argsstring>
        <name>skip_null_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>If true, cells that don&apos;t exist in the worksheet will be skipped during iteration. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="143" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1cell__iterator_1ab18cd04e1844bb458a07d47be51681eb" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::cell_iterator::wrap_</definition>
        <argsstring></argsstring>
        <name>wrap_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>If true, when on the last column, the cursor will continue to the next row (and vice versa when iterating in column-major order) until reaching the bottom right corner of the range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="150" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1cell__iterator_1aa802fecd688276c5cda8aa9a05756c04" prot="private" static="no" mutable="no">
        <type>major_order</type>
        <definition>major_order xlnt::cell_iterator::order_</definition>
        <argsstring></argsstring>
        <name>order_</name>
        <initializer>= <ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">major_order::column</ref></initializer>
        <briefdescription>
<para>The order this iterator will move, by column or by row. Note that this has the opposite meaning as in a <ref refid="classxlnt_1_1range__iterator" kindref="compound">range_iterator</ref> because after getting a row-major <ref refid="classxlnt_1_1range__iterator" kindref="compound">range_iterator</ref>, the row-major <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> will iterate over a column and vice versa. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="158" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1cell__iterator_1a4ab0079933d143f0ac64fadc95d9b4dc" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::cell_iterator::ws_</definition>
        <argsstring></argsstring>
        <name>ws_</name>
        <briefdescription>
<para>The worksheet this iterator will return cells from. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="163" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1cell__iterator_1a64ab0b4d0e7cea75e72ebbf6df807fec" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref></type>
        <definition>cell_reference xlnt::cell_iterator::cursor_</definition>
        <argsstring></argsstring>
        <name>cursor_</name>
        <briefdescription>
<para>The current cell the iterator points to </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="168" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1cell__iterator_1a6c4472c97fa9d62280c6132505750f5a" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref></type>
        <definition>range_reference xlnt::cell_iterator::bounds_</definition>
        <argsstring></argsstring>
        <name>bounds_</name>
        <briefdescription>
<para>The range of cells this iterator is restricted to </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="173" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1ab4383c135fbe52ba1dbbf77aae49e23d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::cell_iterator::cell_iterator</definition>
        <argsstring>()=default</argsstring>
        <name>cell_iterator</name>
        <briefdescription>
<para>Default constructs a <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="62" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1afcd15a3290c96fea6204ff24484873dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::cell_iterator::cell_iterator</definition>
        <argsstring>(worksheet ws, const cell_reference &amp;start_cell, const range_reference &amp;limits, major_order order, bool skip_null, bool wrap)</argsstring>
        <name>cell_iterator</name>
        <param>
          <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
          <declname>ws</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> &amp;</type>
          <declname>start_cell</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>limits</declname>
        </param>
        <param>
          <type>major_order</type>
          <declname>order</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>skip_null</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>wrap</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> from a worksheet, range, and iteration settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="67" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="31" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1aed4d590b9f34a7e678ccde782ef35e17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::cell_iterator::cell_iterator</definition>
        <argsstring>(const cell_iterator &amp;)=default</argsstring>
        <name>cell_iterator</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> as a copy of an existing <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="73" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1a4e7df893eb17d0b3c742cc99365b8113" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> &amp;</type>
        <definition>cell_iterator&amp; xlnt::cell_iterator::operator=</definition>
        <argsstring>(const cell_iterator &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Assigns this iterator to match the data in rhs. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="78" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1aecdbdd817e1e87a3a3fbc7c7696f0ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::cell_iterator::cell_iterator</definition>
        <argsstring>(cell_iterator &amp;&amp;)=default</argsstring>
        <name>cell_iterator</name>
        <param>
          <type><ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> by moving from a <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> temporary </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="83" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1a9dd3b228c40a20a4de94dfbb0b3617b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> &amp;</type>
        <definition>cell_iterator&amp; xlnt::cell_iterator::operator=</definition>
        <argsstring>(cell_iterator &amp;&amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
<para>Assigns this iterator to from a <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> temporary </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="88" column="19"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1a295ceec95ff8ff8279cc735d65a58f1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::cell_iterator::~cell_iterator</definition>
        <argsstring>()=default</argsstring>
        <name>~cell_iterator</name>
        <briefdescription>
<para>destructor for <ref refid="classxlnt_1_1const__cell__iterator" kindref="compound">const_cell_iterator</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="93" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1a3ec27dfb016870719a48611f71df7dac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell__iterator_1a88cb384863178de6d7e76f93c2592b51" kindref="member">reference</ref></type>
        <definition>cell_iterator::reference xlnt::cell_iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Dereferences this iterator to return the cell it points to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="98" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1a496b92110c30fd94e69c5fd700b1bc89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1cell__iterator_1a88cb384863178de6d7e76f93c2592b51" kindref="member">reference</ref></type>
        <definition>const cell_iterator::reference xlnt::cell_iterator::operator*</definition>
        <argsstring>() const</argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Dereferences this iterator to return the cell it points to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="103" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="272" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1a69698d9443b33c80746a5eb11a7f3d99" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell_iterator::operator==</definition>
        <argsstring>(const cell_iterator &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this iterator is equivalent to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="108" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="61" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1ab80ddc37b10545dfced8e2d99dac8c59" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell_iterator::operator!=</definition>
        <argsstring>(const cell_iterator &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this iterator isn&apos;t equivalent to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="113" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1ac5b1c7029f783c730236213619294a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> &amp;</type>
        <definition>cell_iterator &amp; xlnt::cell_iterator::operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
<para>Pre-decrements the iterator to point to the previous cell and returns a reference to the iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="119" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="91" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1a7ccfc4196cdfd923fc36e61884287949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref></type>
        <definition>cell_iterator xlnt::cell_iterator::operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Post-decrements the iterator to point to the previous cell and return a copy of the iterator before the decrement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="125" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="163" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1adf74cb1a827fa11162d5d0fc4018c33d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref> &amp;</type>
        <definition>cell_iterator &amp; xlnt::cell_iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>Pre-increments the iterator to point to the previous cell and returns a reference to the iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="131" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="179" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell__iterator_1a6180e6404bafb6e375bc95778a55701b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell__iterator" kindref="compound">cell_iterator</ref></type>
        <definition>cell_iterator xlnt::cell_iterator::operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Post-increments the iterator to point to the previous cell and return a copy of the iterator before the decrement. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="137" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/worksheet/cell_iterator.cpp" bodystart="251" bodyend="257"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A cell iterator iterates over a 1D range by row or by column. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" line="47" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/worksheet/cell_iterator.hpp" bodystart="48" bodyend="174"/>
    <listofallmembers>
      <member refid="classxlnt_1_1cell__iterator_1a6c4472c97fa9d62280c6132505750f5a" prot="private" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>bounds_</name></member>
      <member refid="classxlnt_1_1cell__iterator_1ab4383c135fbe52ba1dbbf77aae49e23d" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>cell_iterator</name></member>
      <member refid="classxlnt_1_1cell__iterator_1afcd15a3290c96fea6204ff24484873dc" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>cell_iterator</name></member>
      <member refid="classxlnt_1_1cell__iterator_1aed4d590b9f34a7e678ccde782ef35e17" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>cell_iterator</name></member>
      <member refid="classxlnt_1_1cell__iterator_1aecdbdd817e1e87a3a3fbc7c7696f0ee9" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>cell_iterator</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a64ab0b4d0e7cea75e72ebbf6df807fec" prot="private" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>cursor_</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a704bb3cf93bd4819f08e84d2999ab84f" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>difference_type</name></member>
      <member refid="classxlnt_1_1cell__iterator_1acef623e3fccdc7dc28ec82110f9b93a0" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>iterator_category</name></member>
      <member refid="classxlnt_1_1cell__iterator_1ab80ddc37b10545dfced8e2d99dac8c59" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>operator!=</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a3ec27dfb016870719a48611f71df7dac" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>operator*</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a496b92110c30fd94e69c5fd700b1bc89" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>operator*</name></member>
      <member refid="classxlnt_1_1cell__iterator_1adf74cb1a827fa11162d5d0fc4018c33d" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>operator++</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a6180e6404bafb6e375bc95778a55701b" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>operator++</name></member>
      <member refid="classxlnt_1_1cell__iterator_1ac5b1c7029f783c730236213619294a05" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>operator--</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a7ccfc4196cdfd923fc36e61884287949" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>operator--</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a4e7df893eb17d0b3c742cc99365b8113" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>operator=</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a9dd3b228c40a20a4de94dfbb0b3617b6" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>operator=</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a69698d9443b33c80746a5eb11a7f3d99" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>operator==</name></member>
      <member refid="classxlnt_1_1cell__iterator_1aa802fecd688276c5cda8aa9a05756c04" prot="private" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>order_</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a6d3ac0c1bdd444a7f2cacc1e28970deb" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>pointer</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a88cb384863178de6d7e76f93c2592b51" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>reference</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a672fcd1ddea2673e59b15c7e1f0645eb" prot="private" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>skip_null_</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a37f2f7d770bb74addc8f6f6b0f3f6612" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>value_type</name></member>
      <member refid="classxlnt_1_1cell__iterator_1ab18cd04e1844bb458a07d47be51681eb" prot="private" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>wrap_</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a4ab0079933d143f0ac64fadc95d9b4dc" prot="private" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>ws_</name></member>
      <member refid="classxlnt_1_1cell__iterator_1a295ceec95ff8ff8279cc735d65a58f1e" prot="public" virt="non-virtual"><scope>xlnt::cell_iterator</scope><name>~cell_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
