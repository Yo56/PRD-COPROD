<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="encryption__info_8hpp" kind="file" language="C++">
    <compoundname>encryption_info.hpp</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="cipher_8hpp" local="no">detail/cryptography/cipher.hpp</includes>
    <includes refid="hash_8hpp" local="no">detail/cryptography/hash.hpp</includes>
    <includedby refid="encryption__info_8cpp" local="no">C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/cryptography/encryption_info.cpp</includedby>
    <includedby refid="xlsx__crypto__consumer_8cpp" local="no">C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/cryptography/xlsx_crypto_consumer.cpp</includedby>
    <includedby refid="xlsx__crypto__producer_8cpp" local="no">C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/cryptography/xlsx_crypto_producer.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>detail/cryptography/hash.hpp</label>
        <link refid="hash_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>xlnt/utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>xlnt/xlnt_config.hpp</label>
        <link refid="xlnt__config_8hpp"/>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="11">
        <label>xlnt/cell/index_types.hpp</label>
        <link refid="index__types_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>stdexcept</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="4">
        <label>vector</label>
      </node>
      <node id="5">
        <label>detail/cryptography/cipher.hpp</label>
        <link refid="cipher_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/cryptography/encryption_info.hpp</label>
        <link refid="encryption__info_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>algorithm</label>
      </node>
      <node id="6">
        <label>detail/cryptography/sha.hpp</label>
        <link refid="sha_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/cryptography/xlsx_crypto_consumer.cpp</label>
        <link refid="xlsx__crypto__consumer_8cpp"/>
      </node>
      <node id="2">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/cryptography/encryption_info.cpp</label>
        <link refid="encryption__info_8cpp"/>
      </node>
      <node id="4">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/cryptography/xlsx_crypto_producer.cpp</label>
        <link refid="xlsx__crypto__producer_8cpp"/>
      </node>
      <node id="1">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/cryptography/encryption_info.hpp</label>
        <link refid="encryption__info_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structxlnt_1_1detail_1_1encryption__info" prot="public">xlnt::detail::encryption_info</innerclass>
    <innerclass refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info" prot="public">xlnt::detail::encryption_info::standard_encryption_info</innerclass>
    <innerclass refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info" prot="public">xlnt::detail::encryption_info::agile_encryption_info</innerclass>
    <innernamespace refid="namespacexlnt">xlnt</innernamespace>
    <innernamespace refid="namespacexlnt_1_1detail">xlnt::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2017-2020<sp/>Thomas<sp/>Fussell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>WRISING<sp/>FROM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@license:<sp/>http://www.opensource.org/licenses/mit-license.php</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@author:<sp/>see<sp/>AUTHORS<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cipher_8hpp" kindref="compound">detail/cryptography/cipher.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hash_8hpp" kindref="compound">detail/cryptography/hash.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacexlnt" kindref="compound">xlnt</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structxlnt_1_1detail_1_1encryption__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxlnt_1_1detail_1_1encryption__info" kindref="compound">encryption_info</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36" refid="structxlnt_1_1detail_1_1encryption__info_1a9a343b750c5cd7f9fdf2800d294131ae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1a9a343b750c5cd7f9fdf2800d294131ae" kindref="member">is_agile</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structxlnt_1_1detail_1_1encryption__info_1ab826e89e3063f760c9232fcb5406dc9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::u16string<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1ab826e89e3063f760c9232fcb5406dc9b" kindref="member">password</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info" kindref="compound">standard_encryption_info</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a786b862bf230712720039446b1edc7a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a786b862bf230712720039446b1edc7a9" kindref="member">spin_count</ref><sp/>=<sp/>50000;</highlight></codeline>
<codeline lineno="43" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1aa968ffd9e2fba29c44c71739c7d626fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1aa968ffd9e2fba29c44c71739c7d626fa" kindref="member">block_size</ref>;</highlight></codeline>
<codeline lineno="44" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a2842d110428916f229ca0c2583476359" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a2842d110428916f229ca0c2583476359" kindref="member">key_bits</ref>;</highlight></codeline>
<codeline lineno="45" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1adbc4b30a865a875a5b40b937e97ca33e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1adbc4b30a865a875a5b40b937e97ca33e" kindref="member">key_bytes</ref>;</highlight></codeline>
<codeline lineno="46" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a561149d952415df0aacc31471843bc15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a561149d952415df0aacc31471843bc15" kindref="member">hash_size</ref>;</highlight></codeline>
<codeline lineno="47" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a38779f8579c41f0ca73d8366a9d7e771" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacexlnt_1_1detail_1a7d1d7b0f144d404b47b81b52b4d423fc" kindref="member">cipher_algorithm</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a38779f8579c41f0ca73d8366a9d7e771" kindref="member">cipher</ref>;</highlight></codeline>
<codeline lineno="48" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a8a739de5e9729a7ece29036e6141bada" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacexlnt_1_1detail_1a38af9a50613542e2465d09b7af725bdf" kindref="member">cipher_chaining</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a8a739de5e9729a7ece29036e6141bada" kindref="member">chaining</ref>;</highlight></codeline>
<codeline lineno="49" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a594a2556b02fb0fe774ce07023538b17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacexlnt_1_1detail_1af941f433e5c43f37d88576017d0f2bbd" kindref="member">hash_algorithm</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a594a2556b02fb0fe774ce07023538b17" kindref="member">hash</ref><sp/>=<sp/><ref refid="namespacexlnt_1_1detail_1af941f433e5c43f37d88576017d0f2bbda74a89174426b40307102e165374ab8ab" kindref="member">hash_algorithm::sha1</ref>;</highlight></codeline>
<codeline lineno="50" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1ac9b3ce008865c57ea4a3a7025b4d385c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::uint8_t&gt;<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1ac9b3ce008865c57ea4a3a7025b4d385c" kindref="member">salt</ref>;</highlight></codeline>
<codeline lineno="51" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a7ee645cad6c20b43ab93cbdd755e17c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::uint8_t&gt;<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a7ee645cad6c20b43ab93cbdd755e17c5" kindref="member">encrypted_verifier</ref>;</highlight></codeline>
<codeline lineno="52" refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a17154784215f85e33d4ab7b7986e171c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::uint8_t&gt;<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1standard__encryption__info_1a17154784215f85e33d4ab7b7986e171c" kindref="member">encrypted_verifier_hash</ref>;</highlight></codeline>
<codeline lineno="53" refid="structxlnt_1_1detail_1_1encryption__info_1a49ecb59d758dc03c4e5481ac30a27281" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1a49ecb59d758dc03c4e5481ac30a27281" kindref="member">standard</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info" kindref="compound">agile_encryption_info</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>key<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a217872b40699cfb4a223d0a5aa829d0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a217872b40699cfb4a223d0a5aa829d0b" kindref="member">salt_size</ref>;</highlight></codeline>
<codeline lineno="61" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a6b0fa30aa1e4ea587bc2b9ffff856919" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a6b0fa30aa1e4ea587bc2b9ffff856919" kindref="member">block_size</ref>;</highlight></codeline>
<codeline lineno="62" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a29ce839ab15e17f60e4bd4c403113966" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a29ce839ab15e17f60e4bd4c403113966" kindref="member">key_bits</ref>;</highlight></codeline>
<codeline lineno="63" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a2b8695fcbca6e351c275b1c27aeabf07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a2b8695fcbca6e351c275b1c27aeabf07" kindref="member">hash_size</ref>;</highlight></codeline>
<codeline lineno="64" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1ab24cd734b12bc493379c177e5f55ab8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1ab24cd734b12bc493379c177e5f55ab8b" kindref="member">cipher_algorithm</ref>;</highlight></codeline>
<codeline lineno="65" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a73902727ea63aaa3afcdd496cfde5bc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a73902727ea63aaa3afcdd496cfde5bc9" kindref="member">cipher_chaining</ref>;</highlight></codeline>
<codeline lineno="66" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1aa18c197dd16caf365f87595f1f77d302" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1aa18c197dd16caf365f87595f1f77d302" kindref="member">hash_algorithm</ref>;</highlight></codeline>
<codeline lineno="67" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a2302310c5a52329aa76385760029252a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::uint8_t&gt;<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a2302310c5a52329aa76385760029252a" kindref="member">salt_value</ref>;</highlight></codeline>
<codeline lineno="68" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a89f2f2a3715610b9953d985c7de17dc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a89f2f2a3715610b9953d985c7de17dc9" kindref="member">key_data</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1aa5596ae41342a4fb59cb74d5a41a93cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::uint8_t&gt;<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1aa5596ae41342a4fb59cb74d5a41a93cb" kindref="member">hmac_key</ref>;</highlight></codeline>
<codeline lineno="73" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a56a9fe2eb9a923761d489a06fe931bd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::uint8_t&gt;<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a56a9fe2eb9a923761d489a06fe931bd2" kindref="member">hmac_value</ref>;</highlight></codeline>
<codeline lineno="74" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a3a2587ae0e161727404757ab64ba86ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a3a2587ae0e161727404757ab64ba86ce" kindref="member">data_integrity</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a50b7ef41a07b86c1b3a819bc687162c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a50b7ef41a07b86c1b3a819bc687162c9" kindref="member">spin_count</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a217872b40699cfb4a223d0a5aa829d0b" kindref="member">salt_size</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a6b0fa30aa1e4ea587bc2b9ffff856919" kindref="member">block_size</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a29ce839ab15e17f60e4bd4c403113966" kindref="member">key_bits</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a2b8695fcbca6e351c275b1c27aeabf07" kindref="member">hash_size</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1ab24cd734b12bc493379c177e5f55ab8b" kindref="member">cipher_algorithm</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a73902727ea63aaa3afcdd496cfde5bc9" kindref="member">cipher_chaining</ref>;</highlight></codeline>
<codeline lineno="85" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1ab0ef66725628ff7f139fa19d0c4900fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacexlnt_1_1detail_1af941f433e5c43f37d88576017d0f2bbd" kindref="member">hash_algorithm</ref><sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1ab0ef66725628ff7f139fa19d0c4900fb" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::uint8_t&gt;<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a2302310c5a52329aa76385760029252a" kindref="member">salt_value</ref>;</highlight></codeline>
<codeline lineno="87" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1aff07a37f56291230e1edb9d7988fb038" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::uint8_t&gt;<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1aff07a37f56291230e1edb9d7988fb038" kindref="member">verifier_hash_input</ref>;</highlight></codeline>
<codeline lineno="88" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a558fb4fc891b346ea64e0105ac76a840" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::uint8_t&gt;<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a558fb4fc891b346ea64e0105ac76a840" kindref="member">verifier_hash_value</ref>;</highlight></codeline>
<codeline lineno="89" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a877822e539a556c0c8feb8a54ce91bc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::uint8_t&gt;<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a877822e539a556c0c8feb8a54ce91bc7" kindref="member">encrypted_key_value</ref>;</highlight></codeline>
<codeline lineno="90" refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a51dd9142922f545510d80df2f2b94e9d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1_1agile__encryption__info_1a51dd9142922f545510d80df2f2b94e9d" kindref="member">key_encryptor</ref>;</highlight></codeline>
<codeline lineno="91" refid="structxlnt_1_1detail_1_1encryption__info_1a53d9b9cbd34db8944142a115d33eb30f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1a53d9b9cbd34db8944142a115d33eb30f" kindref="member">agile</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::uint8_t&gt;<sp/><ref refid="structxlnt_1_1detail_1_1encryption__info_1a63b9a92e9d3ab85aef1807cc4db31c70" kindref="member">calculate_key</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xlnt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/cryptography/encryption_info.hpp"/>
  </compounddef>
</doxygen>
