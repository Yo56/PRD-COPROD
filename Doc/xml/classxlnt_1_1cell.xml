<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classxlnt_1_1cell" kind="class" language="C++" prot="public">
    <compoundname>xlnt::cell</compoundname>
    <includes refid="cell_8hpp" local="no">cell.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classxlnt_1_1cell_1a982e2b7d6cba0829f1f77631840f957e" prot="public" static="no">
        <type>cell_type</type>
        <definition>using xlnt::cell::type =  cell_type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
<para>Alias xlnt::cell_type to <ref refid="classxlnt_1_1cell_1a982e2b7d6cba0829f1f77631840f957e" kindref="member">xlnt::cell::type</ref> since it looks nicer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="89" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classxlnt_1_1cell_1acbae7dc1ff8c3f97bc43a63aff4015d5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>style xlnt::cell::style</definition>
        <argsstring></argsstring>
        <name>style</name>
        <param>
          <type><ref refid="classxlnt_1_1style" kindref="compound">style</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="629" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" bodystart="629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1cell_1aa217f89c077f57ff91595b37909b58b1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>worksheet xlnt::cell::worksheet</definition>
        <argsstring></argsstring>
        <name>worksheet</name>
        <param>
          <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="630" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1cell_1a5c27ff96f65a231e21871a228cbaf740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class detail::xlsx_consumer</definition>
        <argsstring></argsstring>
        <name>detail::xlsx_consumer</name>
        <param>
          <type><ref refid="classxlnt_1_1detail_1_1xlsx__consumer" kindref="compound">detail::xlsx_consumer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="631" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" bodystart="631" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1cell_1aeaa1b2a5f3d37ddb4b8ca1ebaab144f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class detail::xlsx_producer</definition>
        <argsstring></argsstring>
        <name>detail::xlsx_producer</name>
        <param>
          <type><ref refid="classxlnt_1_1detail_1_1xlsx__producer" kindref="compound">detail::xlsx_producer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="632" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1cell_1a03a1960160d6e8d508d55cdf5d5aa15a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct detail::cell_impl</definition>
        <argsstring></argsstring>
        <name>detail::cell_impl</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1cell__impl" kindref="compound">detail::cell_impl</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="633" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" bodystart="633" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxlnt_1_1cell_1a64fcf20815e6416bd034bebcec208b9f" prot="private" static="no" mutable="no">
        <type><ref refid="structxlnt_1_1detail_1_1cell__impl" kindref="compound">detail::cell_impl</ref> *</type>
        <definition>detail::cell_impl* xlnt::cell::d_</definition>
        <argsstring></argsstring>
        <name>d_</name>
        <briefdescription>
<para>A pointer to this cell&apos;s implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="654" column="23" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" bodystart="654" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classxlnt_1_1cell_1a36cc29dac8046caeac23b602bc3a1d51" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const std::unordered_map&lt; std::string, int &gt; &amp;</type>
        <definition>const std::unordered_map&lt; std::string, int &gt; &amp; xlnt::cell::error_codes</definition>
        <argsstring>()</argsstring>
        <name>error_codes</name>
        <briefdescription>
<para>Returns a map of error strings such as #DIV/0! and their associated indices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="94" column="37" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="156" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxlnt_1_1cell_1ae68911d378fe56f5072274b9c33d3fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::cell::cell</definition>
        <argsstring>(const cell &amp;)=default</argsstring>
        <name>cell</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Default copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="99" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ad97097919f2c8d8731b2a69b6f837806" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::has_value</definition>
        <argsstring>() const</argsstring>
        <name>has_value</name>
        <briefdescription>
<para>Returns true if value has been set and has not been cleared using <ref refid="classxlnt_1_1cell_1a6ca577336de6b92b9820a30d35547a16" kindref="member">cell::clear_value()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="106" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="724" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a1e034f21e14e3eebe8d4059917537e13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
<para>Returns the value of this cell as an instance of type T. Overloads exist for most C++ fundamental types like bool, int, etc. as well as for std::string and xlnt datetime types: date, time, datetime, and timedelta. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="114" column="7"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a6ca577336de6b92b9820a30d35547a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::clear_value</definition>
        <argsstring>()</argsstring>
        <name>clear_value</name>
        <briefdescription>
<para>Makes this cell have a value of type null. All other cell attributes are retained. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="120" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="597" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a35e1ec4101a5e028502cc1c5b9b13334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(std::nullptr_t)</argsstring>
        <name>value</name>
        <param>
          <type>std::nullptr_t</type>
        </param>
        <briefdescription>
<para>Sets the type of this cell to null. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="125" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="205" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ab570baa69a6377c21af291889b34d101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(bool boolean_value)</argsstring>
        <name>value</name>
        <param>
          <type>bool</type>
          <declname>boolean_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given boolean value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="130" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="210" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ac85da6a8e3f3a268c85b2309e12becd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(int int_value)</argsstring>
        <name>value</name>
        <param>
          <type>int</type>
          <declname>int_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="135" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="216" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a8da11cdd92503ebe8af9b8576844cbf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(unsigned int int_value)</argsstring>
        <name>value</name>
        <param>
          <type>unsigned int</type>
          <declname>int_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="140" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="222" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1af97cd39019d072497d9de6d42863547e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(long long int int_value)</argsstring>
        <name>value</name>
        <param>
          <type>long long int</type>
          <declname>int_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="145" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="228" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ac542a0780736254dfd5fdb03a90cec27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(unsigned long long int int_value)</argsstring>
        <name>value</name>
        <param>
          <type>unsigned long long int</type>
          <declname>int_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="150" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="234" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a652a687612d31185cd7a3daf031235e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(float float_value)</argsstring>
        <name>value</name>
        <param>
          <type>float</type>
          <declname>float_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="155" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="240" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a7021477ef98c344d16db7bfac16d20fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(double float_value)</argsstring>
        <name>value</name>
        <param>
          <type>double</type>
          <declname>float_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="160" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="246" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a4fc3503df6e1a25186a31de5660fd928" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(const date &amp;date_value)</argsstring>
        <name>value</name>
        <param>
          <type>const <ref refid="structxlnt_1_1date" kindref="compound">date</ref> &amp;</type>
          <declname>date_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="165" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="280" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a848bb11dbf23a135d19dcc505be9ff17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(const time &amp;time_value)</argsstring>
        <name>value</name>
        <param>
          <type>const <ref refid="structxlnt_1_1time" kindref="compound">time</ref> &amp;</type>
          <declname>time_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="170" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="294" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a7a4f448a18d5ac662e93b2b7acb2859a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(const datetime &amp;datetime_value)</argsstring>
        <name>value</name>
        <param>
          <type>const <ref refid="structxlnt_1_1datetime" kindref="compound">datetime</ref> &amp;</type>
          <declname>datetime_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="175" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="287" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a2963b543d833316c03c377a2bf552855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(const timedelta &amp;timedelta_value)</argsstring>
        <name>value</name>
        <param>
          <type>const <ref refid="structxlnt_1_1timedelta" kindref="compound">timedelta</ref> &amp;</type>
          <declname>timedelta_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="180" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="301" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a072240b642971de572ce61b13409937d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(const std::string &amp;string_value)</argsstring>
        <name>value</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>string_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="185" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1add47fd6aef8b98b2a2f2716bf33c8df1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(const char *string_value)</argsstring>
        <name>value</name>
        <param>
          <type>const char *</type>
          <declname>string_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="190" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a42876d415047f10c8eea4775e8decbe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(const rich_text &amp;text_value)</argsstring>
        <name>value</name>
        <param>
          <type>const <ref refid="classxlnt_1_1rich__text" kindref="compound">rich_text</ref> &amp;</type>
          <declname>text_value</declname>
        </param>
        <briefdescription>
<para>Sets the value of this cell to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="195" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="257" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a563c707c4687b87823f286d434455b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(const cell other_cell)</argsstring>
        <name>value</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
          <declname>other_cell</declname>
        </param>
        <briefdescription>
<para>Sets the value and formatting of this cell to that of other_cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="200" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="270" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a3d21c11927e92be6fde589c41081d74b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::value</definition>
        <argsstring>(const std::string &amp;string_value, bool infer_type)</argsstring>
        <name>value</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>string_value</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>infer_type</declname>
        </param>
        <briefdescription>
<para>Analyzes string_value to determine its type, convert it to that type, and set the value of this cell to that converted value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="206" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="788" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ad41a2e3eb44b7e32ea0934ccc5446f68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell_1a982e2b7d6cba0829f1f77631840f957e" kindref="member">type</ref></type>
        <definition>cell::type xlnt::cell::data_type</definition>
        <argsstring>() const</argsstring>
        <name>data_type</name>
        <briefdescription>
<para>Returns the type of this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="211" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="557" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a19157c5799ea724db4a3fcb10b852ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::data_type</definition>
        <argsstring>(type t)</argsstring>
        <name>data_type</name>
        <param>
          <type><ref refid="classxlnt_1_1cell_1a982e2b7d6cba0829f1f77631840f957e" kindref="member">type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Sets the type of this cell. This should usually be done indirectly by setting the value of the cell to a value of that type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="217" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="562" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a15f41aae50aa385ad8d919a6fbf72d78" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::garbage_collectible</definition>
        <argsstring>() const</argsstring>
        <name>garbage_collectible</name>
        <briefdescription>
<para>There&apos;s no reason to keep a cell which has no value and is not a placeholder. Returns true if this cell has no value, style, isn&apos;t merged, etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="225" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a3d2f3a9977020883ce088e30037c1af9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::is_date</definition>
        <argsstring>() const</argsstring>
        <name>is_date</name>
        <briefdescription>
<para>Returns true iff this cell&apos;s number format matches a date format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="230" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="343" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ac03ebad679cd76a97f60c66ee82751f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref></type>
        <definition>cell_reference xlnt::cell::reference</definition>
        <argsstring>() const</argsstring>
        <name>reference</name>
        <briefdescription>
<para>Returns a <ref refid="classxlnt_1_1cell__reference" kindref="compound">cell_reference</ref> that points to the location of this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="237" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ad24f50cc05ad1c32cb231533e2db6b84" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1column__t" kindref="compound">column_t</ref></type>
        <definition>column_t xlnt::cell::column</definition>
        <argsstring>() const</argsstring>
        <name>column</name>
        <briefdescription>
<para>Returns the column of this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="242" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a017794c401ceec5fc8bb7560e63d399d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1column__t_1ab514d159582ca03315e0f020dc8efedd" kindref="member">column_t::index_t</ref></type>
        <definition>column_t::index_t xlnt::cell::column_index</definition>
        <argsstring>() const</argsstring>
        <name>column_index</name>
        <briefdescription>
<para>Returns the numeric index (A == 1) of the column of this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="247" column="23" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a97138f1360c3eed05feeccd338dc773d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref></type>
        <definition>row_t xlnt::cell::row</definition>
        <argsstring>() const</argsstring>
        <name>row</name>
        <briefdescription>
<para>Returns the row of this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="252" column="11" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ab9905e42246619418ccc9d54492eba7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; int, int &gt;</type>
        <definition>std::pair&lt; int, int &gt; xlnt::cell::anchor</definition>
        <argsstring>() const</argsstring>
        <name>anchor</name>
        <briefdescription>
<para>Returns the location of this cell as an ordered pair (left, top). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="257" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="538" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a6c4e9fcdccd12bfa2a51531a6c69ed3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1hyperlink" kindref="compound">hyperlink</ref></type>
        <definition>hyperlink xlnt::cell::hyperlink</definition>
        <argsstring>() const</argsstring>
        <name>hyperlink</name>
        <briefdescription>
<para>Returns the relationship of this cell&apos;s hyperlink. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="257" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="367" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1aada130e6847d32ff24ccdb0c2914e567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::hyperlink</definition>
        <argsstring>(const std::string &amp;url, const std::string &amp;display=&quot;&quot;)</argsstring>
        <name>hyperlink</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>url</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>display</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Adds a hyperlink to this cell pointing to the URI of the given value and sets the text value of the cell to the given parameter. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="270" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="372" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a95c6180b7138f2de90d2bceeb64fc414" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::hyperlink</definition>
        <argsstring>(xlnt::cell target, const std::string &amp;display=&quot;&quot;)</argsstring>
        <name>hyperlink</name>
        <param>
          <type><ref refid="classxlnt_1_1cell" kindref="compound">xlnt::cell</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>display</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Adds an internal hyperlink to this cell pointing to the given cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="275" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="414" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ab37b7d9927596e4f74251e2e66b53197" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::hyperlink</definition>
        <argsstring>(xlnt::range target, const std::string &amp;display=&quot;&quot;)</argsstring>
        <name>hyperlink</name>
        <param>
          <type><ref refid="classxlnt_1_1range" kindref="compound">xlnt::range</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>display</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Adds an internal hyperlink to this cell pointing to the given range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="280" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="434" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a8f8406a91f1a45fa49392bf3900a58af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::has_hyperlink</definition>
        <argsstring>() const</argsstring>
        <name>has_hyperlink</name>
        <briefdescription>
<para>Returns true if this cell has a hyperlink set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="285" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="951" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a44a10e4c9b215005197e90f4cfc167d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref></type>
        <definition>alignment xlnt::cell::computed_alignment</definition>
        <argsstring>() const</argsstring>
        <name>computed_alignment</name>
        <briefdescription>
<para>Returns the alignment that should be used when displaying this cell graphically based on the workbook default, the cell-level format, and the named style applied to the cell in that order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="285" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="587" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a12c443d8cd32f83fff9c71c7e28c11fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1border" kindref="compound">border</ref></type>
        <definition>border xlnt::cell::computed_border</definition>
        <argsstring>() const</argsstring>
        <name>computed_border</name>
        <briefdescription>
<para>Returns the border that should be used when displaying this cell graphically based on the workbook default, the cell-level format, and the named style applied to the cell in that order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="285" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="582" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ace43211f128b5a0f55030f8c05ed3f79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1fill" kindref="compound">fill</ref></type>
        <definition>fill xlnt::cell::computed_fill</definition>
        <argsstring>() const</argsstring>
        <name>computed_fill</name>
        <briefdescription>
<para>Returns the fill that should be used when displaying this cell graphically based on the workbook default, the cell-level format, and the named style applied to the cell in that order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="285" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="577" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1aad27aef85203a1bb41a6b985dda04b71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1font" kindref="compound">font</ref></type>
        <definition>font xlnt::cell::computed_font</definition>
        <argsstring>() const</argsstring>
        <name>computed_font</name>
        <briefdescription>
<para>Returns the font that should be used when displaying this cell graphically based on the workbook default, the cell-level format, and the named style applied to the cell in that order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="285" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="572" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ac0eddacef6382060cfc32c22fd5a7355" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1number__format" kindref="compound">number_format</ref></type>
        <definition>number_format xlnt::cell::computed_number_format</definition>
        <argsstring>() const</argsstring>
        <name>computed_number_format</name>
        <briefdescription>
<para>Returns the number format that should be used when displaying this cell graphically based on the workbook default, the cell-level format, and the named style applied to the cell in that order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="285" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="567" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a6b381b37f07a77e76d644b25c0d065d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1protection" kindref="compound">protection</ref></type>
        <definition>protection xlnt::cell::computed_protection</definition>
        <argsstring>() const</argsstring>
        <name>computed_protection</name>
        <briefdescription>
<para>Returns the protection that should be used when displaying this cell graphically based on the workbook default, the cell-level format, and the named style applied to the cell in that order. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="285" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="592" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a2a1cb642a98314cba30ccd23d44d158b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::has_format</definition>
        <argsstring>() const</argsstring>
        <name>has_format</name>
        <briefdescription>
<para>Returns true if this cell has had a format applied to it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="336" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="752" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1aa75f1990f41d6d1b6f87918b1492ae6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1format" kindref="compound">format</ref></type>
        <definition>const format xlnt::cell::format</definition>
        <argsstring>() const</argsstring>
        <name>format</name>
        <briefdescription>
<para>Returns the format applied to this cell. If this cell has no format, an <ref refid="classxlnt_1_1invalid__attribute" kindref="compound">invalid_attribute</ref> exception will be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="336" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="911" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a304510f70e88e8c4f3a2a24c37c489da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::format</definition>
        <argsstring>(const class format new_format)</argsstring>
        <name>format</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1format" kindref="compound">format</ref></type>
          <declname>new_format</declname>
        </param>
        <briefdescription>
<para>Applies the cell-level formatting of new_format to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="347" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="757" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a05271dc81c862eb36278b54f984439a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::clear_format</definition>
        <argsstring>()</argsstring>
        <name>clear_format</name>
        <briefdescription>
<para>Removes the cell-level formatting from this cell. This doesn&apos;t affect the style that may also be applied to the cell. Throws an <ref refid="classxlnt_1_1invalid__attribute" kindref="compound">invalid_attribute</ref> exception if no format is applied. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="354" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="840" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a48781230fa419e7476d3f8e5d31e0ce5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1number__format" kindref="compound">number_format</ref></type>
        <definition>number_format xlnt::cell::number_format</definition>
        <argsstring>() const</argsstring>
        <name>number_format</name>
        <briefdescription>
<para>Returns the number format of this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="354" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="941" bodyend="944"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a8414e8ee56aceb5d7dee1030c6278ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::number_format</definition>
        <argsstring>(const class number_format &amp;format)</argsstring>
        <name>number_format</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1number__format" kindref="compound">number_format</ref> &amp;</type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Creates a new format in the workbook, sets its <ref refid="classxlnt_1_1number__format" kindref="compound">number_format</ref> to the given format, and applies the format to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="365" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="695" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a6a412716ca76da72ec3906eba6d28aa0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1font" kindref="compound">font</ref></type>
        <definition>font xlnt::cell::font</definition>
        <argsstring>() const</argsstring>
        <name>font</name>
        <briefdescription>
<para>Returns the font applied to the text in this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="365" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="936" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a6b8e726a7b16e50763e966521ac07583" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::font</definition>
        <argsstring>(const class font &amp;font_)</argsstring>
        <name>font</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1font" kindref="compound">font</ref> &amp;</type>
          <declname>font_</declname>
        </param>
        <briefdescription>
<para>Creates a new format in the workbook, sets its font to the given font, and applies the format to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="376" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="689" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ae38211ddc3aa8e97cbfbaacd5980d5e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1fill" kindref="compound">fill</ref></type>
        <definition>fill xlnt::cell::fill</definition>
        <argsstring>() const</argsstring>
        <name>fill</name>
        <briefdescription>
<para>Returns the fill applied to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="376" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="931" bodyend="934"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a8f5192f1ed23883920e0093444ee464c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::fill</definition>
        <argsstring>(const class fill &amp;fill_)</argsstring>
        <name>fill</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1fill" kindref="compound">fill</ref> &amp;</type>
          <declname>fill_</declname>
        </param>
        <briefdescription>
<para>Creates a new format in the workbook, sets its fill to the given fill, and applies the format to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="387" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="683" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a50ef586b7e00088b5c58fc5a81ebc5ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1border" kindref="compound">border</ref></type>
        <definition>border xlnt::cell::border</definition>
        <argsstring>() const</argsstring>
        <name>border</name>
        <briefdescription>
<para>Returns the border of this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="387" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="926" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a8a76847b5e342344b6cfd36245b9a4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::border</definition>
        <argsstring>(const class border &amp;border_)</argsstring>
        <name>border</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1border" kindref="compound">border</ref> &amp;</type>
          <declname>border_</declname>
        </param>
        <briefdescription>
<para>Creates a new format in the workbook, sets its border to the given border, and applies the format to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="398" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="677" bodyend="681"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ae0eb9bbfa7ebcd3cc62c84f29fdb1a76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref></type>
        <definition>alignment xlnt::cell::alignment</definition>
        <argsstring>() const</argsstring>
        <name>alignment</name>
        <briefdescription>
<para>Returns the alignment of the text in this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="398" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="921" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a5bb316e1085b8d0b2e3c1c2d5af222f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::alignment</definition>
        <argsstring>(const class alignment &amp;alignment_)</argsstring>
        <name>alignment</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref> &amp;</type>
          <declname>alignment_</declname>
        </param>
        <briefdescription>
<para>Creates a new format in the workbook, sets its alignment to the given alignment, and applies the format to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="409" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="671" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a3885a1e6d597a339394416e9560fb9dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1protection" kindref="compound">protection</ref></type>
        <definition>protection xlnt::cell::protection</definition>
        <argsstring>() const</argsstring>
        <name>protection</name>
        <briefdescription>
<para>Returns the protection of this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="409" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="946" bodyend="949"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ab5cf761d67c2d0246d3c2a50c67525d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::protection</definition>
        <argsstring>(const class protection &amp;protection_)</argsstring>
        <name>protection</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1protection" kindref="compound">protection</ref> &amp;</type>
          <declname>protection_</declname>
        </param>
        <briefdescription>
<para>Creates a new format in the workbook, sets its protection to the given protection, and applies the format to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="420" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="701" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ae3be365cd7ae0343d7cc70e25d573000" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::has_style</definition>
        <argsstring>() const</argsstring>
        <name>has_style</name>
        <briefdescription>
<para>Returns true if this cell has had a style applied to it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="427" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="896" bodyend="899"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1af42d85dad3ef6a495e0610854dd0fe92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1style" kindref="compound">style</ref></type>
        <definition>class style xlnt::cell::style</definition>
        <argsstring>()</argsstring>
        <name>style</name>
        <briefdescription>
<para>Returns a wrapper pointing to the named style applied to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="427" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ae5d7d5f363704389d4da9cd651bbd2d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1style" kindref="compound">style</ref></type>
        <definition>const style xlnt::cell::style</definition>
        <argsstring>() const</argsstring>
        <name>style</name>
        <briefdescription>
<para>Returns a wrapper pointing to the named style applied to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="427" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="886" bodyend="894"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a3563a972df331c60e3b626c4d7b0e4d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::style</definition>
        <argsstring>(const class style &amp;new_style)</argsstring>
        <name>style</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1style" kindref="compound">style</ref> &amp;</type>
          <declname>new_style</declname>
        </param>
        <briefdescription>
<para>Sets the named style applied to this cell to a style named style_name. Equivalent to style(<ref refid="namespacesetup_1ab3a7a0638d76a01367c5bc3cc699447f" kindref="member">new_style.name()</ref>). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="443" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="857" bodyend="867"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a8d23e41acba4e34b5f6925f0133cfff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::style</definition>
        <argsstring>(const std::string &amp;style_name)</argsstring>
        <name>style</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>style_name</declname>
        </param>
        <briefdescription>
<para>Sets the named style applied to this cell to a style named style_name. If this style has not been previously created in the workbook, a <ref refid="classxlnt_1_1key__not__found" kindref="compound">key_not_found</ref> exception will be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="450" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="869" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a35e6af229185a1e491752a719aed4c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::clear_style</definition>
        <argsstring>()</argsstring>
        <name>clear_style</name>
        <briefdescription>
<para>Removes the named style from this cell. An <ref refid="classxlnt_1_1invalid__attribute" kindref="compound">invalid_attribute</ref> exception will be thrown if this cell has no style. This will not affect the cell format of the cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="457" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="849" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1aff964405ba8223edfd826ca46d89cc12" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::cell::formula</definition>
        <argsstring>() const</argsstring>
        <name>formula</name>
        <briefdescription>
<para>Returns the string representation of the formula applied to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="464" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="479" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ab92332bdae0340d44869ba3d8f832c37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::formula</definition>
        <argsstring>(const std::string &amp;formula)</argsstring>
        <name>formula</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>formula</declname>
        </param>
        <briefdescription>
<para>Sets the formula of this cell to the given value. This formula string should begin with &apos;=&apos;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="470" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="455" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1aa17f51e47e21bab97f4ef639b1fa3353" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::clear_formula</definition>
        <argsstring>()</argsstring>
        <name>clear_formula</name>
        <briefdescription>
<para>Removes the formula from this cell. After this is called, <ref refid="classxlnt_1_1cell_1a45d43fff14aec3eebf2d7622ed9c9af3" kindref="member">has_formula()</ref> will return false. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="475" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="484" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a45d43fff14aec3eebf2d7622ed9c9af3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::has_formula</definition>
        <argsstring>() const</argsstring>
        <name>has_formula</name>
        <briefdescription>
<para>Returns true if this cell has had a formula applied to it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="480" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="474" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a7a51abb90f9e716f242512a9f53cf09a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::cell::to_string</definition>
        <argsstring>() const</argsstring>
        <name>to_string</name>
        <briefdescription>
<para>Returns a string representing the value of this cell. If the data type is not a string, it will be converted according to the number format. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="488" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="729" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1aaa1d2e42bda76c780031b22b6f0d65bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::is_merged</definition>
        <argsstring>() const</argsstring>
        <name>is_merged</name>
        <briefdescription>
<para>Returns true iff this cell has been merged with one or more surrounding cells. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="496" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a4c659baf4eb9d8b5c410a28f18fe9639" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::merged</definition>
        <argsstring>(bool merged)</argsstring>
        <name>merged</name>
        <param>
          <type>bool</type>
          <declname>merged</declname>
        </param>
        <briefdescription>
<para>Makes this a merged cell iff merged is true. Generally, this shouldn&apos;t be called directly. Instead, use <ref refid="classxlnt_1_1worksheet_1a5e51e2f8e3396adfc0a2751a3826aebf" kindref="member">worksheet::merge_cells</ref> on its parent worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="503" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1acfe7b4e42a96807b7f0195a2bcdd8909" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::phonetics_visible</definition>
        <argsstring>() const</argsstring>
        <name>phonetics_visible</name>
        <briefdescription>
<para>Returns true if this cell is set to show phonetic information. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="510" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="333" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a5f4648ceda902ce86e5458e2303dc791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::show_phonetics</definition>
        <argsstring>(bool phonetics)</argsstring>
        <name>show_phonetics</name>
        <param>
          <type>bool</type>
          <declname>phonetics</declname>
        </param>
        <briefdescription>
<para>Enables the display of phonetic information on this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="515" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1aa12568f71475cebf23aceb97b83273a4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::cell::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <briefdescription>
<para>Returns the error string that is stored in this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="520" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="493" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a645651a217d2da307f97b9c11743a00d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::error</definition>
        <argsstring>(const std::string &amp;error)</argsstring>
        <name>error</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>Directly assigns the value of this cell to be the given error. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="525" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="502" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1aac3b7ae6981db3d944a4ee6d7aab6cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell" kindref="compound">cell</ref></type>
        <definition>cell xlnt::cell::offset</definition>
        <argsstring>(int column, int row)</argsstring>
        <name>offset</name>
        <param>
          <type>int</type>
          <declname>column</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row</declname>
        </param>
        <briefdescription>
<para>Returns a cell from this cell&apos;s parent workbook at a relative offset given by the parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="531" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="513" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a36c0be4d8df81b2664ffe2b4084a1409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>class worksheet xlnt::cell::worksheet</definition>
        <argsstring>()</argsstring>
        <name>worksheet</name>
        <briefdescription>
<para>Returns the worksheet that owns this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="531" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a89d340cd9baf065f46ecfb03bf9e2a5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>const worksheet xlnt::cell::worksheet</definition>
        <argsstring>() const</argsstring>
        <name>worksheet</name>
        <briefdescription>
<para>Returns the worksheet that owns this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="531" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="523" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a26d7bb8fe41474c36350c0ce68574ab5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> &amp;</type>
        <definition>workbook &amp; xlnt::cell::workbook</definition>
        <argsstring>()</argsstring>
        <name>workbook</name>
        <briefdescription>
<para>Returns the workbook of the worksheet that owns this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="546" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="528" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a7c9f132281c98286fa30337bd9d2f8ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> &amp;</type>
        <definition>const workbook &amp; xlnt::cell::workbook</definition>
        <argsstring>() const</argsstring>
        <name>workbook</name>
        <briefdescription>
<para>Returns the workbook of the worksheet that owns this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="551" column="25" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="533" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ab081cc6a30847fe3a55ba9793b8e4e74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>calendar</type>
        <definition>calendar xlnt::cell::base_date</definition>
        <argsstring>() const</argsstring>
        <name>base_date</name>
        <briefdescription>
<para>Returns the base date of the parent workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="556" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="768" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1acd23530085a7c0bd5f4637a555cd1cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::cell::check_string</definition>
        <argsstring>(const std::string &amp;to_check)</argsstring>
        <name>check_string</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>to_check</declname>
        </param>
        <briefdescription>
<para>Returns to_check after verifying and fixing encoding, size, and illegal characters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="561" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="170" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1aed816bd54ecd903661e455e51611d78e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::has_comment</definition>
        <argsstring>()</argsstring>
        <name>has_comment</name>
        <briefdescription>
<para>Returns true if this cell has a comment applied. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="568" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="958" bodyend="961"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a408755a29c60e1710372d25038278dd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::clear_comment</definition>
        <argsstring>()</argsstring>
        <name>clear_comment</name>
        <briefdescription>
<para>Deletes the comment applied to this cell if it exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="573" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="963" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a964ca78c47ee0118d25163a378853fb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1comment" kindref="compound">comment</ref></type>
        <definition>class comment xlnt::cell::comment</definition>
        <argsstring>()</argsstring>
        <name>comment</name>
        <briefdescription>
<para>Gets the comment applied to this cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="573" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="972" bodyend="980"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a194ed5db9b5c8e2f7d7357248af66b3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::comment</definition>
        <argsstring>(const std::string &amp;text, const std::string &amp;author=&quot;Microsoft Office User&quot;)</argsstring>
        <name>comment</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>author</declname>
          <defval>&quot;Microsoft Office User&quot;</defval>
        </param>
        <briefdescription>
<para>Creates a new comment with the given text and optional author and applies it to the cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="584" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="982" bodyend="985"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a1f8879eebe026b38df7df467ac297e4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::comment</definition>
        <argsstring>(const std::string &amp;comment_text, const class font &amp;comment_font, const std::string &amp;author=&quot;Microsoft Office User&quot;)</argsstring>
        <name>comment</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>comment_text</declname>
        </param>
        <param>
          <type>const class <ref refid="classxlnt_1_1font" kindref="compound">font</ref> &amp;</type>
          <declname>comment_font</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>author</declname>
          <defval>&quot;Microsoft Office User&quot;</defval>
        </param>
        <briefdescription>
<para>Creates a new comment with the given text, formatting, and optional author and applies it to the cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="591" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="987" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a1748295ff9acc8f5c7dabd8ea572e3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::cell::comment</definition>
        <argsstring>(const class comment &amp;new_comment)</argsstring>
        <name>comment</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1comment" kindref="compound">comment</ref> &amp;</type>
          <declname>new_comment</declname>
        </param>
        <briefdescription>
<para>Apply the comment provided as the only argument to the cell. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="598" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="992" bodyend="1012"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a00f2362faaf5b400ec531cb21a867f29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double xlnt::cell::width</definition>
        <argsstring>() const</argsstring>
        <name>width</name>
        <briefdescription>
<para>Returns the width of this cell in pixels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="603" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="1014" bodyend="1017"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ad52ad5554757d727bd151e6e0847b418" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double xlnt::cell::height</definition>
        <argsstring>() const</argsstring>
        <name>height</name>
        <briefdescription>
<para>Returns the height of this cell in pixels. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="608" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="1019" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ac887d0f3c09db3356c588cc83e6d4a59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1cell" kindref="compound">cell</ref> &amp;</type>
        <definition>cell &amp; xlnt::cell::operator=</definition>
        <argsstring>(const cell &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Makes this cell interally point to rhs. The cell data originally pointed to by this cell will be unchanged. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="616" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a6f16b55e52e20312150303ac842a89d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::operator==</definition>
        <argsstring>(const cell &amp;comparand) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref> &amp;</type>
          <declname>comparand</declname>
        </param>
        <briefdescription>
<para>Returns true if this cell the same cell as comparand (compared by reference). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="621" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="355" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a0f03bc81cb3a176de11dbede267b6379" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::cell::operator!=</definition>
        <argsstring>(const cell &amp;comparand) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1cell" kindref="compound">cell</ref> &amp;</type>
          <declname>comparand</declname>
        </param>
        <briefdescription>
<para>Returns false if this cell the same cell as comparand (compared by reference). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="626" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="360" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1aad0a900ac7604ea93d921a24b7e72126" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>bool</type>
        <definition>XLNT_API rich_text xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="674" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="606" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a176ae426b180122a1441d8c7504ebf90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>int</type>
        <definition>int xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a85462f8d19fc5a28d56ac8834410f1c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>unsigned int</type>
        <definition>unsigned int xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="680" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a1f6ae422a3e71c0b7313712522376e5f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>long long int</type>
        <definition>long long int xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="683" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ad34a492269e6474ec643b73dc0f92363" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>unsigned long long</type>
        <definition>unsigned long long xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="686" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a9e051afb06bec2c548e20e1ca113b871" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>float</type>
        <definition>float xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="689" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a821652b9ed2f24d65cd309dd24cc45e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>double</type>
        <definition>double xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="692" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a94337f883223bf2d3cd76c3f2cb14ad4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structxlnt_1_1date" kindref="compound">date</ref></type>
        <definition>date xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="695" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a472419dc37b22c7b0164d2df57298d86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structxlnt_1_1time" kindref="compound">time</ref></type>
        <definition>time xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="698" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ab04cdd9933d52dfa9b82b71478f78951" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structxlnt_1_1datetime" kindref="compound">datetime</ref></type>
        <definition>datetime xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="701" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a7a802fae697ada352d8336d8ad420049" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="structxlnt_1_1timedelta" kindref="compound">timedelta</ref></type>
        <definition>timedelta xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="704" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a0d578f649743c58152b789e7485e4b4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type><ref refid="classxlnt_1_1rich__text" kindref="compound">rich_text</ref></type>
        <definition>rich_text xlnt::cell::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="710" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classxlnt_1_1cell_1a2f70a3ee9b0644ff47efb7bb5b87cb38" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1format" kindref="compound">format</ref></type>
        <definition>format xlnt::cell::modifiable_format</definition>
        <argsstring>()</argsstring>
        <name>modifiable_format</name>
        <briefdescription>
<para>Returns a non-const reference to the format of this cell. This is for internal use only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="633" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="901" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1a34420f0467190912c1934ff8552150e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::cell::cell</definition>
        <argsstring>()=delete</argsstring>
        <name>cell</name>
        <briefdescription>
<para>Delete the default zero-argument constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="644" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1cell_1ace738446249e6f795ae7e861638dc20e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::cell::cell</definition>
        <argsstring>(detail::cell_impl *d)</argsstring>
        <name>cell</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1cell__impl" kindref="compound">detail::cell_impl</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Private constructor to create a cell from its implementation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="649" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp" bodystart="195" bodyend="198"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a unit of data in a worksheet at a specific coordinate and its associated properties. </para>
    </briefdescription>
    <detaileddescription>
<para>Properties of interest include style, type, value, and address. The Cell class is required to know its value and type, display options, and any other features of an Excel cell.Utilities for referencing cells using Excel&apos;s &apos;A1&apos; column/row nomenclature are also provided. </para>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" line="83" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/cell/cell.hpp" bodystart="84" bodyend="655"/>
    <listofallmembers>
      <member refid="classxlnt_1_1cell_1ae0eb9bbfa7ebcd3cc62c84f29fdb1a76" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>alignment</name></member>
      <member refid="classxlnt_1_1cell_1a5bb316e1085b8d0b2e3c1c2d5af222f7" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>alignment</name></member>
      <member refid="classxlnt_1_1cell_1ab9905e42246619418ccc9d54492eba7b" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>anchor</name></member>
      <member refid="classxlnt_1_1cell_1ab081cc6a30847fe3a55ba9793b8e4e74" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>base_date</name></member>
      <member refid="classxlnt_1_1cell_1a50ef586b7e00088b5c58fc5a81ebc5ce" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>border</name></member>
      <member refid="classxlnt_1_1cell_1a8a76847b5e342344b6cfd36245b9a4d4" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>border</name></member>
      <member refid="classxlnt_1_1cell_1ae68911d378fe56f5072274b9c33d3fbd" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>cell</name></member>
      <member refid="classxlnt_1_1cell_1a34420f0467190912c1934ff8552150e9" prot="private" virt="non-virtual"><scope>xlnt::cell</scope><name>cell</name></member>
      <member refid="classxlnt_1_1cell_1ace738446249e6f795ae7e861638dc20e" prot="private" virt="non-virtual"><scope>xlnt::cell</scope><name>cell</name></member>
      <member refid="classxlnt_1_1cell_1acd23530085a7c0bd5f4637a555cd1cbe" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>check_string</name></member>
      <member refid="classxlnt_1_1cell_1a408755a29c60e1710372d25038278dd4" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>clear_comment</name></member>
      <member refid="classxlnt_1_1cell_1a05271dc81c862eb36278b54f984439a0" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>clear_format</name></member>
      <member refid="classxlnt_1_1cell_1aa17f51e47e21bab97f4ef639b1fa3353" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>clear_formula</name></member>
      <member refid="classxlnt_1_1cell_1a35e6af229185a1e491752a719aed4c8b" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>clear_style</name></member>
      <member refid="classxlnt_1_1cell_1a6ca577336de6b92b9820a30d35547a16" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>clear_value</name></member>
      <member refid="classxlnt_1_1cell_1ad24f50cc05ad1c32cb231533e2db6b84" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>column</name></member>
      <member refid="classxlnt_1_1cell_1a017794c401ceec5fc8bb7560e63d399d" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>column_index</name></member>
      <member refid="classxlnt_1_1cell_1a964ca78c47ee0118d25163a378853fb9" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>comment</name></member>
      <member refid="classxlnt_1_1cell_1a194ed5db9b5c8e2f7d7357248af66b3c" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>comment</name></member>
      <member refid="classxlnt_1_1cell_1a1f8879eebe026b38df7df467ac297e4c" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>comment</name></member>
      <member refid="classxlnt_1_1cell_1a1748295ff9acc8f5c7dabd8ea572e3bb" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>comment</name></member>
      <member refid="classxlnt_1_1cell_1a44a10e4c9b215005197e90f4cfc167d0" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>computed_alignment</name></member>
      <member refid="classxlnt_1_1cell_1a12c443d8cd32f83fff9c71c7e28c11fc" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>computed_border</name></member>
      <member refid="classxlnt_1_1cell_1ace43211f128b5a0f55030f8c05ed3f79" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>computed_fill</name></member>
      <member refid="classxlnt_1_1cell_1aad27aef85203a1bb41a6b985dda04b71" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>computed_font</name></member>
      <member refid="classxlnt_1_1cell_1ac0eddacef6382060cfc32c22fd5a7355" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>computed_number_format</name></member>
      <member refid="classxlnt_1_1cell_1a6b381b37f07a77e76d644b25c0d065d4" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>computed_protection</name></member>
      <member refid="classxlnt_1_1cell_1a64fcf20815e6416bd034bebcec208b9f" prot="private" virt="non-virtual"><scope>xlnt::cell</scope><name>d_</name></member>
      <member refid="classxlnt_1_1cell_1ad41a2e3eb44b7e32ea0934ccc5446f68" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>data_type</name></member>
      <member refid="classxlnt_1_1cell_1a19157c5799ea724db4a3fcb10b852ec1" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>data_type</name></member>
      <member refid="classxlnt_1_1cell_1a03a1960160d6e8d508d55cdf5d5aa15a" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>detail::cell_impl</name></member>
      <member refid="classxlnt_1_1cell_1a5c27ff96f65a231e21871a228cbaf740" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>detail::xlsx_consumer</name></member>
      <member refid="classxlnt_1_1cell_1aeaa1b2a5f3d37ddb4b8ca1ebaab144f3" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>detail::xlsx_producer</name></member>
      <member refid="classxlnt_1_1cell_1aa12568f71475cebf23aceb97b83273a4" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>error</name></member>
      <member refid="classxlnt_1_1cell_1a645651a217d2da307f97b9c11743a00d" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>error</name></member>
      <member refid="classxlnt_1_1cell_1a36cc29dac8046caeac23b602bc3a1d51" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>error_codes</name></member>
      <member refid="classxlnt_1_1cell_1ae38211ddc3aa8e97cbfbaacd5980d5e2" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>fill</name></member>
      <member refid="classxlnt_1_1cell_1a8f5192f1ed23883920e0093444ee464c" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>fill</name></member>
      <member refid="classxlnt_1_1cell_1a6a412716ca76da72ec3906eba6d28aa0" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>font</name></member>
      <member refid="classxlnt_1_1cell_1a6b8e726a7b16e50763e966521ac07583" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>font</name></member>
      <member refid="classxlnt_1_1cell_1aa75f1990f41d6d1b6f87918b1492ae6a" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>format</name></member>
      <member refid="classxlnt_1_1cell_1a304510f70e88e8c4f3a2a24c37c489da" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>format</name></member>
      <member refid="classxlnt_1_1cell_1aff964405ba8223edfd826ca46d89cc12" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>formula</name></member>
      <member refid="classxlnt_1_1cell_1ab92332bdae0340d44869ba3d8f832c37" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>formula</name></member>
      <member refid="classxlnt_1_1cell_1a15f41aae50aa385ad8d919a6fbf72d78" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>garbage_collectible</name></member>
      <member refid="classxlnt_1_1cell_1aed816bd54ecd903661e455e51611d78e" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>has_comment</name></member>
      <member refid="classxlnt_1_1cell_1a2a1cb642a98314cba30ccd23d44d158b" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>has_format</name></member>
      <member refid="classxlnt_1_1cell_1a45d43fff14aec3eebf2d7622ed9c9af3" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>has_formula</name></member>
      <member refid="classxlnt_1_1cell_1a8f8406a91f1a45fa49392bf3900a58af" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>has_hyperlink</name></member>
      <member refid="classxlnt_1_1cell_1ae3be365cd7ae0343d7cc70e25d573000" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>has_style</name></member>
      <member refid="classxlnt_1_1cell_1ad97097919f2c8d8731b2a69b6f837806" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>has_value</name></member>
      <member refid="classxlnt_1_1cell_1ad52ad5554757d727bd151e6e0847b418" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>height</name></member>
      <member refid="classxlnt_1_1cell_1a6c4e9fcdccd12bfa2a51531a6c69ed3d" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>hyperlink</name></member>
      <member refid="classxlnt_1_1cell_1aada130e6847d32ff24ccdb0c2914e567" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>hyperlink</name></member>
      <member refid="classxlnt_1_1cell_1a95c6180b7138f2de90d2bceeb64fc414" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>hyperlink</name></member>
      <member refid="classxlnt_1_1cell_1ab37b7d9927596e4f74251e2e66b53197" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>hyperlink</name></member>
      <member refid="classxlnt_1_1cell_1a3d2f3a9977020883ce088e30037c1af9" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>is_date</name></member>
      <member refid="classxlnt_1_1cell_1aaa1d2e42bda76c780031b22b6f0d65bf" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>is_merged</name></member>
      <member refid="classxlnt_1_1cell_1a4c659baf4eb9d8b5c410a28f18fe9639" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>merged</name></member>
      <member refid="classxlnt_1_1cell_1a2f70a3ee9b0644ff47efb7bb5b87cb38" prot="private" virt="non-virtual"><scope>xlnt::cell</scope><name>modifiable_format</name></member>
      <member refid="classxlnt_1_1cell_1a48781230fa419e7476d3f8e5d31e0ce5" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>number_format</name></member>
      <member refid="classxlnt_1_1cell_1a8414e8ee56aceb5d7dee1030c6278ace" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>number_format</name></member>
      <member refid="classxlnt_1_1cell_1aac3b7ae6981db3d944a4ee6d7aab6cfe" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>offset</name></member>
      <member refid="classxlnt_1_1cell_1a0f03bc81cb3a176de11dbede267b6379" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>operator!=</name></member>
      <member refid="classxlnt_1_1cell_1ac887d0f3c09db3356c588cc83e6d4a59" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>operator=</name></member>
      <member refid="classxlnt_1_1cell_1a6f16b55e52e20312150303ac842a89d1" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>operator==</name></member>
      <member refid="classxlnt_1_1cell_1acfe7b4e42a96807b7f0195a2bcdd8909" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>phonetics_visible</name></member>
      <member refid="classxlnt_1_1cell_1a3885a1e6d597a339394416e9560fb9dc" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>protection</name></member>
      <member refid="classxlnt_1_1cell_1ab5cf761d67c2d0246d3c2a50c67525d0" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>protection</name></member>
      <member refid="classxlnt_1_1cell_1ac03ebad679cd76a97f60c66ee82751f8" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>reference</name></member>
      <member refid="classxlnt_1_1cell_1a97138f1360c3eed05feeccd338dc773d" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>row</name></member>
      <member refid="classxlnt_1_1cell_1a5f4648ceda902ce86e5458e2303dc791" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>show_phonetics</name></member>
      <member refid="classxlnt_1_1cell_1acbae7dc1ff8c3f97bc43a63aff4015d5" prot="private" virt="non-virtual"><scope>xlnt::cell</scope><name>style</name></member>
      <member refid="classxlnt_1_1cell_1af42d85dad3ef6a495e0610854dd0fe92" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>style</name></member>
      <member refid="classxlnt_1_1cell_1ae5d7d5f363704389d4da9cd651bbd2d8" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>style</name></member>
      <member refid="classxlnt_1_1cell_1a3563a972df331c60e3b626c4d7b0e4d3" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>style</name></member>
      <member refid="classxlnt_1_1cell_1a8d23e41acba4e34b5f6925f0133cfff4" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>style</name></member>
      <member refid="classxlnt_1_1cell_1a7a51abb90f9e716f242512a9f53cf09a" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>to_string</name></member>
      <member refid="classxlnt_1_1cell_1a982e2b7d6cba0829f1f77631840f957e" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>type</name></member>
      <member refid="classxlnt_1_1cell_1a1e034f21e14e3eebe8d4059917537e13" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a35e1ec4101a5e028502cc1c5b9b13334" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1ab570baa69a6377c21af291889b34d101" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1ac85da6a8e3f3a268c85b2309e12becd6" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a8da11cdd92503ebe8af9b8576844cbf0" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1af97cd39019d072497d9de6d42863547e" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1ac542a0780736254dfd5fdb03a90cec27" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a652a687612d31185cd7a3daf031235e5" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a7021477ef98c344d16db7bfac16d20fa" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a4fc3503df6e1a25186a31de5660fd928" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a848bb11dbf23a135d19dcc505be9ff17" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a7a4f448a18d5ac662e93b2b7acb2859a" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a2963b543d833316c03c377a2bf552855" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a072240b642971de572ce61b13409937d" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1add47fd6aef8b98b2a2f2716bf33c8df1" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a42876d415047f10c8eea4775e8decbe3" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a563c707c4687b87823f286d434455b3c" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a3d21c11927e92be6fde589c41081d74b" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1aad0a900ac7604ea93d921a24b7e72126" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a176ae426b180122a1441d8c7504ebf90" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a85462f8d19fc5a28d56ac8834410f1c4" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a1f6ae422a3e71c0b7313712522376e5f" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1ad34a492269e6474ec643b73dc0f92363" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a9e051afb06bec2c548e20e1ca113b871" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a821652b9ed2f24d65cd309dd24cc45e7" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a94337f883223bf2d3cd76c3f2cb14ad4" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a472419dc37b22c7b0164d2df57298d86" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1ab04cdd9933d52dfa9b82b71478f78951" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a7a802fae697ada352d8336d8ad420049" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a0d578f649743c58152b789e7485e4b4d" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>value</name></member>
      <member refid="classxlnt_1_1cell_1a00f2362faaf5b400ec531cb21a867f29" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>width</name></member>
      <member refid="classxlnt_1_1cell_1a26d7bb8fe41474c36350c0ce68574ab5" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1cell_1a7c9f132281c98286fa30337bd9d2f8ca" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1cell_1aa217f89c077f57ff91595b37909b58b1" prot="private" virt="non-virtual"><scope>xlnt::cell</scope><name>worksheet</name></member>
      <member refid="classxlnt_1_1cell_1a36c0be4d8df81b2664ffe2b4084a1409" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>worksheet</name></member>
      <member refid="classxlnt_1_1cell_1a89d340cd9baf065f46ecfb03bf9e2a5f" prot="public" virt="non-virtual"><scope>xlnt::cell</scope><name>worksheet</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
