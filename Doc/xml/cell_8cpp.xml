<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="cell_8cpp" kind="file" language="C++">
    <compoundname>cell.cpp</compoundname>
    <includes local="no">algorithm</includes>
    <includes local="no">cmath</includes>
    <includes local="no">sstream</includes>
    <includes refid="cell_8hpp" local="no">xlnt/cell/cell.hpp</includes>
    <includes refid="cell__reference_8hpp" local="no">xlnt/cell/cell_reference.hpp</includes>
    <includes refid="comment_8hpp" local="no">xlnt/cell/comment.hpp</includes>
    <includes refid="hyperlink_8hpp" local="no">xlnt/cell/hyperlink.hpp</includes>
    <includes refid="rich__text_8hpp" local="no">xlnt/cell/rich_text.hpp</includes>
    <includes refid="manifest_8hpp" local="no">xlnt/packaging/manifest.hpp</includes>
    <includes refid="relationship_8hpp" local="no">xlnt/packaging/relationship.hpp</includes>
    <includes refid="alignment_8hpp" local="no">xlnt/styles/alignment.hpp</includes>
    <includes refid="border_8hpp" local="no">xlnt/styles/border.hpp</includes>
    <includes refid="color_8hpp" local="no">xlnt/styles/color.hpp</includes>
    <includes refid="fill_8hpp" local="no">xlnt/styles/fill.hpp</includes>
    <includes refid="font_8hpp" local="no">xlnt/styles/font.hpp</includes>
    <includes refid="format_8hpp" local="no">xlnt/styles/format.hpp</includes>
    <includes refid="number__format_8hpp" local="no">xlnt/styles/number_format.hpp</includes>
    <includes refid="protection_8hpp" local="no">xlnt/styles/protection.hpp</includes>
    <includes refid="style_8hpp" local="no">xlnt/styles/style.hpp</includes>
    <includes refid="date_8hpp" local="no">xlnt/utils/date.hpp</includes>
    <includes refid="datetime_8hpp" local="no">xlnt/utils/datetime.hpp</includes>
    <includes refid="exceptions_8hpp" local="no">xlnt/utils/exceptions.hpp</includes>
    <includes refid="time_8hpp" local="no">xlnt/utils/time.hpp</includes>
    <includes refid="timedelta_8hpp" local="no">xlnt/utils/timedelta.hpp</includes>
    <includes refid="workbook_8hpp" local="no">xlnt/workbook/workbook.hpp</includes>
    <includes refid="column__properties_8hpp" local="no">xlnt/worksheet/column_properties.hpp</includes>
    <includes refid="phonetic__pr_8hpp" local="no">xlnt/worksheet/phonetic_pr.hpp</includes>
    <includes refid="row__properties_8hpp" local="no">xlnt/worksheet/row_properties.hpp</includes>
    <includes refid="worksheet_8hpp" local="no">xlnt/worksheet/worksheet.hpp</includes>
    <includes refid="cell__impl_8hpp" local="no">detail/implementations/cell_impl.hpp</includes>
    <includes refid="format__impl_8hpp" local="no">detail/implementations/format_impl.hpp</includes>
    <includes refid="hyperlink__impl_8hpp" local="no">detail/implementations/hyperlink_impl.hpp</includes>
    <includes refid="stylesheet_8hpp" local="no">detail/implementations/stylesheet.hpp</includes>
    <includes refid="worksheet__impl_8hpp" local="no">detail/implementations/worksheet_impl.hpp</includes>
    <incdepgraph>
      <node id="68">
        <label>list</label>
      </node>
      <node id="76">
        <label>xlnt/workbook/named_range.hpp</label>
        <link refid="named__range_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>xlnt/utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>xlnt/worksheet/column_properties.hpp</label>
        <link refid="column__properties_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>xlnt/xlnt_config.hpp</label>
        <link refid="xlnt__config_8hpp"/>
      </node>
      <node id="41">
        <label>functional</label>
      </node>
      <node id="82">
        <label>xlnt/worksheet/major_order.hpp</label>
        <link refid="major__order_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>detail/implementations/stylesheet.hpp</label>
        <link refid="stylesheet_8hpp"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>limits</label>
      </node>
      <node id="27">
        <label>xlnt/worksheet/phonetic_pr.hpp</label>
        <link refid="phonetic__pr_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>iterator</label>
      </node>
      <node id="51">
        <label>xlnt/utils/timedelta.hpp</label>
        <link refid="timedelta_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cstdint</label>
      </node>
      <node id="57">
        <label>xlnt/worksheet/worksheet.hpp</label>
        <link refid="worksheet_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>xlnt/cell/phonetic_run.hpp</label>
        <link refid="phonetic__run_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>detail/implementations/conditional_format_impl.hpp</label>
        <link refid="conditional__format__impl_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="80">
        <label>xlnt/worksheet/cell_vector.hpp</label>
        <link refid="cell__vector_8hpp"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>xlnt/utils/numeric.hpp</label>
        <link refid="numeric_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>xlnt/cell/cell_type.hpp</label>
        <link refid="cell__type_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>xlnt/worksheet/range_iterator.hpp</label>
        <link refid="range__iterator_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="24">
        <label>cassert</label>
      </node>
      <node id="22">
        <label>stdexcept</label>
      </node>
      <node id="11">
        <label>xlnt/cell/index_types.hpp</label>
        <link refid="index__types_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="54">
        <label>map</label>
      </node>
      <node id="79">
        <label>xlnt/worksheet/range.hpp</label>
        <link refid="range_8hpp"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>xlnt/cell/rich_text.hpp</label>
        <link refid="rich__text_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>xlnt/styles/border.hpp</label>
        <link refid="border_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>xlnt/styles/color.hpp</label>
        <link refid="color_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>xlnt/worksheet/header_footer.hpp</label>
        <link refid="header__footer_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>xlnt/drawing/spreadsheet_drawing.hpp</label>
        <link refid="spreadsheet__drawing_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>ostream</label>
      </node>
      <node id="20">
        <label>xlnt/utils/optional.hpp</label>
        <link refid="optional_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>detail/implementations/hyperlink_impl.hpp</label>
        <link refid="hyperlink__impl_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>xlnt/worksheet/page_margins.hpp</label>
        <link refid="page__margins_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>xlnt/workbook/workbook.hpp</label>
        <link refid="workbook_8hpp"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>detail/implementations/worksheet_impl.hpp</label>
        <link refid="worksheet__impl_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>xlnt/worksheet/pane.hpp</label>
        <link refid="pane_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>xlnt/worksheet/sheet_format_properties.hpp</label>
        <link refid="sheet__format__properties_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>xlnt/worksheet/selection.hpp</label>
        <link refid="selection_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>xlnt/packaging/uri.hpp</label>
        <link refid="uri_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>xlnt/cell/cell.hpp</label>
        <link refid="cell_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>xlnt/utils/datetime.hpp</label>
        <link refid="datetime_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>xlnt/utils/date.hpp</label>
        <link refid="date_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>detail/implementations/style_impl.hpp</label>
        <link refid="style__impl_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>tuple</label>
      </node>
      <node id="33">
        <label>xlnt/cell/hyperlink.hpp</label>
        <link refid="hyperlink_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>xlnt/utils/scoped_enum_hash.hpp</label>
        <link refid="scoped__enum__hash_8hpp"/>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
      <node id="70">
        <label>xlnt/styles/conditional_format.hpp</label>
        <link refid="conditional__format_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>xlnt/worksheet/page_setup.hpp</label>
        <link refid="page__setup_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>utility</label>
      </node>
      <node id="19">
        <label>array</label>
      </node>
      <node id="4">
        <label>sstream</label>
      </node>
      <node id="86">
        <label>xlnt/worksheet/sheet_pr.hpp</label>
        <link refid="sheet__pr_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>xlnt/styles/style.hpp</label>
        <link refid="style_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp</label>
        <link refid="cell_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>xlnt/styles/font.hpp</label>
        <link refid="font_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>xlnt/worksheet/row_properties.hpp</label>
        <link refid="row__properties_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>cstddef</label>
      </node>
      <node id="48">
        <label>xlnt/utils/calendar.hpp</label>
        <link refid="calendar_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>xlnt/cell/rich_text_run.hpp</label>
        <link refid="rich__text__run_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>unordered_map</label>
      </node>
      <node id="75">
        <label>xlnt/packaging/ext_list.hpp</label>
        <link refid="ext__list_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>xlnt/styles/protection.hpp</label>
        <link refid="protection_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>detail/implementations/format_impl.hpp</label>
        <link refid="format__impl_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>xlnt/styles/fill.hpp</label>
        <link refid="fill_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>xlnt/worksheet/range_reference.hpp</label>
        <link refid="range__reference_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>xlnt/worksheet/print_options.hpp</label>
        <link refid="print__options_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>xlnt/styles/number_format.hpp</label>
        <link refid="number__format_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>detail/implementations/cell_impl.hpp</label>
        <link refid="cell__impl_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>xlnt/styles/alignment.hpp</label>
        <link refid="alignment_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>xlnt/workbook/worksheet_iterator.hpp</label>
        <link refid="worksheet__iterator_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>xlnt/cell/cell_reference.hpp</label>
        <link refid="cell__reference_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>xlnt/utils/time.hpp</label>
        <link refid="time_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>xlnt/worksheet/sheet_view.hpp</label>
        <link refid="sheet__view_8hpp"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>xlnt/styles/format.hpp</label>
        <link refid="format_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>type_traits</label>
      </node>
      <node id="35">
        <label>xlnt/packaging/relationship.hpp</label>
        <link refid="relationship_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>algorithm</label>
      </node>
      <node id="34">
        <label>xlnt/packaging/manifest.hpp</label>
        <link refid="manifest_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>xlnt/utils/path.hpp</label>
        <link refid="path_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
      <node id="32">
        <label>xlnt/cell/comment.hpp</label>
        <link refid="comment_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>xlnt/worksheet/cell_iterator.hpp</label>
        <link refid="cell__iterator_8hpp"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacexlnt">xlnt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2020<sp/>Thomas<sp/>Fussell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2010-2015<sp/>openpyxl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>WRISING<sp/>FROM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@license:<sp/>http://www.opensource.org/licenses/mit-license.php</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@author:<sp/>see<sp/>AUTHORS<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cell_8hpp" kindref="compound">xlnt/cell/cell.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cell__reference_8hpp" kindref="compound">xlnt/cell/cell_reference.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="comment_8hpp" kindref="compound">xlnt/cell/comment.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hyperlink_8hpp" kindref="compound">xlnt/cell/hyperlink.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="rich__text_8hpp" kindref="compound">xlnt/cell/rich_text.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="manifest_8hpp" kindref="compound">xlnt/packaging/manifest.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="relationship_8hpp" kindref="compound">xlnt/packaging/relationship.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="alignment_8hpp" kindref="compound">xlnt/styles/alignment.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="border_8hpp" kindref="compound">xlnt/styles/border.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="color_8hpp" kindref="compound">xlnt/styles/color.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fill_8hpp" kindref="compound">xlnt/styles/fill.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="font_8hpp" kindref="compound">xlnt/styles/font.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="format_8hpp" kindref="compound">xlnt/styles/format.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="number__format_8hpp" kindref="compound">xlnt/styles/number_format.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="protection_8hpp" kindref="compound">xlnt/styles/protection.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="style_8hpp" kindref="compound">xlnt/styles/style.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="date_8hpp" kindref="compound">xlnt/utils/date.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="datetime_8hpp" kindref="compound">xlnt/utils/datetime.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="exceptions_8hpp" kindref="compound">xlnt/utils/exceptions.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="time_8hpp" kindref="compound">xlnt/utils/time.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="timedelta_8hpp" kindref="compound">xlnt/utils/timedelta.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="workbook_8hpp" kindref="compound">xlnt/workbook/workbook.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="column__properties_8hpp" kindref="compound">xlnt/worksheet/column_properties.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="phonetic__pr_8hpp" kindref="compound">xlnt/worksheet/phonetic_pr.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="row__properties_8hpp" kindref="compound">xlnt/worksheet/row_properties.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="worksheet_8hpp" kindref="compound">xlnt/worksheet/worksheet.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="cell__impl_8hpp" kindref="compound">detail/implementations/cell_impl.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="format__impl_8hpp" kindref="compound">detail/implementations/format_impl.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="hyperlink__impl_8hpp" kindref="compound">detail/implementations/hyperlink_impl.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stylesheet_8hpp" kindref="compound">detail/implementations/stylesheet.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="worksheet__impl_8hpp" kindref="compound">detail/implementations/worksheet_impl.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">std::pair&lt;bool,<sp/>double&gt;<sp/>cast_numeric(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;s)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>str_end<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>std::strtod(s.c_str(),<sp/>&amp;str_end);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(str_end<sp/>!=<sp/>s.c_str()<sp/>+<sp/>s.size())</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>std::make_pair(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="namespacestd" kindref="compound">std</ref>::make_pair(true,<sp/>result);</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">std::pair&lt;bool,<sp/>double&gt;<sp/>cast_percentage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;s)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.back()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">number</ref><sp/>=<sp/>cast_numeric(s.substr(0,<sp/>s.size()<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">number</ref>.first)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">number</ref>.second<sp/>/<sp/>100};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0};</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">std::pair&lt;bool,<sp/>xlnt::time&gt;<sp/>cast_time(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;s)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structxlnt_1_1time" kindref="compound">xlnt::time</ref><sp/>result;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::string&gt;<sp/>time_components;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref><sp/>prev<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>colon_index<sp/>=<sp/>s.find(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(colon_index<sp/>!=<sp/>std::string::npos)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_components.push_back(s.substr(prev,<sp/>colon_index<sp/>-<sp/>prev));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev<sp/>=<sp/>colon_index<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colon_index<sp/>=<sp/>s.find(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">,<sp/>colon_index<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>time_components.push_back(s.substr(prev,<sp/>colon_index<sp/>-<sp/>prev));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_components.size()<sp/>&lt;<sp/>2<sp/>||<sp/>time_components.size()<sp/>&gt;<sp/>3)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>result};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>numeric_components;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>component<sp/>:<sp/>time_components)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(component.empty()<sp/>||<sp/>(component.substr(0,<sp/>component.find(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)).size()<sp/>&gt;<sp/>2))</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>result};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="namespacemkdoc_1a85ae95dfe8536ee978dcacf1f5dcfe00" kindref="member">d</ref><sp/>:<sp/>component)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="namespacemkdoc_1a85ae95dfe8536ee978dcacf1f5dcfe00" kindref="member">d</ref><sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="namespacemkdoc_1a85ae95dfe8536ee978dcacf1f5dcfe00" kindref="member">d</ref><sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/><ref refid="namespacemkdoc_1a85ae95dfe8536ee978dcacf1f5dcfe00" kindref="member">d</ref><sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>result};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>without_leading_zero<sp/>=<sp/>component.front()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>?<sp/>component.substr(1)<sp/>:<sp/>component;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>numeric<sp/>=<sp/>std::stod(without_leading_zero);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numeric_components.push_back(numeric);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structxlnt_1_1time_1a89ad1dbabe8c2feb3ead88bbc9ac8a05" kindref="member">hour</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(numeric_components[0]);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structxlnt_1_1time_1ad6fe4644a42f276c76be6039cc1ad6fe" kindref="member">minute</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(numeric_components[1]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::fabs(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(result.<ref refid="structxlnt_1_1time_1ad6fe4644a42f276c76be6039cc1ad6fe" kindref="member">minute</ref>)<sp/>-<sp/>numeric_components[1])<sp/>&gt;<sp/>std::numeric_limits&lt;double&gt;::epsilon())</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structxlnt_1_1time_1ad6fe4644a42f276c76be6039cc1ad6fe" kindref="member">minute</ref><sp/>=<sp/>result.<ref refid="structxlnt_1_1time_1a89ad1dbabe8c2feb3ead88bbc9ac8a05" kindref="member">hour</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structxlnt_1_1time_1a89ad1dbabe8c2feb3ead88bbc9ac8a05" kindref="member">hour</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structxlnt_1_1time_1aeeb2afa02d19c7afc315322423740a29" kindref="member">second</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(numeric_components[1]);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structxlnt_1_1time_1ae81bf67138dce324e5595bcfc99d6afb" kindref="member">microsecond</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((numeric_components[1]<sp/>-<sp/>result.<ref refid="structxlnt_1_1time_1aeeb2afa02d19c7afc315322423740a29" kindref="member">second</ref>)<sp/>*<sp/>1E6);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numeric_components.size()<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structxlnt_1_1time_1aeeb2afa02d19c7afc315322423740a29" kindref="member">second</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(numeric_components[2]);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result.<ref refid="structxlnt_1_1time_1ae81bf67138dce324e5595bcfc99d6afb" kindref="member">microsecond</ref><sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((numeric_components[2]<sp/>-<sp/>result.<ref refid="structxlnt_1_1time_1aeeb2afa02d19c7afc315322423740a29" kindref="member">second</ref>)<sp/>*<sp/>1E6);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>result};</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacexlnt" kindref="compound">xlnt</ref><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>int&gt;<sp/>&amp;<ref refid="classxlnt_1_1cell_1a36cc29dac8046caeac23b602bc3a1d51" kindref="member">cell::error_codes</ref>()</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>*codes<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>int&gt;{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;#NULL!&quot;</highlight><highlight class="normal">,<sp/>0},</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;#DIV/0!&quot;</highlight><highlight class="normal">,<sp/>1},</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;#VALUE!&quot;</highlight><highlight class="normal">,<sp/>2},</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;#REF!&quot;</highlight><highlight class="normal">,<sp/>3},</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;#NAME?&quot;</highlight><highlight class="normal">,<sp/>4},</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;#NUM!&quot;</highlight><highlight class="normal">,<sp/>5},</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;#N/A!&quot;</highlight><highlight class="normal">,<sp/>6}};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*codes;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">std::string<sp/><ref refid="classxlnt_1_1cell_1acd23530085a7c0bd5f4637a555cd1cbe" kindref="member">cell::check_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;to_check)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>can<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>s<sp/>=<sp/>to_check;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s.size()<sp/>&gt;<sp/>32767)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>s.substr(0,<sp/>32767);<sp/></highlight><highlight class="comment">//<sp/>max<sp/>string<sp/>length<sp/>in<sp/>Excel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c<sp/>:<sp/>s)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>(c<sp/>&lt;=<sp/>8<sp/>||<sp/>c<sp/>==<sp/>11<sp/>||<sp/>c<sp/>==<sp/>12<sp/>||<sp/>(c<sp/>&gt;=<sp/>14<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>31)))</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>illegal_character(c);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">cell::cell(detail::cell_impl<sp/>*<ref refid="namespacemkdoc_1a85ae95dfe8536ee978dcacf1f5dcfe00" kindref="member">d</ref>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>d_(<ref refid="namespacemkdoc_1a85ae95dfe8536ee978dcacf1f5dcfe00" kindref="member">d</ref>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell::garbage_collectible()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="201"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;is_garbage_collectible();</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(std::nullptr_t)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>clear_value();</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>boolean_value)</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1a7c6368b321bd9acd0149b030bb8275ed" kindref="member">type::boolean</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/>boolean_value<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int_value)</highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(int_value);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">type::number</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int_value)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(int_value);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">type::number</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int_value)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(int_value);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">type::number</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int_value)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(int_value);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">type::number</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>float_value)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(float_value);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">type::number</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>float_value)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(float_value);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">type::number</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;s)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>value(rich_text(check_string(s)));</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rich_text<sp/>&amp;text)</highlight></codeline>
<codeline lineno="258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>check_string(text.plain_text());</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1a03c1cffbb6f0fc9a6b979862c102d5a8" kindref="member">type::shared_string</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(workbook().add_shared_string(text));</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>value(std::string(c));</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cell<sp/>c)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/>c.d_-&gt;type_;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/>c.d_-&gt;value_numeric_;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_text_<sp/>=<sp/>c.d_-&gt;value_text_;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_<sp/>=<sp/>c.d_-&gt;hyperlink_;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;formula_<sp/>=<sp/>c.d_-&gt;formula_;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;format_<sp/>=<sp/>c.d_-&gt;format_;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="cell__type_8hpp_1ade6a701b82b93dfb7eae4e79cd3b18a6" kindref="member">date</ref><sp/>&amp;<ref refid="namespacemkdoc_1a85ae95dfe8536ee978dcacf1f5dcfe00" kindref="member">d</ref>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">type::number</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/><ref refid="namespacemkdoc_1a85ae95dfe8536ee978dcacf1f5dcfe00" kindref="member">d</ref>.to_number(base_date());</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>number_format(number_format::date_yyyymmdd2());</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>datetime<sp/>&amp;<ref refid="namespacemkdoc_1a85ae95dfe8536ee978dcacf1f5dcfe00" kindref="member">d</ref>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">type::number</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/><ref refid="namespacemkdoc_1a85ae95dfe8536ee978dcacf1f5dcfe00" kindref="member">d</ref>.to_number(base_date());</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>number_format(number_format::date_datetime());</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>time<sp/>&amp;t)</highlight></codeline>
<codeline lineno="295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">type::number</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/>t.to_number();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>number_format(number_format::date_time6());</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>timedelta<sp/>&amp;t)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">type::number</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/>t.to_number();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>number_format(<ref refid="classxlnt_1_1number__format" kindref="compound">xlnt::number_format</ref>(</highlight><highlight class="stringliteral">&quot;[hh]:mm:ss&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">cell::row</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="309"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;row_;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal">column_t<sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">cell::column</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="314"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;column_;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">column_t::index_t<sp/>cell::column_index()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="319"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;column_.index;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::merged(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>merged)</highlight></codeline>
<codeline lineno="324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;is_merged_<sp/>=<sp/>merged;</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell::is_merged()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="329"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;is_merged_;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell::phonetics_visible()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="334"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;phonetics_visible_;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::show_phonetics(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>phonetics)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;phonetics_visible_<sp/>=<sp/>phonetics;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell::is_date()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="344"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_type()<sp/>==<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">type::number</ref></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>has_format()</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>number_format().is_date_format();</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">cell_reference<sp/>cell::reference()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="351"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{d_-&gt;column_,<sp/>d_-&gt;row_};</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacexlnt_1a87898d966ebb2cf7326f2ef778daad96" kindref="member">cell::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cell<sp/>&amp;comparand)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="356"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_<sp/>==<sp/>comparand.d_;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacexlnt_1a427646713a34d6803c6338e09315c84e" kindref="member">cell::operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cell<sp/>&amp;comparand)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="361"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_<sp/>!=<sp/>comparand.d_;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal">cell<sp/>&amp;cell::operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cell<sp/>&amp;rhs)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">hyperlink</ref><sp/><ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">cell::hyperlink</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="368"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">xlnt::hyperlink</ref>(&amp;d_-&gt;hyperlink_.get());</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">cell::hyperlink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="namespacesetup_1afc13124aa5c0124e84e1d965e3f4b0fb" kindref="member">url</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;display)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacesetup_1afc13124aa5c0124e84e1d965e3f4b0fb" kindref="member">url</ref>.empty())</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_parameter();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ws<sp/>=<sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref>();</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;manifest<sp/>=<sp/>ws.workbook().manifest();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_<sp/>=<sp/>detail::hyperlink_impl();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>existing<sp/>relationships</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>relationships<sp/>=<sp/>manifest.relationships(ws.path(),<sp/><ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">relationship_type::hyperlink</ref>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>relation<sp/>=<sp/>std::find_if(relationships.cbegin(),<sp/>relationships.cend(),</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;<ref refid="namespacesetup_1afc13124aa5c0124e84e1d965e3f4b0fb" kindref="member">url</ref>](<ref refid="classxlnt_1_1relationship" kindref="compound">xlnt::relationship</ref><sp/>rel)<sp/>{<sp/>return<sp/>rel.target().path().string()<sp/>==<sp/>url;<sp/>});</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(relation<sp/>!=<sp/>relationships.end())</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_.get().relationship<sp/>=<sp/>*relation;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>register<sp/>a<sp/>new<sp/>relationship</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rel_id<sp/>=<sp/>manifest.register_relationship(</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uri(ws.path().string()),</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">relationship_type::hyperlink</ref>,</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uri(<ref refid="namespacesetup_1afc13124aa5c0124e84e1d965e3f4b0fb" kindref="member">url</ref>),</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target_mode::external);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>make<sp/>manifest::register_relationship<sp/>return<sp/>the<sp/>created<sp/>relationship<sp/>instead<sp/>of<sp/>rel<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_.get().relationship<sp/>=<sp/>manifest.relationship(ws.path(),<sp/>rel_id);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>value<sp/>is<sp/>already<sp/>present,<sp/>the<sp/>display<sp/>string<sp/>is<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_value())</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_.get().display.set(<ref refid="namespacexlnt_1_1detail_1a4a5416332c649035ad6503ea07a7d67f" kindref="member">to_string</ref>());</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_.get().display.set(display.empty()<sp/>?<sp/><ref refid="namespacesetup_1afc13124aa5c0124e84e1d965e3f4b0fb" kindref="member">url</ref><sp/>:<sp/>display);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value(<ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">hyperlink</ref>().display());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">cell::hyperlink</ref>(<ref refid="classxlnt_1_1cell" kindref="compound">xlnt::cell</ref><sp/>target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;display)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>should<sp/>this<sp/>computed<sp/>value<sp/>be<sp/>a<sp/>method<sp/>on<sp/>a<sp/>cell?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell_address<sp/>=<sp/>target.<ref refid="classxlnt_1_1cell_1aa217f89c077f57ff91595b37909b58b1" kindref="member">worksheet</ref>().title()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal"><sp/>+<sp/>target.<ref refid="classxlnt_1_1cell_1ac03ebad679cd76a97f60c66ee82751f8" kindref="member">reference</ref>().<ref refid="classxlnt_1_1cell__reference_1ac79e961a120faa927fb6d1e7827886ff" kindref="member">to_string</ref>();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_<sp/>=<sp/>detail::hyperlink_impl();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_.get().relationship<sp/>=<sp/><ref refid="classxlnt_1_1relationship" kindref="compound">xlnt::relationship</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">relationship_type::hyperlink</ref>,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uri(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>uri(cell_address),<sp/><ref refid="relationship_8hpp_1aefeaeef24c55ae50b43b27d4132fbe81" kindref="member">target_mode::internal</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>value<sp/>is<sp/>already<sp/>present,<sp/>the<sp/>display<sp/>string<sp/>is<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_value())</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_.get().display.set(<ref refid="namespacexlnt_1_1detail_1a4a5416332c649035ad6503ea07a7d67f" kindref="member">to_string</ref>());</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_.get().display.set(display.empty()<sp/>?<sp/>cell_address<sp/>:<sp/>display);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value(<ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">hyperlink</ref>().display());</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">cell::hyperlink</ref>(<ref refid="classxlnt_1_1range" kindref="compound">xlnt::range</ref><sp/>target,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;display)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>should<sp/>this<sp/>computed<sp/>value<sp/>be<sp/>a<sp/>method<sp/>on<sp/>a<sp/>cell?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>range_address<sp/>=<sp/>target.<ref refid="classxlnt_1_1range_1a92093cbdcc67ee7df5945921b5f76604" kindref="member">target_worksheet</ref>().<ref refid="classxlnt_1_1worksheet_1ad6b664b8fd51d88bb50b6aca9870ac07" kindref="member">title</ref>()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;!&quot;</highlight><highlight class="normal"><sp/>+<sp/>target.<ref refid="classxlnt_1_1range_1acfbd00b87a31b4401bd9af27133d38a9" kindref="member">reference</ref>().<ref refid="classxlnt_1_1range__reference_1affa8b84b395b54992604404d6c529f37" kindref="member">to_string</ref>();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_<sp/>=<sp/>detail::hyperlink_impl();</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_.get().relationship<sp/>=<sp/><ref refid="classxlnt_1_1relationship" kindref="compound">xlnt::relationship</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">relationship_type::hyperlink</ref>,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uri(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>uri(range_address),<sp/><ref refid="relationship_8hpp_1aefeaeef24c55ae50b43b27d4132fbe81" kindref="member">target_mode::internal</ref>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>value<sp/>is<sp/>already<sp/>present,<sp/>the<sp/>display<sp/>string<sp/>is<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_value())</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_.get().display.set(<ref refid="namespacexlnt_1_1detail_1a4a5416332c649035ad6503ea07a7d67f" kindref="member">to_string</ref>());</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;hyperlink_.get().display.set(display.empty()<sp/>?<sp/>range_address<sp/>:<sp/>display);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value(<ref refid="relationship_8hpp_1adc67274f3ca88eff539aa6df14574a9c" kindref="member">hyperlink</ref>().display());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::formula(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;formula)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formula.empty())</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clear_formula();</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formula[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;formula_<sp/>=<sp/>formula.substr(1);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;formula_<sp/>=<sp/>formula;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref>().register_calc_chain_in_manifest();</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell::has_formula()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="475"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;formula_.is_set();</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal">std::string<sp/>cell::formula()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="480"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;formula_.get();</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::clear_formula()</highlight></codeline>
<codeline lineno="485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_formula())</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;formula_.clear();</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref>().garbage_collect_formulae();</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal">std::string<sp/><ref refid="cell__type_8hpp_1af10dacfa214e2575bb2e0ee407c242e0" kindref="member">cell::error</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="494"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_-&gt;type_<sp/>!=<sp/><ref refid="cell__type_8hpp_1af10dacfa214e2575bb2e0ee407c242e0" kindref="member">type::error</ref>)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1exception" kindref="compound">xlnt::exception</ref>(</highlight><highlight class="stringliteral">&quot;called<sp/>error()<sp/>when<sp/>cell<sp/>type<sp/>is<sp/>not<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value&lt;std::string&gt;();</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cell__type_8hpp_1af10dacfa214e2575bb2e0ee407c242e0" kindref="member">cell::error</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="cell__type_8hpp_1af10dacfa214e2575bb2e0ee407c242e0" kindref="member">error</ref>)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="cell__type_8hpp_1af10dacfa214e2575bb2e0ee407c242e0" kindref="member">error</ref>.length()<sp/>==<sp/>0<sp/>||<sp/><ref refid="cell__type_8hpp_1af10dacfa214e2575bb2e0ee407c242e0" kindref="member">error</ref>[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_data_type();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_text_.plain_text(<ref refid="cell__type_8hpp_1af10dacfa214e2575bb2e0ee407c242e0" kindref="member">error</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af10dacfa214e2575bb2e0ee407c242e0" kindref="member">type::error</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal">cell<sp/>cell::offset(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>)</highlight></codeline>
<codeline lineno="514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref>().cell(<ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69cab8af13ea9c8fe890c9979a1fa8dbde22" kindref="member">reference</ref>().make_offset(<ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref>,<sp/><ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>));</highlight></codeline>
<codeline lineno="516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">cell::worksheet</ref>()</highlight></codeline>
<codeline lineno="519"><highlight class="normal">{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">xlnt::worksheet</ref>(d_-&gt;parent_);</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">cell::worksheet</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="524"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">xlnt::worksheet</ref>(d_-&gt;parent_);</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal">workbook<sp/>&amp;cell::workbook()</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref>().workbook();</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>workbook<sp/>&amp;cell::workbook()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="534"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref>().workbook();</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal">std::pair&lt;int,<sp/>int&gt;<sp/>cell::anchor()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="539"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="alignment_8hpp_1a58c76f848f15df202254c1daec468567" kindref="member">left</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(column_t<sp/>column_index<sp/>=<sp/>1;<sp/>column_index<sp/>&lt;=<sp/>d_-&gt;column_<sp/>-<sp/>1;<sp/>column_index++)</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="alignment_8hpp_1a58c76f848f15df202254c1daec468567" kindref="member">left</ref><sp/>+=<sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref>().column_width(column_index);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="alignment_8hpp_1a8aab264665f2085687d9eeca4c67a691" kindref="member">top</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacexlnt_1abd2bb61f1d4794b8affafb8957b151b6" kindref="member">row_t</ref><sp/>row_index<sp/>=<sp/>1;<sp/>row_index<sp/>&lt;=<sp/>d_-&gt;row_<sp/>-<sp/>1;<sp/>row_index++)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="alignment_8hpp_1a8aab264665f2085687d9eeca4c67a691" kindref="member">top</ref><sp/>+=<sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref>().row_height(row_index);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="alignment_8hpp_1a58c76f848f15df202254c1daec468567" kindref="member">left</ref>),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="alignment_8hpp_1a8aab264665f2085687d9eeca4c67a691" kindref="member">top</ref>)};</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><ref refid="namespacepybind11_1_1detail_1a2e27b6b0496dbceae6708f0526822bba" kindref="member">cell::type</ref><sp/>cell::data_type()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="558"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;type_;</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::data_type(<ref refid="namespacepybind11_1_1detail_1a2e27b6b0496dbceae6708f0526822bba" kindref="member">type</ref><sp/>t)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal">number_format<sp/>cell::computed_number_format()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="568"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1number__format" kindref="compound">xlnt::number_format</ref>();</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal">font<sp/>cell::computed_font()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="573"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1font" kindref="compound">xlnt::font</ref>();</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><ref refid="alignment_8hpp_1a23b3ecc690a716b53e9d0146b78d5ef2" kindref="member">fill</ref><sp/>cell::computed_fill()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="578"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="alignment_8hpp_1a23b3ecc690a716b53e9d0146b78d5ef2" kindref="member">xlnt::fill</ref>();</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal">border<sp/>cell::computed_border()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="583"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1border" kindref="compound">xlnt::border</ref>();</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal">alignment<sp/>cell::computed_alignment()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="588"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1alignment" kindref="compound">xlnt::alignment</ref>();</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal">protection<sp/>cell::computed_protection()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="593"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1protection" kindref="compound">xlnt::protection</ref>();</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::clear_value()</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;value_text_.clear();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1a7d665d9fa18a26df451d111b34afd89f" kindref="member">cell::type::empty</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/>clear_formula();</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="607"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;value_numeric_<sp/>!=<sp/>0.0;</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="613"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d_-&gt;value_numeric_);</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="619"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d_-&gt;value_numeric_);</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="625"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d_-&gt;value_numeric_);</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="631"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d_-&gt;value_numeric_);</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="637"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d_-&gt;value_numeric_);</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="643"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d_-&gt;value_numeric_);</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/>time<sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="649"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time::from_number(d_-&gt;value_numeric_);</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/>datetime<sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="655"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>datetime::from_number(d_-&gt;value_numeric_,<sp/>base_date());</highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/><ref refid="cell__type_8hpp_1ade6a701b82b93dfb7eae4e79cd3b18a6" kindref="member">date</ref><sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="661"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>date::from_number(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d_-&gt;value_numeric_),<sp/>base_date());</highlight></codeline>
<codeline lineno="663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/>timedelta<sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="667"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>timedelta::from_number(d_-&gt;value_numeric_);</highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::alignment(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>alignment<sp/>&amp;alignment_)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_format<sp/>=<sp/>has_format()<sp/>?<sp/>modifiable_format()<sp/>:<sp/>workbook().create_format();</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>format(new_format.alignment(alignment_,<sp/>optional&lt;bool&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::border(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>border<sp/>&amp;border_)</highlight></codeline>
<codeline lineno="678"><highlight class="normal">{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_format<sp/>=<sp/>has_format()<sp/>?<sp/>modifiable_format()<sp/>:<sp/>workbook().create_format();</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>format(new_format.border(border_,<sp/>optional&lt;bool&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="alignment_8hpp_1a23b3ecc690a716b53e9d0146b78d5ef2" kindref="member">cell::fill</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/><ref refid="alignment_8hpp_1a23b3ecc690a716b53e9d0146b78d5ef2" kindref="member">fill</ref><sp/>&amp;fill_)</highlight></codeline>
<codeline lineno="684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_format<sp/>=<sp/>has_format()<sp/>?<sp/>modifiable_format()<sp/>:<sp/>workbook().create_format();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>format(new_format.fill(fill_,<sp/>optional&lt;bool&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="687"><highlight class="normal">}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::font(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>font<sp/>&amp;font_)</highlight></codeline>
<codeline lineno="690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_format<sp/>=<sp/>has_format()<sp/>?<sp/>modifiable_format()<sp/>:<sp/>workbook().create_format();</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>format(new_format.font(font_,<sp/>optional&lt;bool&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::number_format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>number_format<sp/>&amp;number_format_)</highlight></codeline>
<codeline lineno="696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_format<sp/>=<sp/>has_format()<sp/>?<sp/>modifiable_format()<sp/>:<sp/>workbook().create_format();</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>format(new_format.number_format(number_format_,<sp/>optional&lt;bool&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::protection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>protection<sp/>&amp;protection_)</highlight></codeline>
<codeline lineno="702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_format<sp/>=<sp/>has_format()<sp/>?<sp/>modifiable_format()<sp/>:<sp/>workbook().create_format();</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>format(new_format.protection(protection_,<sp/>optional&lt;bool&gt;(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/>std::string<sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="709"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value&lt;rich_text&gt;().plain_text();</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/>rich_text<sp/>cell::value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="715"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_type()<sp/>==<sp/><ref refid="cell__type_8hpp_1a03c1cffbb6f0fc9a6b979862c102d5a8" kindref="member">cell::type::shared_string</ref>)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>workbook().shared_strings(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">std::size_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(d_-&gt;value_numeric_));</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;value_text_;</highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell::has_value()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="725"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;type_<sp/>!=<sp/><ref refid="cell__type_8hpp_1a7d665d9fa18a26df451d111b34afd89f" kindref="member">cell::type::empty</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal">std::string<sp/><ref refid="namespacexlnt_1_1detail_1a4a5416332c649035ad6503ea07a7d67f" kindref="member">cell::to_string</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="730"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nf<sp/>=<sp/>computed_number_format();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(data_type())</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cell__type_8hpp_1a7d665d9fa18a26df451d111b34afd89f" kindref="member">cell::type::empty</ref>:</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cell__type_8hpp_1ade6a701b82b93dfb7eae4e79cd3b18a6" kindref="member">cell::type::date</ref>:</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">cell::type::number</ref>:</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nf.format(value&lt;double&gt;(),<sp/>base_date());</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cell__type_8hpp_1ade86f823d72b30e1e5ce3a8cad28de87" kindref="member">cell::type::inline_string</ref>:</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cell__type_8hpp_1a03c1cffbb6f0fc9a6b979862c102d5a8" kindref="member">cell::type::shared_string</ref>:</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>cell::type::formula_string:</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cell__type_8hpp_1af10dacfa214e2575bb2e0ee407c242e0" kindref="member">cell::type::error</ref>:</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nf.format(value&lt;std::string&gt;());</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="cell__type_8hpp_1a7c6368b321bd9acd0149b030bb8275ed" kindref="member">cell::type::boolean</ref>:</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value&lt;double&gt;()<sp/>==<sp/>0.0<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;FALSE&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;TRUE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell::has_format()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="753"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;format_.is_set();</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::format(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>format<sp/>new_format)</highlight></codeline>
<codeline lineno="758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_format())</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format().d_-&gt;references<sp/>-=<sp/>format().d_-&gt;references<sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>++new_format.d_-&gt;references;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;format_<sp/>=<sp/>new_format.d_;</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal">calendar<sp/>cell::base_date()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="769"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>workbook().base_date();</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacexlnt_1a87898d966ebb2cf7326f2ef778daad96" kindref="member">operator==</ref>(std::nullptr_t,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cell<sp/>&amp;cell)</highlight></codeline>
<codeline lineno="774"><highlight class="normal">{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell.data_type()<sp/>==<sp/><ref refid="cell__type_8hpp_1a7d665d9fa18a26df451d111b34afd89f" kindref="member">cell::type::empty</ref>;</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacexlnt_1a87898d966ebb2cf7326f2ef778daad96" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cell<sp/>&amp;cell,<sp/>std::nullptr_t)</highlight></codeline>
<codeline lineno="779"><highlight class="normal">{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>==<sp/>cell;</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><ref refid="xlnt__config_8hpp_1ad97fc05b85eba23053616e2fc11f8267" kindref="member">XLNT_API</ref><sp/>std::ostream<sp/>&amp;<ref refid="namespacexlnt_1a51a9f54016ae86168addb7eea204212d" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;stream,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1cell" kindref="compound">xlnt::cell</ref><sp/>&amp;cell)</highlight></codeline>
<codeline lineno="784"><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stream<sp/>&lt;&lt;<sp/>cell.<ref refid="classxlnt_1_1cell_1a7a51abb90f9e716f242512a9f53cf09a" kindref="member">to_string</ref>();</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::value(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;value_string,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>infer_type)</highlight></codeline>
<codeline lineno="789"><highlight class="normal">{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>value(value_string);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!infer_type<sp/>||<sp/>value_string.empty())</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_string.front()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>value_string.size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formula(value_string);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_string.front()<sp/>==<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>value_string.size()<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cell__type_8hpp_1af10dacfa214e2575bb2e0ee407c242e0" kindref="member">error</ref>(value_string);</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>percentage<sp/>=<sp/>cast_percentage(value_string);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(percentage.first)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/>percentage.second;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">cell::type::number</ref>;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number_format(<ref refid="classxlnt_1_1number__format_1a58d6ee69884870f8cd5a63a2e760f3bf" kindref="member">xlnt::number_format::percentage</ref>());</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>time<sp/>=<sp/>cast_time(value_string);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time.first)</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">cell::type::number</ref>;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number_format(number_format::date_time6());</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/>time.second.to_number();</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>numeric<sp/>=<sp/>cast_numeric(value_string);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numeric.first)</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;value_numeric_<sp/>=<sp/>numeric.second;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;type_<sp/>=<sp/><ref refid="cell__type_8hpp_1af31813e2131200936cf54234db95808d" kindref="member">cell::type::number</ref>;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::clear_format()</highlight></codeline>
<codeline lineno="841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_-&gt;format_.is_set())</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format().d_-&gt;references<sp/>-=<sp/>format().d_-&gt;references<sp/>&gt;<sp/>0<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;format_.clear();</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::clear_style()</highlight></codeline>
<codeline lineno="850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_format())</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modifiable_format().clear_style();</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::style(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>style<sp/>&amp;new_style)</highlight></codeline>
<codeline lineno="858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_format<sp/>=<sp/>has_format()<sp/>?<sp/>format()<sp/>:<sp/>workbook().create_format();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>new_format.border(new_style.border());</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>new_format.fill(new_style.fill());</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>new_format.font(new_style.font());</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>new_format.number_format(new_style.number_format());</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>format(new_format.style(new_style));</highlight></codeline>
<codeline lineno="867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::style(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;style_name)</highlight></codeline>
<codeline lineno="870"><highlight class="normal">{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/>style(workbook().style(style_name));</highlight></codeline>
<codeline lineno="872"><highlight class="normal">}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal">style<sp/>cell::style()</highlight></codeline>
<codeline lineno="875"><highlight class="normal">{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_format()<sp/>||<sp/>!format().has_style())</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_attribute();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>format();</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f.style();</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>style<sp/>cell::style()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="887"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_format()<sp/>||<sp/>!format().has_style())</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_attribute();</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format().style();</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell::has_style()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="897"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>has_format()<sp/>&amp;&amp;<sp/>format().has_style();</highlight></codeline>
<codeline lineno="899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal">format<sp/>cell::modifiable_format()</highlight></codeline>
<codeline lineno="902"><highlight class="normal">{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d_-&gt;format_.is_set())</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_attribute();</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1format" kindref="compound">xlnt::format</ref>(d_-&gt;format_.get());</highlight></codeline>
<codeline lineno="909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>format<sp/>cell::format()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="912"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!d_-&gt;format_.is_set())</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>invalid_attribute();</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1format" kindref="compound">xlnt::format</ref>(d_-&gt;format_.get());</highlight></codeline>
<codeline lineno="919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal">alignment<sp/>cell::alignment()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="922"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format().alignment();</highlight></codeline>
<codeline lineno="924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal">border<sp/>cell::border()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="927"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format().border();</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><ref refid="alignment_8hpp_1a23b3ecc690a716b53e9d0146b78d5ef2" kindref="member">fill</ref><sp/><ref refid="alignment_8hpp_1a23b3ecc690a716b53e9d0146b78d5ef2" kindref="member">cell::fill</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="932"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format().fill();</highlight></codeline>
<codeline lineno="934"><highlight class="normal">}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal">font<sp/>cell::font()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="937"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format().font();</highlight></codeline>
<codeline lineno="939"><highlight class="normal">}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal">number_format<sp/>cell::number_format()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="942"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format().number_format();</highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal">protection<sp/>cell::protection()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="947"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format().protection();</highlight></codeline>
<codeline lineno="949"><highlight class="normal">}</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell::has_hyperlink()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="952"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;hyperlink_.is_set();</highlight></codeline>
<codeline lineno="954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="comment">//<sp/>comment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cell::has_comment()</highlight></codeline>
<codeline lineno="959"><highlight class="normal">{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_-&gt;comment_.is_set();</highlight></codeline>
<codeline lineno="961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::clear_comment()</highlight></codeline>
<codeline lineno="964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_comment())</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;parent_-&gt;comments_.erase(<ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69cab8af13ea9c8fe890c9979a1fa8dbde22" kindref="member">reference</ref>().<ref refid="namespacexlnt_1_1detail_1a4a5416332c649035ad6503ea07a7d67f" kindref="member">to_string</ref>());</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;comment_.clear();</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">comment<sp/>cell::comment()</highlight></codeline>
<codeline lineno="973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!has_comment())</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classxlnt_1_1exception" kindref="compound">xlnt::exception</ref>(</highlight><highlight class="stringliteral">&quot;cell<sp/>has<sp/>no<sp/>comment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*d_-&gt;comment_.get();</highlight></codeline>
<codeline lineno="980"><highlight class="normal">}</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::comment(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="namespacesetup_1a3a57a4772d418a06835249cbade0d86a" kindref="member">author</ref>)</highlight></codeline>
<codeline lineno="983"><highlight class="normal">{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>comment(<ref refid="classxlnt_1_1comment" kindref="compound">xlnt::comment</ref>(text,<sp/><ref refid="namespacesetup_1a3a57a4772d418a06835249cbade0d86a" kindref="member">author</ref>));</highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::comment(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>font<sp/>&amp;comment_font,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<ref refid="namespacesetup_1a3a57a4772d418a06835249cbade0d86a" kindref="member">author</ref>)</highlight></codeline>
<codeline lineno="988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/>comment(<ref refid="classxlnt_1_1comment" kindref="compound">xlnt::comment</ref>(<ref refid="classxlnt_1_1rich__text" kindref="compound">xlnt::rich_text</ref>(text,<sp/>comment_font),<sp/><ref refid="namespacesetup_1a3a57a4772d418a06835249cbade0d86a" kindref="member">author</ref>));</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cell::comment(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>comment<sp/>&amp;new_comment)</highlight></codeline>
<codeline lineno="993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_comment())</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*d_-&gt;comment_.get()<sp/>=<sp/>new_comment;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;parent_-&gt;comments_[<ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69cab8af13ea9c8fe890c9979a1fa8dbde22" kindref="member">reference</ref>().to_string()]<sp/>=<sp/>new_comment;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_-&gt;comment_.set(&amp;d_-&gt;parent_-&gt;comments_[<ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69cab8af13ea9c8fe890c9979a1fa8dbde22" kindref="member">reference</ref>().<ref refid="namespacexlnt_1_1detail_1a4a5416332c649035ad6503ea07a7d67f" kindref="member">to_string</ref>()]);</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>comment<sp/>5<sp/>pixels<sp/>down<sp/>and<sp/>5<sp/>pixels<sp/>right<sp/>of<sp/>the<sp/>top<sp/>right<sp/>corner<sp/>of<sp/>the<sp/>cell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>cell_position<sp/>=<sp/>anchor();</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>cell_position.first<sp/>+=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(width())<sp/>+<sp/>5;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>cell_position.second<sp/>+=<sp/>5;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>d_-&gt;comment_.get()-&gt;position(cell_position.first,<sp/>cell_position.second);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref>().register_comments_in_manifest();</highlight></codeline>
<codeline lineno="1012"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cell::width()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1015"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref>().column_width(<ref refid="major__order_8hpp_1ae78e6e11a40e6dba1bae097358f97d15" kindref="member">column</ref>());</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cell::height()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1020"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="relationship_8hpp_1a1e54ad17ecd001be15cf98e73c209774" kindref="member">worksheet</ref>().row_height(<ref refid="page__setup_8hpp_1ad42e2d1ad172100a2cd1338656cf0425" kindref="member">row</ref>());</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xlnt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/cell/cell.cpp"/>
  </compounddef>
</doxygen>
