<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="group__annotations" kind="group">
    <compoundname>annotations</compoundname>
    <title>Annotations</title>
    <innerclass refid="structpybind11_1_1is__method" prot="public">pybind11::is_method</innerclass>
    <innerclass refid="structpybind11_1_1is__operator" prot="public">pybind11::is_operator</innerclass>
    <innerclass refid="structpybind11_1_1scope" prot="public">pybind11::scope</innerclass>
    <innerclass refid="structpybind11_1_1doc" prot="public">pybind11::doc</innerclass>
    <innerclass refid="structpybind11_1_1name" prot="public">pybind11::name</innerclass>
    <innerclass refid="structpybind11_1_1sibling" prot="public">pybind11::sibling</innerclass>
    <innerclass refid="structpybind11_1_1base" prot="public">pybind11::base</innerclass>
    <innerclass refid="structpybind11_1_1keep__alive" prot="public">pybind11::keep_alive</innerclass>
    <innerclass refid="structpybind11_1_1multiple__inheritance" prot="public">pybind11::multiple_inheritance</innerclass>
    <innerclass refid="structpybind11_1_1dynamic__attr" prot="public">pybind11::dynamic_attr</innerclass>
    <innerclass refid="structpybind11_1_1buffer__protocol" prot="public">pybind11::buffer_protocol</innerclass>
    <innerclass refid="structpybind11_1_1metaclass" prot="public">pybind11::metaclass</innerclass>
    <innerclass refid="structpybind11_1_1arithmetic" prot="public">pybind11::arithmetic</innerclass>
    <innerclass refid="structpybind11_1_1call__guard" prot="public">pybind11::call_guard</innerclass>
    <innerclass refid="structpybind11_1_1call__guard_3_4" prot="public">pybind11::call_guard&lt;&gt;</innerclass>
    <innerclass refid="structpybind11_1_1call__guard_3_01_t_01_4" prot="public">pybind11::call_guard&lt; T &gt;</innerclass>
    <innerclass refid="structpybind11_1_1call__guard_3_01_t_00_01_ts_8_8_8_01_4" prot="public">pybind11::call_guard&lt; T, Ts... &gt;</innerclass>
    <innerclass refid="structpybind11_1_1arg" prot="public">pybind11::arg</innerclass>
    <innerclass refid="structpybind11_1_1arg__v" prot="public">pybind11::arg_v</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
