<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="structpybind11_1_1detail_1_1list__caster" kind="struct" language="C++" prot="public">
    <compoundname>pybind11::detail::list_caster</compoundname>
    <includes refid="stl_8h" local="no">stl.h</includes>
    <templateparamlist>
      <param>
        <type>typename Type</type>
      </param>
      <param>
        <type>typename Value</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1list__caster_1a6785f82250573b79a1d7e3d178fcf551" prot="public" static="no">
        <type><ref refid="namespacepybind11_1_1detail_1a160181d61e7d73d29060503ffdf13e6f" kindref="member">make_caster</ref>&lt; Value &gt;</type>
        <definition>using pybind11::detail::list_caster&lt; Type, Value &gt;::value_conv =  make_caster&lt;Value&gt;</definition>
        <argsstring></argsstring>
        <name>value_conv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="134" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structpybind11_1_1detail_1_1list__caster_1acf57da30d413bb7d60973230ce4315f2" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>typename T_</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacepybind11_1_1detail_1a3e4f52c827f0391c3ca8166590c559c9" kindref="member">pybind11::detail::movable_cast_op_type</ref>&lt; T_ &gt;</type>
        <definition>using pybind11::detail::list_caster&lt; Type, Value &gt;::cast_op_type =  pybind11::detail::movable_cast_op_type&lt;T_&gt;</definition>
        <argsstring></argsstring>
        <name>cast_op_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="171" column="529" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="structpybind11_1_1detail_1_1list__caster_1abb7c90dd12857f85f70bbc14a518bb89" prot="protected" static="no" mutable="no">
        <type>Type</type>
        <definition>Type pybind11::detail::list_caster&lt; Type, Value &gt;::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="171" column="25" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1list__caster_1a20408ef22399df8a1c2f615f648326c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pybind11::detail::list_caster&lt; Type, Value &gt;::load</definition>
        <argsstring>(handle src, bool convert)</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>convert</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="136" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="136" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1list__caster_1abbad24cf23d67a2bd9a8949eb6ea59e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pybind11::detail::list_caster&lt; Type, Value &gt;::operator Type *</definition>
        <argsstring>()</argsstring>
        <name>operator Type *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="171" column="399" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1list__caster_1ab57b4955088ea49643477606318044d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pybind11::detail::list_caster&lt; Type, Value &gt;::operator Type &amp;</definition>
        <argsstring>()</argsstring>
        <name>operator Type &amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="171" column="435" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1list__caster_1ad21d32f4b44e4feaf905672d0a36400a" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="rvalue" virt="non-virtual">
        <type></type>
        <definition>pybind11::detail::list_caster&lt; Type, Value &gt;::operator Type &amp;&amp;</definition>
        <argsstring>() &amp;&amp;</argsstring>
        <name>operator Type &amp;&amp;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="171" column="470" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="171" bodyend="171"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1list__caster_1a53e9c3010b9a3af59ab595a7300d7fcf" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
            <defval>Type</defval>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1_1detail_1a492fb1fcf079a5bc67248b852bc73619" kindref="member">enable_if_t</ref>&lt; std::is_same&lt; decltype(std::declval&lt; T &gt;().reserve(0)), void &gt;::<ref refid="structpybind11_1_1detail_1_1list__caster_1abb7c90dd12857f85f70bbc14a518bb89" kindref="member">value</ref></type>
          </param>
          <param>
            <type>int</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void pybind11::detail::list_caster&lt; Type, Value &gt;::reserve_maybe</definition>
        <argsstring>(sequence s, Type *)</argsstring>
        <name>reserve_maybe</name>
        <param>
          <type><ref refid="classpybind11_1_1sequence" kindref="compound">sequence</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>Type *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="154" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1list__caster_1a82ca116760ef3f5d2f990f9bc4bcc533" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void pybind11::detail::list_caster&lt; Type, Value &gt;::reserve_maybe</definition>
        <argsstring>(sequence, void *)</argsstring>
        <name>reserve_maybe</name>
        <param>
          <type><ref refid="classpybind11_1_1sequence" kindref="compound">sequence</ref></type>
        </param>
        <param>
          <type>void *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="155" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="155" bodyend="155"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1list__caster_1a6261126bf78956de819d83afb9531433" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::list_caster&lt; Type, Value &gt;::cast</definition>
        <argsstring>(T &amp;&amp;src, return_value_policy policy, handle parent)</argsstring>
        <name>cast</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="159" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="159" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1list__caster_1aa970cfcafe22540424e605bdf87591da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>::<ref refid="classpybind11_1_1detail_1_1descr" kindref="compound">pybind11::detail::descr</ref></type>
        <definition>::pybind11::detail::descr pybind11::detail::list_caster&lt; Type, Value &gt;::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="171" column="78" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1list__caster_1a6230d4afd41588f8f9f0077bf15f261c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T_</type>
          </param>
          <param>
            <type><ref refid="namespacepybind11_1_1detail_1a492fb1fcf079a5bc67248b852bc73619" kindref="member">enable_if_t</ref>&lt; std::is_same&lt; Type, <ref refid="namespacepybind11_1_1detail_1ada18e66a8c736bd49e83f6dad6b39af5" kindref="member">remove_cv_t</ref>&lt; T_ &gt;&gt;::<ref refid="structpybind11_1_1detail_1_1list__caster_1abb7c90dd12857f85f70bbc14a518bb89" kindref="member">value</ref>, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
        <definition>static handle pybind11::detail::list_caster&lt; Type, Value &gt;::cast</definition>
        <argsstring>(T_ *src, return_value_policy policy, handle parent)</argsstring>
        <name>cast</name>
        <param>
          <type>T_ *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="namespacepybind11_1a5f83e7a05cee9068927633ac47dbe69c" kindref="member">return_value_policy</ref></type>
          <declname>policy</declname>
        </param>
        <param>
          <type><ref refid="classpybind11_1_1handle" kindref="compound">handle</ref></type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="171" column="171" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="171" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" line="133" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/stl.h" bodystart="133" bodyend="172"/>
    <listofallmembers>
      <member refid="structpybind11_1_1detail_1_1list__caster_1a6261126bf78956de819d83afb9531433" prot="public" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>cast</name></member>
      <member refid="structpybind11_1_1detail_1_1list__caster_1a6230d4afd41588f8f9f0077bf15f261c" prot="public" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>cast</name></member>
      <member refid="structpybind11_1_1detail_1_1list__caster_1acf57da30d413bb7d60973230ce4315f2" prot="public" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>cast_op_type</name></member>
      <member refid="structpybind11_1_1detail_1_1list__caster_1a20408ef22399df8a1c2f615f648326c7" prot="public" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>load</name></member>
      <member refid="structpybind11_1_1detail_1_1list__caster_1aa970cfcafe22540424e605bdf87591da" prot="public" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>name</name></member>
      <member refid="structpybind11_1_1detail_1_1list__caster_1ab57b4955088ea49643477606318044d6" prot="public" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>operator Type &amp;</name></member>
      <member refid="structpybind11_1_1detail_1_1list__caster_1ad21d32f4b44e4feaf905672d0a36400a" prot="public" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>operator Type &amp;&amp;</name></member>
      <member refid="structpybind11_1_1detail_1_1list__caster_1abbad24cf23d67a2bd9a8949eb6ea59e9" prot="public" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>operator Type *</name></member>
      <member refid="structpybind11_1_1detail_1_1list__caster_1a53e9c3010b9a3af59ab595a7300d7fcf" prot="private" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>reserve_maybe</name></member>
      <member refid="structpybind11_1_1detail_1_1list__caster_1a82ca116760ef3f5d2f990f9bc4bcc533" prot="private" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>reserve_maybe</name></member>
      <member refid="structpybind11_1_1detail_1_1list__caster_1abb7c90dd12857f85f70bbc14a518bb89" prot="protected" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>value</name></member>
      <member refid="structpybind11_1_1detail_1_1list__caster_1a6785f82250573b79a1d7e3d178fcf551" prot="public" virt="non-virtual"><scope>pybind11::detail::list_caster</scope><name>value_conv</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
