<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classxlnt_1_1workbook" kind="class" language="C++" prot="public">
    <compoundname>xlnt::workbook</compoundname>
    <includes refid="workbook_8hpp" local="no">workbook.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classxlnt_1_1workbook_1ae2f1be96b599bc45f067d70609821312" prot="public" static="no">
        <type><ref refid="classxlnt_1_1worksheet__iterator" kindref="compound">worksheet_iterator</ref></type>
        <definition>using xlnt::workbook::iterator =  worksheet_iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
<para>typedef for the iterator used for iterating through this workbook (non-const) in a range-based for loop. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="98" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1workbook_1a4bcfb01cc3e1863dfa355f27c1eb6938" prot="public" static="no">
        <type><ref refid="classxlnt_1_1const__worksheet__iterator" kindref="compound">const_worksheet_iterator</ref></type>
        <definition>using xlnt::workbook::const_iterator =  const_worksheet_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
<para>typedef for the iterator used for iterating through this workbook (const) in a range-based for loop. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="104" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1workbook_1acbadbee48fbc52777b43a05e0ae474c1" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classxlnt_1_1workbook_1ae2f1be96b599bc45f067d70609821312" kindref="member">iterator</ref> &gt;</type>
        <definition>using xlnt::workbook::reverse_iterator =  std::reverse_iterator&lt;iterator&gt;</definition>
        <argsstring></argsstring>
        <name>reverse_iterator</name>
        <briefdescription>
<para>typedef for the iterator used for iterating through this workbook (non-const) in a range-based for loop in reverse order using std::make_reverse_iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="111" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classxlnt_1_1workbook_1a7d1b42fa3144d4eba9e1ca3cbc85ae7c" prot="public" static="no">
        <type>std::reverse_iterator&lt; <ref refid="classxlnt_1_1workbook_1a4bcfb01cc3e1863dfa355f27c1eb6938" kindref="member">const_iterator</ref> &gt;</type>
        <definition>using xlnt::workbook::const_reverse_iterator =  std::reverse_iterator&lt;const_iterator&gt;</definition>
        <argsstring></argsstring>
        <name>const_reverse_iterator</name>
        <briefdescription>
<para>typedef for the iterator used for iterating through this workbook (const) in a range-based for loop in reverse order using std::make_reverse_iterator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="118" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classxlnt_1_1workbook_1a8096f5b50cedaf1bf28b5017acf32dd7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class streaming_workbook_reader</definition>
        <argsstring></argsstring>
        <name>streaming_workbook_reader</name>
        <param>
          <type><ref refid="classxlnt_1_1streaming__workbook__reader" kindref="compound">streaming_workbook_reader</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="847" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" bodystart="847" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1workbook_1a2b22a8cfb2fb426bfaad8dee4c888707" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class worksheet</definition>
        <argsstring></argsstring>
        <name>worksheet</name>
        <param>
          <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="848" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" bodystart="848" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1workbook_1a5c27ff96f65a231e21871a228cbaf740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class detail::xlsx_consumer</definition>
        <argsstring></argsstring>
        <name>detail::xlsx_consumer</name>
        <param>
          <type><ref refid="classxlnt_1_1detail_1_1xlsx__consumer" kindref="compound">detail::xlsx_consumer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="849" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" bodystart="849" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1workbook_1aeaa1b2a5f3d37ddb4b8ca1ebaab144f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class detail::xlsx_producer</definition>
        <argsstring></argsstring>
        <name>detail::xlsx_producer</name>
        <param>
          <type><ref refid="classxlnt_1_1detail_1_1xlsx__producer" kindref="compound">detail::xlsx_producer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="850" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" bodystart="850" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxlnt_1_1workbook_1a8415b163e5cb9d267ebaf6dc8a71bb87" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="structxlnt_1_1detail_1_1workbook__impl" kindref="compound">detail::workbook_impl</ref> &gt;</type>
        <definition>std::unique_ptr&lt;detail::workbook_impl&gt; xlnt::workbook::d_</definition>
        <argsstring></argsstring>
        <name>d_</name>
        <briefdescription>
<para>An opaque pointer to a structure that holds all of the data relating to this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="916" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" bodystart="916" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classxlnt_1_1workbook_1a6b4088d80b9fb40a1c965d8f19441a41" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref></type>
        <definition>workbook xlnt::workbook::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
<para>Constructs and returns an empty workbook similar to a default. Excel workbook </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="124" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="387" bodyend="495"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxlnt_1_1workbook_1a833468d87f0683c0f13f09eacfc422ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::workbook::workbook</definition>
        <argsstring>()</argsstring>
        <name>workbook</name>
        <briefdescription>
<para>Default constructor. Constructs a workbook containing a single empty worksheet using <ref refid="classxlnt_1_1workbook_1a6b4088d80b9fb40a1c965d8f19441a41" kindref="member">workbook::empty()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="132" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="497" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aabe2c4076508526709173ce7b1844960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::workbook::workbook</definition>
        <argsstring>(const xlnt::path &amp;file)</argsstring>
        <name>workbook</name>
        <param>
          <type>const <ref refid="classxlnt_1_1path" kindref="compound">xlnt::path</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <briefdescription>
<para>load the xlsx file at path </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="137" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="503" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aa42e9d910a6c8960f296236fb1096193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::workbook::workbook</definition>
        <argsstring>(const xlnt::path &amp;file, const std::string &amp;password)</argsstring>
        <name>workbook</name>
        <param>
          <type>const <ref refid="classxlnt_1_1path" kindref="compound">xlnt::path</ref> &amp;</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>load the encrpyted xlsx file at path </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="142" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="509" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a767f3db85df3ccdd357d59e354622596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::workbook::workbook</definition>
        <argsstring>(std::istream &amp;data)</argsstring>
        <name>workbook</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>construct the workbook from any data stream where the data is the binary form of a workbook </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="147" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="515" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a0523e9012cb4917e76038ea3da432b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::workbook::workbook</definition>
        <argsstring>(std::istream &amp;data, const std::string &amp;password)</argsstring>
        <name>workbook</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>construct the workbook from any data stream where the data is the binary form of an encrypted workbook </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="152" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="521" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a63732bb538e5cbcaac6ec014a445d5eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::workbook::workbook</definition>
        <argsstring>(workbook &amp;&amp;other)</argsstring>
        <name>workbook</name>
        <param>
          <type><ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move constructor. Constructs a workbook from existing workbook, other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="157" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1216" bodyend="1220"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aa43405161ce26b7e171cc05b8461835c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::workbook::workbook</definition>
        <argsstring>(const workbook &amp;other)</argsstring>
        <name>workbook</name>
        <param>
          <type>const <ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Copy constructor. Constructs this workbook from existing workbook, other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="162" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1222" bodyend="1233"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a12ddbfa450b8bc3dc3d7b049f39d57e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::workbook::~workbook</definition>
        <argsstring>()</argsstring>
        <name>~workbook</name>
        <briefdescription>
<para>Destroys this workbook, deallocating all internal storage space. Any pimpl wrapper classes (e.g. cell) pointing into this workbook will be invalid after this is executed. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="169" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::workbook::create_sheet</definition>
        <argsstring>()</argsstring>
        <name>create_sheet</name>
        <briefdescription>
<para>Creates and returns a sheet after the last sheet in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="176" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="736" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a123c1c070aa39142512d1cdc669e5f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::workbook::create_sheet</definition>
        <argsstring>(std::size_t index)</argsstring>
        <name>create_sheet</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Creates and returns a sheet at the specified index. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="181" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1064" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a477fd883865f426a0c4a38905e0c03ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::workbook::create_sheet_with_rel</definition>
        <argsstring>(const std::string &amp;title, const relationship &amp;rel)</argsstring>
        <name>create_sheet_with_rel</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1relationship" kindref="compound">relationship</ref> &amp;</type>
          <declname>rel</declname>
        </param>
        <briefdescription>
<para>TODO: This should be private... </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="186" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1083" bodyend="1099"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aa0b8cf49d7cc4bbb98a9bd21fc939896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::workbook::copy_sheet</definition>
        <argsstring>(worksheet worksheet)</argsstring>
        <name>copy_sheet</name>
        <param>
          <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
          <declname>worksheet</declname>
        </param>
        <briefdescription>
<para>Creates and returns a new sheet after the last sheet initializing it with all of the data from the provided worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="192" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="783" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a55d04adc74fc9b52f9a08d604eb00f87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::workbook::copy_sheet</definition>
        <argsstring>(worksheet worksheet, std::size_t index)</argsstring>
        <name>copy_sheet</name>
        <param>
          <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
          <declname>worksheet</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Creates and returns a new sheet at the specified index initializing it with all of the data from the provided worksheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="198" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="796" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::workbook::active_sheet</definition>
        <argsstring>()</argsstring>
        <name>active_sheet</name>
        <briefdescription>
<para>Returns the worksheet that is determined to be active. An active sheet is that which is initially shown by the spreadsheet editor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="204" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="719" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a3e0382e7d5bc111386f53e1802f5e59e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::workbook::sheet_by_title</definition>
        <argsstring>(const std::string &amp;title)</argsstring>
        <name>sheet_by_title</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Returns the worksheet with the given name. This may throw an exception if the sheet isn&apos;t found. Use workbook::contains(const std::string &amp;) to make sure the sheet exists before calling this method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="211" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="652" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ab7a1e6a42a4fbb1c436a93e6c2e6a516" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>const worksheet xlnt::workbook::sheet_by_title</definition>
        <argsstring>(const std::string &amp;title) const</argsstring>
        <name>sheet_by_title</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Returns the worksheet with the given name. This may throw an exception if the sheet isn&apos;t found. Use workbook::contains(const std::string &amp;) to make sure the sheet exists before calling this method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="218" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="639" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1af1b3ed735b5d9be4115f9ac987081913" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::workbook::sheet_by_index</definition>
        <argsstring>(std::size_t index)</argsstring>
        <name>sheet_by_index</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the worksheet at the given index. This will throw an exception if index is greater than or equal to the number of sheets in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="224" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="665" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1abd4099049718a28e09ae5c049058415a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>const worksheet xlnt::workbook::sheet_by_index</definition>
        <argsstring>(std::size_t index) const</argsstring>
        <name>sheet_by_index</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns the worksheet at the given index. This will throw an exception if index is greater than or equal to the number of sheets in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="230" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="682" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a0e78f73956583af3c8ccd5085509374f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::workbook::sheet_by_id</definition>
        <argsstring>(std::size_t id)</argsstring>
        <name>sheet_by_id</name>
        <param>
          <type>std::size_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the worksheet with a sheetId of id. Sheet IDs are arbitrary numbers that uniquely identify a sheet. Most users won&apos;t need this. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="236" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="693" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ac64ccc2aa44cb168d437ec4b0a1a1a55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>const worksheet xlnt::workbook::sheet_by_id</definition>
        <argsstring>(std::size_t id) const</argsstring>
        <name>sheet_by_id</name>
        <param>
          <type>std::size_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Returns the worksheet with a sheetId of id. Sheet IDs are arbitrary numbers that uniquely identify a sheet. Most users won&apos;t need this. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="242" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="706" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a2d97a8d513cc0b36e99cc065b990c7e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::contains</definition>
        <argsstring>(const std::string &amp;title) const</argsstring>
        <name>contains</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Returns true if this workbook contains a sheet with the given title. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="247" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1400" bodyend="1408"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a681f4aa4cc186a4238c0e207eb12def9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t xlnt::workbook::index</definition>
        <argsstring>(worksheet worksheet)</argsstring>
        <name>index</name>
        <param>
          <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
          <declname>worksheet</declname>
        </param>
        <briefdescription>
<para>Returns the index of the given worksheet. The worksheet must be owned by this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="252" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="815" bodyend="825"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a2471d1ef981a728d5a302c2de8a08da3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::remove_sheet</definition>
        <argsstring>(worksheet worksheet)</argsstring>
        <name>remove_sheet</name>
        <param>
          <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
          <declname>worksheet</declname>
        </param>
        <briefdescription>
<para>Removes the given worksheet from this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="259" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1034" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a9004e7a2752485b27bf063f6e12c2ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Sets the contents of this workbook to be equivalent to that of a workbook returned by <ref refid="classxlnt_1_1workbook_1a6b4088d80b9fb40a1c965d8f19441a41" kindref="member">workbook::empty()</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="265" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1158" bodyend="1162"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a85f937d1f1c203b7cc7187eb41bc0480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1workbook_1ae2f1be96b599bc45f067d70609821312" kindref="member">iterator</ref></type>
        <definition>workbook::iterator xlnt::workbook::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns an iterator to the first worksheet in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="272" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1101" bodyend="1104"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a1f4f65d238199cbd3a5ff4f3f537e224" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1workbook_1ae2f1be96b599bc45f067d70609821312" kindref="member">iterator</ref></type>
        <definition>workbook::iterator xlnt::workbook::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns an iterator to the worksheet following the last worksheet of the workbook. This worksheet acts as a placeholder; attempting to access it will cause an exception to be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="279" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1106" bodyend="1109"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a65be0e7316aeb5a7dca5b787236560fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1workbook_1a4bcfb01cc3e1863dfa355f27c1eb6938" kindref="member">const_iterator</ref></type>
        <definition>workbook::const_iterator xlnt::workbook::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns a const iterator to the first worksheet in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="284" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1111" bodyend="1114"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ae0bba07094349bd5ee3157e5b59a9e2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1workbook_1a4bcfb01cc3e1863dfa355f27c1eb6938" kindref="member">const_iterator</ref></type>
        <definition>workbook::const_iterator xlnt::workbook::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns a const iterator to the worksheet following the last worksheet of the workbook. This worksheet acts as a placeholder; attempting to access it will cause an exception to be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="291" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1116" bodyend="1119"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ad73d0400208f1ba8d033368fed16ca4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1workbook_1a4bcfb01cc3e1863dfa355f27c1eb6938" kindref="member">const_iterator</ref></type>
        <definition>workbook::const_iterator xlnt::workbook::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <briefdescription>
<para>Returns an iterator to the first worksheet in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="296" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1121" bodyend="1124"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aeb6f93ab12f9db098c293c76f8d176e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1workbook_1a4bcfb01cc3e1863dfa355f27c1eb6938" kindref="member">const_iterator</ref></type>
        <definition>workbook::const_iterator xlnt::workbook::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <briefdescription>
<para>Returns a const iterator to the worksheet following the last worksheet of the workbook. This worksheet acts as a placeholder; attempting to access it will cause an exception to be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="303" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1126" bodyend="1129"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a993aa46199d76b4bc24b3b16733cfa13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::apply_to_cells</definition>
        <argsstring>(std::function&lt; void(cell)&gt; f)</argsstring>
        <name>apply_to_cells</name>
        <param>
          <type>std::function&lt; void(<ref refid="classxlnt_1_1cell" kindref="compound">cell</ref>)&gt;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Applies the function &quot;f&quot; to every non-empty cell in every worksheet in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="308" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1314" bodyend="1329"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ace8a3436cd08d64708084ba9d277cf09" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; xlnt::workbook::sheet_titles</definition>
        <argsstring>() const</argsstring>
        <name>sheet_titles</name>
        <briefdescription>
<para>Returns a temporary vector containing the titles of each sheet in the order of the sheets in the workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="314" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1131" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a6de32e90786dc838bda2c921ff7c7ef3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t xlnt::workbook::sheet_count</definition>
        <argsstring>() const</argsstring>
        <name>sheet_count</name>
        <briefdescription>
<para>Returns the number of sheets in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="319" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1143" bodyend="1146"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1abc6c82900353834cd14ec131270d3e18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::has_core_property</definition>
        <argsstring>(xlnt::core_property type) const</argsstring>
        <name>has_core_property</name>
        <param>
          <type><ref refid="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029d" kindref="member">xlnt::core_property</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Returns true if the workbook has the core property with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="326" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="260" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1afa49fcecaeaef2bad6e028eea604ab72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029d" kindref="member">xlnt::core_property</ref> &gt;</type>
        <definition>std::vector&lt; xlnt::core_property &gt; xlnt::workbook::core_properties</definition>
        <argsstring>() const</argsstring>
        <name>core_properties</name>
        <briefdescription>
<para>Returns a vector of the type of each core property that is set to a particular value in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="332" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="265" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a1b8a8b01b1b3b09b89b99ea9c9337714" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1variant" kindref="compound">variant</ref></type>
        <definition>variant xlnt::workbook::core_property</definition>
        <argsstring>(xlnt::core_property type) const</argsstring>
        <name>core_property</name>
        <param>
          <type><ref refid="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029d" kindref="member">xlnt::core_property</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Returns the value of the given core property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="337" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="270" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a31886abd4984228b8117f51ef8a17490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::core_property</definition>
        <argsstring>(xlnt::core_property type, const variant &amp;value)</argsstring>
        <name>core_property</name>
        <param>
          <type><ref refid="namespacexlnt_1a71da3b08e3863a52b72b08a571ec029d" kindref="member">xlnt::core_property</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1variant" kindref="compound">variant</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the given core property to the provided value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="342" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="283" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a7085469bc589720ed7ecfcf3f1284e05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::has_extended_property</definition>
        <argsstring>(xlnt::extended_property type) const</argsstring>
        <name>has_extended_property</name>
        <param>
          <type><ref refid="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5" kindref="member">xlnt::extended_property</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Returns true if the workbook has the extended property with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="347" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="299" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a7cd33c11e3929a5381099d2797d886f8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5" kindref="member">xlnt::extended_property</ref> &gt;</type>
        <definition>std::vector&lt; xlnt::extended_property &gt; xlnt::workbook::extended_properties</definition>
        <argsstring>() const</argsstring>
        <name>extended_properties</name>
        <briefdescription>
<para>Returns a vector of the type of each extended property that is set to a particular value in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="353" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a7c50cc677ffaf4c7a9577bfc4c07ef55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1variant" kindref="compound">variant</ref></type>
        <definition>variant xlnt::workbook::extended_property</definition>
        <argsstring>(xlnt::extended_property type) const</argsstring>
        <name>extended_property</name>
        <param>
          <type><ref refid="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5" kindref="member">xlnt::extended_property</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Returns the value of the given extended property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="358" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="325" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a1a2e03e9ced399aa3bba796680276dea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::extended_property</definition>
        <argsstring>(xlnt::extended_property type, const variant &amp;value)</argsstring>
        <name>extended_property</name>
        <param>
          <type><ref refid="namespacexlnt_1af19e407c73cf8ee3bd956e4f6ea490f5" kindref="member">xlnt::extended_property</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1variant" kindref="compound">variant</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the given extended property to the provided value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="363" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="309" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a7fe86dca0cf73068ee222f91c9b6af26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::has_custom_property</definition>
        <argsstring>(const std::string &amp;property_name) const</argsstring>
        <name>has_custom_property</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>property_name</declname>
        </param>
        <briefdescription>
<para>Returns true if the workbook has the custom property with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="368" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a30ad3041b561dae675e37eb9c0094299" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; xlnt::workbook::custom_properties</definition>
        <argsstring>() const</argsstring>
        <name>custom_properties</name>
        <briefdescription>
<para>Returns a vector of the name of each custom property that is set to a particular value in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="374" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a269f36e3283e19a758a6890fa89b3fbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1variant" kindref="compound">variant</ref></type>
        <definition>variant xlnt::workbook::custom_property</definition>
        <argsstring>(const std::string &amp;property_name) const</argsstring>
        <name>custom_property</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>property_name</declname>
        </param>
        <briefdescription>
<para>Returns the value of the given custom property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="379" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="364" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1afe7c588e77a1f812c33842c29e715878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::custom_property</definition>
        <argsstring>(const std::string &amp;property_name, const variant &amp;value)</argsstring>
        <name>custom_property</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>property_name</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1variant" kindref="compound">variant</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Creates a new custom property in this workbook and sets it to the provided value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="384" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="348" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a80163555fb42a5529fed34a3a16f8863" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>calendar</type>
        <definition>calendar xlnt::workbook::base_date</definition>
        <argsstring>() const</argsstring>
        <name>base_date</name>
        <briefdescription>
<para>Returns the base date used by this workbook. This will generally be windows_1900 except on Apple based systems when it will default to mac_1904 unless otherwise set via <computeroutput>void <ref refid="classxlnt_1_1workbook_1a255ea03fb00c34a414bd7d025b2812fe" kindref="member">workbook::base_date(calendar base_date)</ref></computeroutput>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="391" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1450" bodyend="1453"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a255ea03fb00c34a414bd7d025b2812fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::base_date</definition>
        <argsstring>(calendar base_date)</argsstring>
        <name>base_date</name>
        <param>
          <type>calendar</type>
          <declname>base_date</declname>
        </param>
        <briefdescription>
<para>Sets the base date style of this workbook. This is the date and time that a numeric value of 0 represents. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="397" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1455" bodyend="1458"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1af44100a63859e6a8a43b6bbe063467db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::has_title</definition>
        <argsstring>() const</argsstring>
        <name>has_title</name>
        <briefdescription>
<para>Returns true if this workbook has had its title set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="402" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1460" bodyend="1463"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a767a08afda3d464c0b9c9d80dcb4a3c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::workbook::title</definition>
        <argsstring>() const</argsstring>
        <name>title</name>
        <briefdescription>
<para>Returns the title of this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="407" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1465" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ad11588655cb15f5ea9ed21233c61f39b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::title</definition>
        <argsstring>(const std::string &amp;title)</argsstring>
        <name>title</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Sets the title of this workbook to title. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="412" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1470" bodyend="1473"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ab9e1d7d89cf090bc99ba8c3294bc61ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::abs_path</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>abs_path</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Sets the absolute path of this workbook to path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="417" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="377" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a1ccbb79db2289f31a7c7f4014a4d1b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::arch_id_flags</definition>
        <argsstring>(const std::size_t flags)</argsstring>
        <name>arch_id_flags</name>
        <param>
          <type>const std::size_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Sets the ArchID flags of this workbook to flags. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="422" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="382" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a776553c6b3470685901b03722b2d7f36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classxlnt_1_1named__range" kindref="compound">xlnt::named_range</ref> &gt;</type>
        <definition>std::vector&lt; named_range &gt; xlnt::workbook::named_ranges</definition>
        <argsstring>() const</argsstring>
        <name>named_ranges</name>
        <briefdescription>
<para>Returns a vector of the named ranges in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="429" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1253" bodyend="1266"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a424ec3ca238fe529de5421e8b91b26a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::create_named_range</definition>
        <argsstring>(const std::string &amp;name, worksheet worksheet, const range_reference &amp;reference)</argsstring>
        <name>create_named_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
          <declname>worksheet</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>reference</declname>
        </param>
        <briefdescription>
<para>Creates a new names range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="434" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="832" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a49ddbcb4ce8af349949fc1ba8ad925b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::create_named_range</definition>
        <argsstring>(const std::string &amp;name, worksheet worksheet, const std::string &amp;reference_string)</argsstring>
        <name>create_named_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
          <declname>worksheet</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>reference_string</declname>
        </param>
        <briefdescription>
<para>Creates a new names range. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="439" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="827" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a0738aca0f6f9228d12e3a0bd45036917" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::has_named_range</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>has_named_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns true if a named range of the given name exists in the workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="444" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="724" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1adb52963419bd676a6367675822a953c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1range" kindref="compound">range</ref></type>
        <definition>range xlnt::workbook::named_range</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>named_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the named range with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="444" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="851" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a12f202b67bad4a9bddb162e540459d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::remove_named_range</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>remove_named_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Deletes the named range with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="454" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="837" bodyend="849"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aeadec7536f669d4cf356753fa49f3b6b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::save</definition>
        <argsstring>(std::vector&lt; std::uint8_t &gt; &amp;data) const</argsstring>
        <name>save</name>
        <param>
          <type>std::vector&lt; std::uint8_t &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Serializes the workbook into an XLSX file and saves the bytes into byte vector data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="462" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="954" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ad52bae127b687629c50388511d3efa7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::save</definition>
        <argsstring>(std::vector&lt; std::uint8_t &gt; &amp;data, const std::string &amp;password) const</argsstring>
        <name>save</name>
        <param>
          <type>std::vector&lt; std::uint8_t &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Serializes the workbook into an XLSX file encrypted with the given password and saves the bytes into byte vector data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="468" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="961" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1afdda068926fbd9b649cbb863cc194a5c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::save</definition>
        <argsstring>(const std::string &amp;filename) const</argsstring>
        <name>save</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Serializes the workbook into an XLSX file and saves the data into a file named filename. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="474" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="968" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aadab1b2286bfe8b5f955bae09abf064a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::save</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;password) const</argsstring>
        <name>save</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Serializes the workbook into an XLSX file encrypted with the given password and loads the bytes into a file named filename. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="480" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="973" bodyend="976"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1af9cc0c2dc0c7466a751496a48bdf42ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::save</definition>
        <argsstring>(const xlnt::path &amp;filename) const</argsstring>
        <name>save</name>
        <param>
          <type>const <ref refid="classxlnt_1_1path" kindref="compound">xlnt::path</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Serializes the workbook into an XLSX file and saves the data into a file named filename. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="500" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="978" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aba72a11bef5cfeba6dbdc6fda6277f93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::save</definition>
        <argsstring>(const xlnt::path &amp;filename, const std::string &amp;password) const</argsstring>
        <name>save</name>
        <param>
          <type>const <ref refid="classxlnt_1_1path" kindref="compound">xlnt::path</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Serializes the workbook into an XLSX file encrypted with the given password and loads the bytes into a file named filename. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="506" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="985" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a6850eb6a525cdff4b549b687d2f59c2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::save</definition>
        <argsstring>(std::ostream &amp;stream) const</argsstring>
        <name>save</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Serializes the workbook into an XLSX file and saves the data into stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="511" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="992" bodyend="996"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1af205c8493a7e928a5d0a515c288eee49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::save</definition>
        <argsstring>(std::ostream &amp;stream, const std::string &amp;password) const</argsstring>
        <name>save</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Serializes the workbook into an XLSX file encrypted with the given password and loads the bytes into the given stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="517" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="998" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ad835d8c19e8312765035c46d212c8c3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::load</definition>
        <argsstring>(const std::vector&lt; std::uint8_t &gt; &amp;data)</argsstring>
        <name>load</name>
        <param>
          <type>const std::vector&lt; std::uint8_t &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Interprets byte vector data as an XLSX file and sets the content of this workbook to match that file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="523" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="887" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a4a79b92c32e259d72dc049c491b8182f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::load</definition>
        <argsstring>(const std::vector&lt; std::uint8_t &gt; &amp;data, const std::string &amp;password)</argsstring>
        <name>load</name>
        <param>
          <type>const std::vector&lt; std::uint8_t &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Interprets byte vector data as an XLSX file encrypted with the given password and sets the content of this workbook to match that file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="529" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="935" bodyend="945"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a4cdba244fd180934d961f9ad39e8edc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::load</definition>
        <argsstring>(const std::string &amp;filename)</argsstring>
        <name>load</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Interprets file with the given filename as an XLSX file and sets the content of this workbook to match that file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="535" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="899" bodyend="902"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a94b53390ea78261bb4e198a6956b1738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::load</definition>
        <argsstring>(const std::string &amp;filename, const std::string &amp;password)</argsstring>
        <name>load</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Interprets file with the given filename as an XLSX file encrypted with the given password and sets the content of this workbook to match that file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="541" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="917" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1af52a71ac7b10d357601b9a4cc0f5aa5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::load</definition>
        <argsstring>(const xlnt::path &amp;filename)</argsstring>
        <name>load</name>
        <param>
          <type>const <ref refid="classxlnt_1_1path" kindref="compound">xlnt::path</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Interprets file with the given filename as an XLSX file and sets the content of this workbook to match that file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="561" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="904" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a8bf547513ee82f7c029a246aea50d965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::load</definition>
        <argsstring>(const xlnt::path &amp;filename, const std::string &amp;password)</argsstring>
        <name>load</name>
        <param>
          <type>const <ref refid="classxlnt_1_1path" kindref="compound">xlnt::path</ref> &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Interprets file with the given filename as an XLSX file encrypted with the given password and sets the content of this workbook to match that file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="567" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="922" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aaed45d3eeb5cb1f1da48becc3ef64e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::load</definition>
        <argsstring>(std::istream &amp;stream)</argsstring>
        <name>load</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Interprets data in stream as an XLSX file and sets the content of this workbook to match that file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="573" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="864" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a7f7297a19ac80cf20b79cd77b4e4efde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::load</definition>
        <argsstring>(std::istream &amp;stream, const std::string &amp;password)</argsstring>
        <name>load</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>password</declname>
        </param>
        <briefdescription>
<para>Interprets data in stream as an XLSX file encrypted with the given password and sets the content of this workbook to match that file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="579" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="947" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a688bac5dc153275cbadb1173941d2873" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::has_view</definition>
        <argsstring>() const</argsstring>
        <name>has_view</name>
        <briefdescription>
<para>Returns true if this workbook has a view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="586" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1485" bodyend="1488"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a38783491f5a090b92299b2e44f81fa6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1workbook__view" kindref="compound">workbook_view</ref></type>
        <definition>workbook_view xlnt::workbook::view</definition>
        <argsstring>() const</argsstring>
        <name>view</name>
        <briefdescription>
<para>Returns the view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="591" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1490" bodyend="1498"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a689896c1ebfb9dba606bbfc7cbcd5b1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::view</definition>
        <argsstring>(const workbook_view &amp;view)</argsstring>
        <name>view</name>
        <param>
          <type>const <ref refid="classxlnt_1_1workbook__view" kindref="compound">workbook_view</ref> &amp;</type>
          <declname>view</declname>
        </param>
        <briefdescription>
<para>Sets the view to view. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="596" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1500" bodyend="1503"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aa6a39d1daeb8304ec1bb55b7863f1b11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::has_code_name</definition>
        <argsstring>() const</argsstring>
        <name>has_code_name</name>
        <briefdescription>
<para>Returns true if a code name has been set for this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="603" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1505" bodyend="1508"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a987a232ba82f37044a056f178e2ad69b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::workbook::code_name</definition>
        <argsstring>() const</argsstring>
        <name>code_name</name>
        <briefdescription>
<para>Returns the code name that was set for this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="608" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1510" bodyend="1518"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a9d7be7eb4c280451b018e63b5ad8cd2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::code_name</definition>
        <argsstring>(const std::string &amp;code_name)</argsstring>
        <name>code_name</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>code_name</declname>
        </param>
        <briefdescription>
<para>Sets the code name of this workbook to code_name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="613" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1520" bodyend="1523"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a4972c77c92ccd06559de16de86833135" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::has_file_version</definition>
        <argsstring>() const</argsstring>
        <name>has_file_version</name>
        <briefdescription>
<para>Returns true if this workbook has a file version. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="618" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1525" bodyend="1528"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a682a585084f7fa8254f19f3f4abc400c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::workbook::app_name</definition>
        <argsstring>() const</argsstring>
        <name>app_name</name>
        <briefdescription>
<para>Returns the AppName workbook file property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="623" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1530" bodyend="1533"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a6d22a2b5776b58994c0e746f1c82f123" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t xlnt::workbook::last_edited</definition>
        <argsstring>() const</argsstring>
        <name>last_edited</name>
        <briefdescription>
<para>Returns the LastEdited workbook file property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="628" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1535" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a046be4caba0c55af13c88bceabc21e23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t xlnt::workbook::lowest_edited</definition>
        <argsstring>() const</argsstring>
        <name>lowest_edited</name>
        <briefdescription>
<para>Returns the LowestEdited workbook file property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="633" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1540" bodyend="1543"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a0af8f387784d19aa51b934f4087fe16e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t xlnt::workbook::rup_build</definition>
        <argsstring>() const</argsstring>
        <name>rup_build</name>
        <briefdescription>
<para>Returns the RupBuild workbook file property. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="638" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1545" bodyend="1548"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a21c6b08580d01d41f7786bd93c902a22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::has_theme</definition>
        <argsstring>() const</argsstring>
        <name>has_theme</name>
        <briefdescription>
<para>Returns true if this workbook has a theme defined. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="645" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1237" bodyend="1240"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a1065725b271fc12f28529d5ce9a95188" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1theme" kindref="compound">xlnt::theme</ref> &amp;</type>
        <definition>const theme &amp; xlnt::workbook::theme</definition>
        <argsstring>() const</argsstring>
        <name>theme</name>
        <briefdescription>
<para>Returns a const reference to this workbook&apos;s theme. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="650" column="23" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1242" bodyend="1245"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a5490b36d17a3121f1ed487be06ec3ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::theme</definition>
        <argsstring>(const class theme &amp;value)</argsstring>
        <name>theme</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1theme" kindref="compound">theme</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the theme to value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="655" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1247" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a26aaa1f893992621d1058e1e300f8e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1format" kindref="compound">xlnt::format</ref></type>
        <definition>format xlnt::workbook::format</definition>
        <argsstring>(std::size_t format_index)</argsstring>
        <name>format</name>
        <param>
          <type>std::size_t</type>
          <declname>format_index</declname>
        </param>
        <briefdescription>
<para>Returns the cell format at the given index. The index is the position of the format in xl/styles.xml. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="663" column="18" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1331" bodyend="1334"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a1333c571c638ad61893a60233c14dc89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1format" kindref="compound">xlnt::format</ref></type>
        <definition>const format xlnt::workbook::format</definition>
        <argsstring>(std::size_t format_index) const</argsstring>
        <name>format</name>
        <param>
          <type>std::size_t</type>
          <declname>format_index</declname>
        </param>
        <briefdescription>
<para>Returns the cell format at the given index. The index is the position of the format in xl/styles.xml. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="669" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1336" bodyend="1339"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a7195f09e69e62e953735bd4d3458ec78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1format" kindref="compound">xlnt::format</ref></type>
        <definition>format xlnt::workbook::create_format</definition>
        <argsstring>(bool default_format=false)</argsstring>
        <name>create_format</name>
        <param>
          <type>bool</type>
          <declname>default_format</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Creates a new format and returns it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="674" column="18" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1268" bodyend="1272"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a0460152745a9801d2ff5d44ee12cc5ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::clear_formats</definition>
        <argsstring>()</argsstring>
        <name>clear_formats</name>
        <briefdescription>
<para>Clear all cell-level formatting and formats from the styelsheet. This leaves all other styling in place (e.g. named styles). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="680" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1309" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a21ddb585620af57719db5d1299dbaab1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::has_style</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>has_style</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns true if this workbook has a style with a name of name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="687" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1274" bodyend="1277"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ae3c7cbfbe873f63caffb9330a4fc2736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1style" kindref="compound">style</ref></type>
        <definition>style xlnt::workbook::style</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>style</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the named style with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="687" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1440" bodyend="1443"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a8ae112dec6955e868c332825657860d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1style" kindref="compound">style</ref></type>
        <definition>const style xlnt::workbook::style</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>style</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Returns the named style with the given name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="687" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1445" bodyend="1448"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a5bff992e2fdc47cbf80ef242c95adf50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1style" kindref="compound">style</ref></type>
        <definition>style xlnt::workbook::create_style</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>create_style</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Creates a new style and returns it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="687" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1430" bodyend="1433"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a7010ce4e4b12c9d16a7039b3358c17f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1style" kindref="compound">style</ref></type>
        <definition>style xlnt::workbook::create_builtin_style</definition>
        <argsstring>(std::size_t builtin_id)</argsstring>
        <name>create_builtin_style</name>
        <param>
          <type>std::size_t</type>
          <declname>builtin_id</declname>
        </param>
        <briefdescription>
<para>Creates a new style and returns it. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="687" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1435" bodyend="1438"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a953c5f9fa269606dbd92cac48e89635a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::clear_styles</definition>
        <argsstring>()</argsstring>
        <name>clear_styles</name>
        <briefdescription>
<para>Clear all named styles from cells and remove the styles from from the styelsheet. This leaves all other styling in place (e.g. cell formats). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="714" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1279" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a55074b419176614d1d2515952de13cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::default_slicer_style</definition>
        <argsstring>(const std::string &amp;value)</argsstring>
        <name>default_slicer_style</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the default slicer style to the given value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="719" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1284" bodyend="1287"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a531d36bd620b251d07c82496b1788077" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::workbook::default_slicer_style</definition>
        <argsstring>() const</argsstring>
        <name>default_slicer_style</name>
        <briefdescription>
<para>Returns the default slicer style. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="724" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1289" bodyend="1292"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a0bf18f2c8d7f4b0e6284b71830000c01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::enable_known_fonts</definition>
        <argsstring>()</argsstring>
        <name>enable_known_fonts</name>
        <briefdescription>
<para>Enables knownFonts in stylesheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="729" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1294" bodyend="1297"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a51326c9e04e77021605b73d810fea63e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::disable_known_fonts</definition>
        <argsstring>()</argsstring>
        <name>disable_known_fonts</name>
        <briefdescription>
<para>Disables knownFonts in stylesheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="734" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1299" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a8a82720d03407c490cb261aef33188ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::known_fonts_enabled</definition>
        <argsstring>() const</argsstring>
        <name>known_fonts_enabled</name>
        <briefdescription>
<para>Returns true if knownFonts are enabled in the stylesheet. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="739" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1304" bodyend="1307"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a584d4cfeb0fa3deae6cb8eafa70bc9bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1manifest" kindref="compound">manifest</ref> &amp;</type>
        <definition>manifest &amp; xlnt::workbook::manifest</definition>
        <argsstring>()</argsstring>
        <name>manifest</name>
        <briefdescription>
<para>Returns a reference to the workbook&apos;s internal manifest. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="746" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1341" bodyend="1344"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aa60636892e2844d2a07ced3d948caee1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1manifest" kindref="compound">manifest</ref> &amp;</type>
        <definition>const manifest &amp; xlnt::workbook::manifest</definition>
        <argsstring>() const</argsstring>
        <name>manifest</name>
        <briefdescription>
<para>Returns a reference to the workbook&apos;s internal manifest. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="751" column="25" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1346" bodyend="1349"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a33f2f7db17a773cd3f7702c26d2d8681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t xlnt::workbook::add_shared_string</definition>
        <argsstring>(const rich_text &amp;shared, bool allow_duplicates=false)</argsstring>
        <name>add_shared_string</name>
        <param>
          <type>const <ref refid="classxlnt_1_1rich__text" kindref="compound">rich_text</ref> &amp;</type>
          <declname>shared</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allow_duplicates</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Append a shared string to the shared string collection in this workbook. This should not generally be called unless you know what you&apos;re doing. If allow_duplicates is false and the string is already in the collection, it will not be added. Returns the index of the added string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="761" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1379" bodyend="1398"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a61806ab9e54788ca4ff63b36f6a7f324" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::map&lt; std::size_t, <ref refid="classxlnt_1_1rich__text" kindref="compound">rich_text</ref> &gt; &amp;</type>
        <definition>const std::map&lt; std::size_t, rich_text &gt; &amp; xlnt::workbook::shared_strings_by_id</definition>
        <argsstring>() const</argsstring>
        <name>shared_strings_by_id</name>
        <briefdescription>
<para>Returns a reference to the shared string ordered by id </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="766" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1351" bodyend="1354"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a359df829ad66257c280decada567e00a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1rich__text" kindref="compound">rich_text</ref> &amp;</type>
        <definition>const rich_text &amp; xlnt::workbook::shared_strings</definition>
        <argsstring>(std::size_t index) const</argsstring>
        <name>shared_strings</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Returns a reference to the shared string related to the specified index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="771" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1356" bodyend="1367"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aa23f2c8724f57637ef6bc65e45a36d56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; <ref refid="classxlnt_1_1rich__text" kindref="compound">rich_text</ref>, std::size_t, <ref refid="classxlnt_1_1rich__text__hash" kindref="compound">rich_text_hash</ref> &gt; &amp;</type>
        <definition>std::unordered_map&lt; rich_text, std::size_t, rich_text_hash &gt; &amp; xlnt::workbook::shared_strings</definition>
        <argsstring>()</argsstring>
        <name>shared_strings</name>
        <briefdescription>
<para>Returns a reference to the shared strings being used by cells in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="777" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1369" bodyend="1372"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ab9e7b8d2d66b32400c0bbd4125a2c190" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::unordered_map&lt; <ref refid="classxlnt_1_1rich__text" kindref="compound">rich_text</ref>, std::size_t, <ref refid="classxlnt_1_1rich__text__hash" kindref="compound">rich_text_hash</ref> &gt; &amp;</type>
        <definition>const std::unordered_map&lt; rich_text, std::size_t, rich_text_hash &gt; &amp; xlnt::workbook::shared_strings</definition>
        <argsstring>() const</argsstring>
        <name>shared_strings</name>
        <briefdescription>
<para>Returns a reference to the shared strings being used by cells in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="783" column="30" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1374" bodyend="1377"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a6065b51bce10063394f2a9d552915d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::thumbnail</definition>
        <argsstring>(const std::vector&lt; std::uint8_t &gt; &amp;thumbnail, const std::string &amp;extension, const std::string &amp;content_type)</argsstring>
        <name>thumbnail</name>
        <param>
          <type>const std::vector&lt; std::uint8_t &gt; &amp;</type>
          <declname>thumbnail</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>extension</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>content_type</declname>
        </param>
        <briefdescription>
<para>Sets the workbook&apos;s thumbnail to the given vector of bytes, thumbnail, with the given extension (e.g. jpg) and content_type (e.g. image/jpeg). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="791" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1410" bodyend="1422"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1af1e46ad6511fe3c2e1e2d768479dc8ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::uint8_t &gt; &amp;</type>
        <definition>const std::vector&lt; std::uint8_t &gt; &amp; xlnt::workbook::thumbnail</definition>
        <argsstring>() const</argsstring>
        <name>thumbnail</name>
        <briefdescription>
<para>Returns a vector of bytes representing the workbook&apos;s thumbnail. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="797" column="23" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1424" bodyend="1428"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ad9117218cd4446e36c910b7fd158b771" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::has_calculation_properties</definition>
        <argsstring>() const</argsstring>
        <name>has_calculation_properties</name>
        <briefdescription>
<para>Returns true if this workbook has any calculation properties set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="804" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1550" bodyend="1553"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a61daa25a144d3848924d3174298e159c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1calculation__properties" kindref="compound">calculation_properties</ref></type>
        <definition>class calculation_properties xlnt::workbook::calculation_properties</definition>
        <argsstring>() const</argsstring>
        <name>calculation_properties</name>
        <briefdescription>
<para>Returns the calculation properties used in this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="804" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1555" bodyend="1558"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ae798e6baa0054c88086aa75e3d6a385e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::calculation_properties</definition>
        <argsstring>(const class calculation_properties &amp;props)</argsstring>
        <name>calculation_properties</name>
        <param>
          <type>const class <ref refid="classxlnt_1_1calculation__properties" kindref="compound">calculation_properties</ref> &amp;</type>
          <declname>props</declname>
        </param>
        <briefdescription>
<para>Sets the calculation properties of this workbook to props. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="814" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1560" bodyend="1563"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a4566743b50523bacf605705d3ce1faaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> &amp;</type>
        <definition>workbook &amp; xlnt::workbook::operator=</definition>
        <argsstring>(workbook other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Set the contents of this workbook to be equal to those of &quot;other&quot;. Other is passed as value to allow for copy-swap idiom. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="822" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1208" bodyend="1214"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ab268cb437640f05acdb5d9e0e73b231e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::workbook::operator[]</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return the worksheet with a title of &quot;name&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="827" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1148" bodyend="1151"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a61298c4b9a08d7ee1c2ecf5c5d37d73d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
        <definition>worksheet xlnt::workbook::operator[]</definition>
        <argsstring>(std::size_t index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Return the worksheet at &quot;index&quot;. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="832" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1153" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a926b6ac71828ff6eb14854fba8562ccf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::operator==</definition>
        <argsstring>(const workbook &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Return true if this workbook internal implementation points to the same memory as rhs&apos;s. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="838" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1164" bodyend="1167"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a8145cec54c36504f609babb342c40df3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::workbook::operator!=</definition>
        <argsstring>(const workbook &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Return true if this workbook internal implementation doesn&apos;t point to the same memory as rhs&apos;s. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="844" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1169" bodyend="1172"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classxlnt_1_1workbook_1a1c364b5e777d553bce4fd62fb4849f63" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::workbook::workbook</definition>
        <argsstring>(detail::workbook_impl *impl)</argsstring>
        <name>workbook</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1workbook__impl" kindref="compound">detail::workbook_impl</ref> *</type>
          <declname>impl</declname>
        </param>
        <briefdescription>
<para>Private constructor. Constructs a workbook from an implementation pointer. Used by static constructor to resolve circular construction dependency. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="856" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="527" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a40e04e73ddafc1b551bd3dd6f284cc6c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structxlnt_1_1detail_1_1workbook__impl" kindref="compound">detail::workbook_impl</ref> &amp;</type>
        <definition>detail::workbook_impl &amp; xlnt::workbook::impl</definition>
        <argsstring>()</argsstring>
        <name>impl</name>
        <briefdescription>
<para>Returns a reference to the workbook implementation structure. Provides a nicer interface than constantly dereferencing workbook::d_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="862" column="27" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1475" bodyend="1478"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a4ffa1d64a2f37769a16fda2f83b2ab73" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structxlnt_1_1detail_1_1workbook__impl" kindref="compound">detail::workbook_impl</ref> &amp;</type>
        <definition>const detail::workbook_impl &amp; xlnt::workbook::impl</definition>
        <argsstring>() const</argsstring>
        <name>impl</name>
        <briefdescription>
<para>Returns a reference to the workbook implementation structure. Provides a nicer interface than constantly dereferencing workbook::d_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="868" column="33" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1480" bodyend="1483"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a1dcb2b514370a2bea67a162c953c9978" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::register_package_part</definition>
        <argsstring>(relationship_type type)</argsstring>
        <name>register_package_part</name>
        <param>
          <type>relationship_type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Adds a package-level part of the given type to the manifest if it doesn&apos;t already exist. The part will have a path and content type of the default for that particular relationship type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="875" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="539" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1aca3cf99bd57e7a1219bae90050387f80" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::register_workbook_part</definition>
        <argsstring>(relationship_type type)</argsstring>
        <name>register_workbook_part</name>
        <param>
          <type>relationship_type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Adds a workbook-level part of the given type to the manifest if it doesn&apos;t already exist. The part will have a path and content type of the default for that particular relationship type. It will be a relationship target of this workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="883" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="550" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a8d3629c6dc29952b8b85c0314a2d89bf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::register_worksheet_part</definition>
        <argsstring>(worksheet ws, relationship_type type)</argsstring>
        <name>register_worksheet_part</name>
        <param>
          <type><ref refid="classxlnt_1_1worksheet" kindref="compound">worksheet</ref></type>
          <declname>ws</declname>
        </param>
        <param>
          <type>relationship_type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Adds a worksheet-level part of the given type to the manifest if it doesn&apos;t already exist. The part will have a path and content type of the default for that particular relationship type. It will be a relationship target of the given worksheet, ws. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="891" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="564" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a454fcbefe9ce61571305c5d6d3a77281" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::garbage_collect_formulae</definition>
        <argsstring>()</argsstring>
        <name>garbage_collect_formulae</name>
        <briefdescription>
<para>Removes calcChain part from manifest if no formulae remain in workbook. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="896" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1565" bodyend="1594"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a2461bd558f9d7ac96c750978fd0d070e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::update_sheet_properties</definition>
        <argsstring>()</argsstring>
        <name>update_sheet_properties</name>
        <briefdescription>
<para>Update extended workbook properties titlesOfParts and headingPairs when sheets change. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="901" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1596" bodyend="1608"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1a56aecec262fd675cec4dd2a056d31c73" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::swap</definition>
        <argsstring>(workbook &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Swaps the data held in this workbook with workbook other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="906" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1174" bodyend="1206"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1workbook_1ab325ac266049ac60cb90755b6d294e04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::workbook::reorder_relationships</definition>
        <argsstring>()</argsstring>
        <name>reorder_relationships</name>
        <briefdescription>
<para>Sheet 1 should be rId1, sheet 2 should be rId2, etc. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="911" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/workbook/workbook.cpp" bodystart="1645" bodyend="1688"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>workbook is the container for all other parts of the document. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" line="91" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/workbook/workbook.hpp" bodystart="92" bodyend="917"/>
    <listofallmembers>
      <member refid="classxlnt_1_1workbook_1ab9e1d7d89cf090bc99ba8c3294bc61ab" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>abs_path</name></member>
      <member refid="classxlnt_1_1workbook_1a611b6b2587e8530a81dd086d0eb0b11b" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>active_sheet</name></member>
      <member refid="classxlnt_1_1workbook_1a33f2f7db17a773cd3f7702c26d2d8681" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>add_shared_string</name></member>
      <member refid="classxlnt_1_1workbook_1a682a585084f7fa8254f19f3f4abc400c" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>app_name</name></member>
      <member refid="classxlnt_1_1workbook_1a993aa46199d76b4bc24b3b16733cfa13" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>apply_to_cells</name></member>
      <member refid="classxlnt_1_1workbook_1a1ccbb79db2289f31a7c7f4014a4d1b5b" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>arch_id_flags</name></member>
      <member refid="classxlnt_1_1workbook_1a80163555fb42a5529fed34a3a16f8863" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>base_date</name></member>
      <member refid="classxlnt_1_1workbook_1a255ea03fb00c34a414bd7d025b2812fe" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>base_date</name></member>
      <member refid="classxlnt_1_1workbook_1a85f937d1f1c203b7cc7187eb41bc0480" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>begin</name></member>
      <member refid="classxlnt_1_1workbook_1a65be0e7316aeb5a7dca5b787236560fe" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>begin</name></member>
      <member refid="classxlnt_1_1workbook_1a61daa25a144d3848924d3174298e159c" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>calculation_properties</name></member>
      <member refid="classxlnt_1_1workbook_1ae798e6baa0054c88086aa75e3d6a385e" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>calculation_properties</name></member>
      <member refid="classxlnt_1_1workbook_1ad73d0400208f1ba8d033368fed16ca4f" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>cbegin</name></member>
      <member refid="classxlnt_1_1workbook_1aeb6f93ab12f9db098c293c76f8d176e0" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>cend</name></member>
      <member refid="classxlnt_1_1workbook_1a9004e7a2752485b27bf063f6e12c2ace" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>clear</name></member>
      <member refid="classxlnt_1_1workbook_1a0460152745a9801d2ff5d44ee12cc5ba" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>clear_formats</name></member>
      <member refid="classxlnt_1_1workbook_1a953c5f9fa269606dbd92cac48e89635a" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>clear_styles</name></member>
      <member refid="classxlnt_1_1workbook_1a987a232ba82f37044a056f178e2ad69b" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>code_name</name></member>
      <member refid="classxlnt_1_1workbook_1a9d7be7eb4c280451b018e63b5ad8cd2a" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>code_name</name></member>
      <member refid="classxlnt_1_1workbook_1a4bcfb01cc3e1863dfa355f27c1eb6938" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>const_iterator</name></member>
      <member refid="classxlnt_1_1workbook_1a7d1b42fa3144d4eba9e1ca3cbc85ae7c" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>const_reverse_iterator</name></member>
      <member refid="classxlnt_1_1workbook_1a2d97a8d513cc0b36e99cc065b990c7e5" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>contains</name></member>
      <member refid="classxlnt_1_1workbook_1aa0b8cf49d7cc4bbb98a9bd21fc939896" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>copy_sheet</name></member>
      <member refid="classxlnt_1_1workbook_1a55d04adc74fc9b52f9a08d604eb00f87" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>copy_sheet</name></member>
      <member refid="classxlnt_1_1workbook_1afa49fcecaeaef2bad6e028eea604ab72" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>core_properties</name></member>
      <member refid="classxlnt_1_1workbook_1a1b8a8b01b1b3b09b89b99ea9c9337714" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>core_property</name></member>
      <member refid="classxlnt_1_1workbook_1a31886abd4984228b8117f51ef8a17490" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>core_property</name></member>
      <member refid="classxlnt_1_1workbook_1a7010ce4e4b12c9d16a7039b3358c17f3" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>create_builtin_style</name></member>
      <member refid="classxlnt_1_1workbook_1a7195f09e69e62e953735bd4d3458ec78" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>create_format</name></member>
      <member refid="classxlnt_1_1workbook_1a424ec3ca238fe529de5421e8b91b26a1" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>create_named_range</name></member>
      <member refid="classxlnt_1_1workbook_1a49ddbcb4ce8af349949fc1ba8ad925b0" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>create_named_range</name></member>
      <member refid="classxlnt_1_1workbook_1a9ef148f73657168a019d85193af7adc1" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>create_sheet</name></member>
      <member refid="classxlnt_1_1workbook_1a123c1c070aa39142512d1cdc669e5f37" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>create_sheet</name></member>
      <member refid="classxlnt_1_1workbook_1a477fd883865f426a0c4a38905e0c03ad" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>create_sheet_with_rel</name></member>
      <member refid="classxlnt_1_1workbook_1a5bff992e2fdc47cbf80ef242c95adf50" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>create_style</name></member>
      <member refid="classxlnt_1_1workbook_1a30ad3041b561dae675e37eb9c0094299" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>custom_properties</name></member>
      <member refid="classxlnt_1_1workbook_1a269f36e3283e19a758a6890fa89b3fbf" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>custom_property</name></member>
      <member refid="classxlnt_1_1workbook_1afe7c588e77a1f812c33842c29e715878" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>custom_property</name></member>
      <member refid="classxlnt_1_1workbook_1a8415b163e5cb9d267ebaf6dc8a71bb87" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>d_</name></member>
      <member refid="classxlnt_1_1workbook_1a55074b419176614d1d2515952de13cd9" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>default_slicer_style</name></member>
      <member refid="classxlnt_1_1workbook_1a531d36bd620b251d07c82496b1788077" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>default_slicer_style</name></member>
      <member refid="classxlnt_1_1workbook_1a5c27ff96f65a231e21871a228cbaf740" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>detail::xlsx_consumer</name></member>
      <member refid="classxlnt_1_1workbook_1aeaa1b2a5f3d37ddb4b8ca1ebaab144f3" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>detail::xlsx_producer</name></member>
      <member refid="classxlnt_1_1workbook_1a51326c9e04e77021605b73d810fea63e" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>disable_known_fonts</name></member>
      <member refid="classxlnt_1_1workbook_1a6b4088d80b9fb40a1c965d8f19441a41" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>empty</name></member>
      <member refid="classxlnt_1_1workbook_1a0bf18f2c8d7f4b0e6284b71830000c01" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>enable_known_fonts</name></member>
      <member refid="classxlnt_1_1workbook_1a1f4f65d238199cbd3a5ff4f3f537e224" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>end</name></member>
      <member refid="classxlnt_1_1workbook_1ae0bba07094349bd5ee3157e5b59a9e2e" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>end</name></member>
      <member refid="classxlnt_1_1workbook_1a7cd33c11e3929a5381099d2797d886f8" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>extended_properties</name></member>
      <member refid="classxlnt_1_1workbook_1a7c50cc677ffaf4c7a9577bfc4c07ef55" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>extended_property</name></member>
      <member refid="classxlnt_1_1workbook_1a1a2e03e9ced399aa3bba796680276dea" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>extended_property</name></member>
      <member refid="classxlnt_1_1workbook_1a26aaa1f893992621d1058e1e300f8e97" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>format</name></member>
      <member refid="classxlnt_1_1workbook_1a1333c571c638ad61893a60233c14dc89" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>format</name></member>
      <member refid="classxlnt_1_1workbook_1a454fcbefe9ce61571305c5d6d3a77281" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>garbage_collect_formulae</name></member>
      <member refid="classxlnt_1_1workbook_1ad9117218cd4446e36c910b7fd158b771" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>has_calculation_properties</name></member>
      <member refid="classxlnt_1_1workbook_1aa6a39d1daeb8304ec1bb55b7863f1b11" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>has_code_name</name></member>
      <member refid="classxlnt_1_1workbook_1abc6c82900353834cd14ec131270d3e18" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>has_core_property</name></member>
      <member refid="classxlnt_1_1workbook_1a7fe86dca0cf73068ee222f91c9b6af26" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>has_custom_property</name></member>
      <member refid="classxlnt_1_1workbook_1a7085469bc589720ed7ecfcf3f1284e05" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>has_extended_property</name></member>
      <member refid="classxlnt_1_1workbook_1a4972c77c92ccd06559de16de86833135" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>has_file_version</name></member>
      <member refid="classxlnt_1_1workbook_1a0738aca0f6f9228d12e3a0bd45036917" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>has_named_range</name></member>
      <member refid="classxlnt_1_1workbook_1a21ddb585620af57719db5d1299dbaab1" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>has_style</name></member>
      <member refid="classxlnt_1_1workbook_1a21c6b08580d01d41f7786bd93c902a22" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>has_theme</name></member>
      <member refid="classxlnt_1_1workbook_1af44100a63859e6a8a43b6bbe063467db" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>has_title</name></member>
      <member refid="classxlnt_1_1workbook_1a688bac5dc153275cbadb1173941d2873" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>has_view</name></member>
      <member refid="classxlnt_1_1workbook_1a40e04e73ddafc1b551bd3dd6f284cc6c" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>impl</name></member>
      <member refid="classxlnt_1_1workbook_1a4ffa1d64a2f37769a16fda2f83b2ab73" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>impl</name></member>
      <member refid="classxlnt_1_1workbook_1a681f4aa4cc186a4238c0e207eb12def9" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>index</name></member>
      <member refid="classxlnt_1_1workbook_1ae2f1be96b599bc45f067d70609821312" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>iterator</name></member>
      <member refid="classxlnt_1_1workbook_1a8a82720d03407c490cb261aef33188ce" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>known_fonts_enabled</name></member>
      <member refid="classxlnt_1_1workbook_1a6d22a2b5776b58994c0e746f1c82f123" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>last_edited</name></member>
      <member refid="classxlnt_1_1workbook_1ad835d8c19e8312765035c46d212c8c3f" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>load</name></member>
      <member refid="classxlnt_1_1workbook_1a4a79b92c32e259d72dc049c491b8182f" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>load</name></member>
      <member refid="classxlnt_1_1workbook_1a4cdba244fd180934d961f9ad39e8edc1" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>load</name></member>
      <member refid="classxlnt_1_1workbook_1a94b53390ea78261bb4e198a6956b1738" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>load</name></member>
      <member refid="classxlnt_1_1workbook_1af52a71ac7b10d357601b9a4cc0f5aa5b" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>load</name></member>
      <member refid="classxlnt_1_1workbook_1a8bf547513ee82f7c029a246aea50d965" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>load</name></member>
      <member refid="classxlnt_1_1workbook_1aaed45d3eeb5cb1f1da48becc3ef64e0a" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>load</name></member>
      <member refid="classxlnt_1_1workbook_1a7f7297a19ac80cf20b79cd77b4e4efde" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>load</name></member>
      <member refid="classxlnt_1_1workbook_1a046be4caba0c55af13c88bceabc21e23" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>lowest_edited</name></member>
      <member refid="classxlnt_1_1workbook_1a584d4cfeb0fa3deae6cb8eafa70bc9bb" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>manifest</name></member>
      <member refid="classxlnt_1_1workbook_1aa60636892e2844d2a07ced3d948caee1" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>manifest</name></member>
      <member refid="classxlnt_1_1workbook_1adb52963419bd676a6367675822a953c0" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>named_range</name></member>
      <member refid="classxlnt_1_1workbook_1a776553c6b3470685901b03722b2d7f36" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>named_ranges</name></member>
      <member refid="classxlnt_1_1workbook_1a8145cec54c36504f609babb342c40df3" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>operator!=</name></member>
      <member refid="classxlnt_1_1workbook_1a4566743b50523bacf605705d3ce1faaf" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>operator=</name></member>
      <member refid="classxlnt_1_1workbook_1a926b6ac71828ff6eb14854fba8562ccf" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>operator==</name></member>
      <member refid="classxlnt_1_1workbook_1ab268cb437640f05acdb5d9e0e73b231e" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>operator[]</name></member>
      <member refid="classxlnt_1_1workbook_1a61298c4b9a08d7ee1c2ecf5c5d37d73d" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>operator[]</name></member>
      <member refid="classxlnt_1_1workbook_1a1dcb2b514370a2bea67a162c953c9978" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>register_package_part</name></member>
      <member refid="classxlnt_1_1workbook_1aca3cf99bd57e7a1219bae90050387f80" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>register_workbook_part</name></member>
      <member refid="classxlnt_1_1workbook_1a8d3629c6dc29952b8b85c0314a2d89bf" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>register_worksheet_part</name></member>
      <member refid="classxlnt_1_1workbook_1a12f202b67bad4a9bddb162e540459d11" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>remove_named_range</name></member>
      <member refid="classxlnt_1_1workbook_1a2471d1ef981a728d5a302c2de8a08da3" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>remove_sheet</name></member>
      <member refid="classxlnt_1_1workbook_1ab325ac266049ac60cb90755b6d294e04" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>reorder_relationships</name></member>
      <member refid="classxlnt_1_1workbook_1acbadbee48fbc52777b43a05e0ae474c1" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>reverse_iterator</name></member>
      <member refid="classxlnt_1_1workbook_1a0af8f387784d19aa51b934f4087fe16e" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>rup_build</name></member>
      <member refid="classxlnt_1_1workbook_1aeadec7536f669d4cf356753fa49f3b6b" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>save</name></member>
      <member refid="classxlnt_1_1workbook_1ad52bae127b687629c50388511d3efa7b" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>save</name></member>
      <member refid="classxlnt_1_1workbook_1afdda068926fbd9b649cbb863cc194a5c" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>save</name></member>
      <member refid="classxlnt_1_1workbook_1aadab1b2286bfe8b5f955bae09abf064a" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>save</name></member>
      <member refid="classxlnt_1_1workbook_1af9cc0c2dc0c7466a751496a48bdf42ac" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>save</name></member>
      <member refid="classxlnt_1_1workbook_1aba72a11bef5cfeba6dbdc6fda6277f93" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>save</name></member>
      <member refid="classxlnt_1_1workbook_1a6850eb6a525cdff4b549b687d2f59c2d" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>save</name></member>
      <member refid="classxlnt_1_1workbook_1af205c8493a7e928a5d0a515c288eee49" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>save</name></member>
      <member refid="classxlnt_1_1workbook_1a359df829ad66257c280decada567e00a" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>shared_strings</name></member>
      <member refid="classxlnt_1_1workbook_1aa23f2c8724f57637ef6bc65e45a36d56" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>shared_strings</name></member>
      <member refid="classxlnt_1_1workbook_1ab9e7b8d2d66b32400c0bbd4125a2c190" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>shared_strings</name></member>
      <member refid="classxlnt_1_1workbook_1a61806ab9e54788ca4ff63b36f6a7f324" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>shared_strings_by_id</name></member>
      <member refid="classxlnt_1_1workbook_1a0e78f73956583af3c8ccd5085509374f" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>sheet_by_id</name></member>
      <member refid="classxlnt_1_1workbook_1ac64ccc2aa44cb168d437ec4b0a1a1a55" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>sheet_by_id</name></member>
      <member refid="classxlnt_1_1workbook_1af1b3ed735b5d9be4115f9ac987081913" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>sheet_by_index</name></member>
      <member refid="classxlnt_1_1workbook_1abd4099049718a28e09ae5c049058415a" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>sheet_by_index</name></member>
      <member refid="classxlnt_1_1workbook_1a3e0382e7d5bc111386f53e1802f5e59e" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>sheet_by_title</name></member>
      <member refid="classxlnt_1_1workbook_1ab7a1e6a42a4fbb1c436a93e6c2e6a516" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>sheet_by_title</name></member>
      <member refid="classxlnt_1_1workbook_1a6de32e90786dc838bda2c921ff7c7ef3" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>sheet_count</name></member>
      <member refid="classxlnt_1_1workbook_1ace8a3436cd08d64708084ba9d277cf09" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>sheet_titles</name></member>
      <member refid="classxlnt_1_1workbook_1a8096f5b50cedaf1bf28b5017acf32dd7" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>streaming_workbook_reader</name></member>
      <member refid="classxlnt_1_1workbook_1ae3c7cbfbe873f63caffb9330a4fc2736" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>style</name></member>
      <member refid="classxlnt_1_1workbook_1a8ae112dec6955e868c332825657860d2" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>style</name></member>
      <member refid="classxlnt_1_1workbook_1a56aecec262fd675cec4dd2a056d31c73" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>swap</name></member>
      <member refid="classxlnt_1_1workbook_1a1065725b271fc12f28529d5ce9a95188" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>theme</name></member>
      <member refid="classxlnt_1_1workbook_1a5490b36d17a3121f1ed487be06ec3ee4" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>theme</name></member>
      <member refid="classxlnt_1_1workbook_1a6065b51bce10063394f2a9d552915d1c" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>thumbnail</name></member>
      <member refid="classxlnt_1_1workbook_1af1e46ad6511fe3c2e1e2d768479dc8ff" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>thumbnail</name></member>
      <member refid="classxlnt_1_1workbook_1a767a08afda3d464c0b9c9d80dcb4a3c3" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>title</name></member>
      <member refid="classxlnt_1_1workbook_1ad11588655cb15f5ea9ed21233c61f39b" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>title</name></member>
      <member refid="classxlnt_1_1workbook_1a2461bd558f9d7ac96c750978fd0d070e" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>update_sheet_properties</name></member>
      <member refid="classxlnt_1_1workbook_1a38783491f5a090b92299b2e44f81fa6d" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>view</name></member>
      <member refid="classxlnt_1_1workbook_1a689896c1ebfb9dba606bbfc7cbcd5b1f" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>view</name></member>
      <member refid="classxlnt_1_1workbook_1a833468d87f0683c0f13f09eacfc422ba" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1workbook_1aabe2c4076508526709173ce7b1844960" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1workbook_1aa42e9d910a6c8960f296236fb1096193" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1workbook_1a767f3db85df3ccdd357d59e354622596" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1workbook_1a0523e9012cb4917e76038ea3da432b43" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1workbook_1a63732bb538e5cbcaac6ec014a445d5eb" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1workbook_1aa43405161ce26b7e171cc05b8461835c" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1workbook_1a1c364b5e777d553bce4fd62fb4849f63" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>workbook</name></member>
      <member refid="classxlnt_1_1workbook_1a2b22a8cfb2fb426bfaad8dee4c888707" prot="private" virt="non-virtual"><scope>xlnt::workbook</scope><name>worksheet</name></member>
      <member refid="classxlnt_1_1workbook_1a12ddbfa450b8bc3dc3d7b049f39d57e9" prot="public" virt="non-virtual"><scope>xlnt::workbook</scope><name>~workbook</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
