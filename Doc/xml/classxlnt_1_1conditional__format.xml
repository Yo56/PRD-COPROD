<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classxlnt_1_1conditional__format" kind="class" language="C++" prot="public">
    <compoundname>xlnt::conditional_format</compoundname>
    <includes refid="conditional__format_8hpp" local="no">conditional_format.hpp</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classxlnt_1_1conditional__format_1a8f7c8587d229b210b77937e24479888f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct detail::stylesheet</definition>
        <argsstring></argsstring>
        <name>detail::stylesheet</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1stylesheet" kindref="compound">detail::stylesheet</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="156" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classxlnt_1_1conditional__format_1a5c27ff96f65a231e21871a228cbaf740" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class detail::xlsx_consumer</definition>
        <argsstring></argsstring>
        <name>detail::xlsx_consumer</name>
        <param>
          <type><ref refid="classxlnt_1_1detail_1_1xlsx__consumer" kindref="compound">detail::xlsx_consumer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="157" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxlnt_1_1conditional__format_1a66d10c9c3f921117108134e44f7a2e1a" prot="private" static="no" mutable="no">
        <type><ref refid="structxlnt_1_1detail_1_1conditional__format__impl" kindref="compound">detail::conditional_format_impl</ref> *</type>
        <definition>detail::conditional_format_impl* xlnt::conditional_format::d_</definition>
        <argsstring></argsstring>
        <name>d_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="167" column="37" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1a441146614d6e71f922b264ee221c0ccf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::conditional_format::conditional_format</definition>
        <argsstring>()=delete</argsstring>
        <name>conditional_format</name>
        <briefdescription>
<para>Delete zero-argument constructor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="91" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1a0d4467b91ce52afc7ca70cf3fa68e59c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::conditional_format::conditional_format</definition>
        <argsstring>(const conditional_format &amp;other)=default</argsstring>
        <name>conditional_format</name>
        <param>
          <type>const <ref refid="classxlnt_1_1conditional__format" kindref="compound">conditional_format</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Default copy constructor. Constructs a format using the same PIMPL as other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="96" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1a3d491979c5d62e8807d34e9eb645b274" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::conditional_format::has_border</definition>
        <argsstring>() const</argsstring>
        <name>has_border</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="103" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="85" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1a27fa0eda37bfd77dc5f6153c3939e458" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1border" kindref="compound">border</ref></type>
        <definition>xlnt::border xlnt::conditional_format::border</definition>
        <argsstring>() const</argsstring>
        <name>border</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="103" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1aca085b7f70c937d550280be5e821d720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1conditional__format" kindref="compound">conditional_format</ref></type>
        <definition>conditional_format xlnt::conditional_format::border</definition>
        <argsstring>(const xlnt::border &amp;new_border)</argsstring>
        <name>border</name>
        <param>
          <type>const <ref refid="classxlnt_1_1border" kindref="compound">xlnt::border</ref> &amp;</type>
          <declname>new_border</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="113" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1a07a2bcca9f078d6e9e0416fae0a6546b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::conditional_format::has_fill</definition>
        <argsstring>() const</argsstring>
        <name>has_fill</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="118" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1a86f46fa0664bffb686d865c3b5ddce73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1fill" kindref="compound">fill</ref></type>
        <definition>xlnt::fill xlnt::conditional_format::fill</definition>
        <argsstring>() const</argsstring>
        <name>fill</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="118" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1a72813e5694cf1aa73d0513e2e0b1fce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1conditional__format" kindref="compound">conditional_format</ref></type>
        <definition>conditional_format xlnt::conditional_format::fill</definition>
        <argsstring>(const xlnt::fill &amp;new_fill)</argsstring>
        <name>fill</name>
        <param>
          <type>const <ref refid="classxlnt_1_1fill" kindref="compound">xlnt::fill</ref> &amp;</type>
          <declname>new_fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="128" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1a82716f683438df2bbba22207a220fd03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::conditional_format::has_font</definition>
        <argsstring>() const</argsstring>
        <name>has_font</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="133" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1ae19e85169c2818f8fde2c42d43e4c507" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1font" kindref="compound">font</ref></type>
        <definition>xlnt::font xlnt::conditional_format::font</definition>
        <argsstring>() const</argsstring>
        <name>font</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="133" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1adf282d3f7b7b510d0d2f2f51c5443399" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1conditional__format" kindref="compound">conditional_format</ref></type>
        <definition>conditional_format xlnt::conditional_format::font</definition>
        <argsstring>(const xlnt::font &amp;new_font)</argsstring>
        <name>font</name>
        <param>
          <type>const <ref refid="classxlnt_1_1font" kindref="compound">xlnt::font</ref> &amp;</type>
          <declname>new_font</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="143" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="127" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1a0efc765df6a4ec50368224aa6d53d4f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::conditional_format::operator==</definition>
        <argsstring>(const conditional_format &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1conditional__format" kindref="compound">conditional_format</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this format is equivalent to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="148" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1a1598dce4288492cffb92f3d339c9b9ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::conditional_format::operator!=</definition>
        <argsstring>(const conditional_format &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1conditional__format" kindref="compound">conditional_format</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this format is not equivalent to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="153" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="80" bodyend="83"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classxlnt_1_1conditional__format_1a8f0ffc599c2f45751f369a2b58483c60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::conditional_format::conditional_format</definition>
        <argsstring>(detail::conditional_format_impl *d)</argsstring>
        <name>conditional_format</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1conditional__format__impl" kindref="compound">detail::conditional_format_impl</ref> *</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="162" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/conditional_format.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Describes a conditional format that will be applied to all cells in the associated range that satisfy the condition. This can only be constructed using methods on worksheet or range. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" line="85" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/conditional_format.hpp" bodystart="86" bodyend="168"/>
    <listofallmembers>
      <member refid="classxlnt_1_1conditional__format_1a27fa0eda37bfd77dc5f6153c3939e458" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>border</name></member>
      <member refid="classxlnt_1_1conditional__format_1aca085b7f70c937d550280be5e821d720" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>border</name></member>
      <member refid="classxlnt_1_1conditional__format_1a441146614d6e71f922b264ee221c0ccf" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>conditional_format</name></member>
      <member refid="classxlnt_1_1conditional__format_1a0d4467b91ce52afc7ca70cf3fa68e59c" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>conditional_format</name></member>
      <member refid="classxlnt_1_1conditional__format_1a8f0ffc599c2f45751f369a2b58483c60" prot="private" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>conditional_format</name></member>
      <member refid="classxlnt_1_1conditional__format_1a66d10c9c3f921117108134e44f7a2e1a" prot="private" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>d_</name></member>
      <member refid="classxlnt_1_1conditional__format_1a8f7c8587d229b210b77937e24479888f" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>detail::stylesheet</name></member>
      <member refid="classxlnt_1_1conditional__format_1a5c27ff96f65a231e21871a228cbaf740" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>detail::xlsx_consumer</name></member>
      <member refid="classxlnt_1_1conditional__format_1a86f46fa0664bffb686d865c3b5ddce73" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>fill</name></member>
      <member refid="classxlnt_1_1conditional__format_1a72813e5694cf1aa73d0513e2e0b1fce1" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>fill</name></member>
      <member refid="classxlnt_1_1conditional__format_1ae19e85169c2818f8fde2c42d43e4c507" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>font</name></member>
      <member refid="classxlnt_1_1conditional__format_1adf282d3f7b7b510d0d2f2f51c5443399" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>font</name></member>
      <member refid="classxlnt_1_1conditional__format_1a3d491979c5d62e8807d34e9eb645b274" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>has_border</name></member>
      <member refid="classxlnt_1_1conditional__format_1a07a2bcca9f078d6e9e0416fae0a6546b" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>has_fill</name></member>
      <member refid="classxlnt_1_1conditional__format_1a82716f683438df2bbba22207a220fd03" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>has_font</name></member>
      <member refid="classxlnt_1_1conditional__format_1a1598dce4288492cffb92f3d339c9b9ee" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>operator!=</name></member>
      <member refid="classxlnt_1_1conditional__format_1a0efc765df6a4ec50368224aa6d53d4f7" prot="public" virt="non-virtual"><scope>xlnt::conditional_format</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
