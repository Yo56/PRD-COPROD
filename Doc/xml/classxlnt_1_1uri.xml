<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classxlnt_1_1uri" kind="class" language="C++" prot="public">
    <compoundname>xlnt::uri</compoundname>
    <includes refid="uri_8hpp" local="no">uri.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxlnt_1_1uri_1a0f5a9e60464defcadf9507929053cd59" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::uri::absolute_</definition>
        <argsstring></argsstring>
        <name>absolute_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>True if this URI is absolute. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="176" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1a608d57b3fcfdddff5e457818f1ec9f99" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string xlnt::uri::scheme_</definition>
        <argsstring></argsstring>
        <name>scheme_</name>
        <briefdescription>
<para>The scheme, like &quot;http&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="181" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1afcde627631c9bcfcf5f4a786fc303c39" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::uri::has_authentication_</definition>
        <argsstring></argsstring>
        <name>has_authentication_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>True if this URI has an authentication section. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="186" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1a5f8868a16ab01a5799698d68dfe1fa77" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string xlnt::uri::username_</definition>
        <argsstring></argsstring>
        <name>username_</name>
        <briefdescription>
<para>The username </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="191" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1ad013a8f5fd2efb4804f0fdf5680889ee" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string xlnt::uri::password_</definition>
        <argsstring></argsstring>
        <name>password_</name>
        <briefdescription>
<para>The password </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="196" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1a8c1e3cf46d7b18197dc0f29e8cc9a545" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string xlnt::uri::host_</definition>
        <argsstring></argsstring>
        <name>host_</name>
        <briefdescription>
<para>The host </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="201" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1afae0a1d26206a2a8faad9a2311ec82e9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::uri::has_port_</definition>
        <argsstring></argsstring>
        <name>has_port_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>True if this URI has a non-default port specified </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="206" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1aac0a2c79942c0799f119c12acdc52971" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t xlnt::uri::port_</definition>
        <argsstring></argsstring>
        <name>port_</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The numeric port </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="211" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1a9edc32642bfa444348d17fe3656d053c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::uri::has_query_</definition>
        <argsstring></argsstring>
        <name>has_query_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>True if this URI has a query section </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="216" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1af9879e1bcea071b21213e4f0667808dc" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string xlnt::uri::query_</definition>
        <argsstring></argsstring>
        <name>query_</name>
        <briefdescription>
<para>The query section </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="221" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1af4cd272152ab2c73563a720a58eec0b8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::uri::has_fragment_</definition>
        <argsstring></argsstring>
        <name>has_fragment_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>True if this URI has a fragment section </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="226" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1a97a4491a4fed5148a805ac3572dcdb58" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string xlnt::uri::fragment_</definition>
        <argsstring></argsstring>
        <name>fragment_</name>
        <briefdescription>
<para>The fragment section </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="231" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1uri_1add4126cc6f49338d9fe0fceb5ba14184" prot="private" static="no" mutable="no">
        <type>class <ref refid="classxlnt_1_1path" kindref="compound">path</ref></type>
        <definition>class path xlnt::uri::path_</definition>
        <argsstring></argsstring>
        <name>path_</name>
        <briefdescription>
<para>The path section </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="231" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxlnt_1_1uri_1a7ba67292d42fc962ea9b6abfb47bd888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::uri::uri</definition>
        <argsstring>()</argsstring>
        <name>uri</name>
        <briefdescription>
<para>Constructs an empty URI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="43" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/packaging/uri.cpp" bodystart="5" bodyend="7"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1a3c9f471bd8e5e6771fcb397f6257964d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::uri::uri</definition>
        <argsstring>(const uri &amp;base, const uri &amp;relative)</argsstring>
        <name>uri</name>
        <param>
          <type>const <ref refid="classxlnt_1_1uri" kindref="compound">uri</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1uri" kindref="compound">uri</ref> &amp;</type>
          <declname>relative</declname>
        </param>
        <briefdescription>
<para>Constructs a URI by combining base with relative. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="48" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1a8a0b10a6e47633510e8cfbb9ceff3da6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::uri::uri</definition>
        <argsstring>(const uri &amp;base, const path &amp;relative)</argsstring>
        <name>uri</name>
        <param>
          <type>const <ref refid="classxlnt_1_1uri" kindref="compound">uri</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1path" kindref="compound">path</ref> &amp;</type>
          <declname>relative</declname>
        </param>
        <briefdescription>
<para>Constructs a URI by combining base with relative path. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="53" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1a56d19e26e1ba6d01516155b2e607925f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::uri::uri</definition>
        <argsstring>(const std::string &amp;uri_string)</argsstring>
        <name>uri</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>uri_string</declname>
        </param>
        <briefdescription>
<para>Constructs a URI by parsing the given uri_string. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="58" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/packaging/uri.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1a3f06c6ab88bfbc667a10b3a376eee341" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::uri::is_relative</definition>
        <argsstring>() const</argsstring>
        <name>is_relative</name>
        <briefdescription>
<para>Returns true if this URI is relative. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="63" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1afe54d7867124e2e6b1da001be4343f8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::uri::is_absolute</definition>
        <argsstring>() const</argsstring>
        <name>is_absolute</name>
        <briefdescription>
<para>Returns true if this URI is not relative (i.e. absolute). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="68" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1abadbed6cb6eed479119eca5f22e7ad4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::uri::scheme</definition>
        <argsstring>() const</argsstring>
        <name>scheme</name>
        <briefdescription>
<para>Returns the scheme of this URI. E.g. the scheme of <ulink url="http://user:pass@example.com">http://user:pass@example.com</ulink> is &quot;http&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="74" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1a586b7c63004d8d1682896b1a5853c6f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::uri::authority</definition>
        <argsstring>() const</argsstring>
        <name>authority</name>
        <briefdescription>
<para>Returns the authority of this URI. E.g. the authority of <ulink url="http://user:pass@example.com:80/document">http://user:pass@example.com:80/document</ulink> is &quot;user:pass@example.com:80&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="80" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1ad15a53adf32086eb4a93bfcee7be3a65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::uri::has_authentication</definition>
        <argsstring>() const</argsstring>
        <name>has_authentication</name>
        <briefdescription>
<para>Returns true if an authentication section is specified for this URI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="85" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1a61fbf5c45d850a0655c6c06a4dc9de43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::uri::authentication</definition>
        <argsstring>() const</argsstring>
        <name>authentication</name>
        <briefdescription>
<para>Returns the authentication of this URI. E.g. the authentication of <ulink url="http://user:pass@example.com">http://user:pass@example.com</ulink> is &quot;user:pass&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="91" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1aa45a7a8fb8240902b64afe0923e3e303" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::uri::username</definition>
        <argsstring>() const</argsstring>
        <name>username</name>
        <briefdescription>
<para>Returns the username of this URI. E.g. the username of <ulink url="http://user:pass@example.com">http://user:pass@example.com</ulink> is &quot;user&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="97" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1aa2d50725cee9b96b36b811d3e7604edd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::uri::password</definition>
        <argsstring>() const</argsstring>
        <name>password</name>
        <briefdescription>
<para>Returns the password of this URI. E.g. the password of <ulink url="http://user:pass@example.com">http://user:pass@example.com</ulink> is &quot;pass&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="103" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1a40ffb288aa571cd2cb52f5a4772a4c4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::uri::host</definition>
        <argsstring>() const</argsstring>
        <name>host</name>
        <briefdescription>
<para>Returns the host of this URI. E.g. the host of <ulink url="http://example.com:80/document">http://example.com:80/document</ulink> is &quot;example.com&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="109" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1a0c22164dc18ee484c78060226fb91b3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::uri::has_port</definition>
        <argsstring>() const</argsstring>
        <name>has_port</name>
        <briefdescription>
<para>Returns true if a non-default port is specified for this URI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="114" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1ad280752472ad85129fc22f9b5ef502ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t xlnt::uri::port</definition>
        <argsstring>() const</argsstring>
        <name>port</name>
        <briefdescription>
<para>Returns the port of this URI. E.g. the port of <ulink url="https://example.com:443/document">https://example.com:443/document</ulink> is &quot;443&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="120" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1ac5eed7c4d96f7dabd0919c2d540b7754" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const class <ref refid="classxlnt_1_1path" kindref="compound">path</ref> &amp;</type>
        <definition>const path &amp; xlnt::uri::path</definition>
        <argsstring>() const</argsstring>
        <name>path</name>
        <briefdescription>
<para>Returns the path of this URI. E.g. the path of <ulink url="http://example.com/document">http://example.com/document</ulink> is &quot;/document&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="126" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/packaging/uri.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1adefb26040b2cc96a1de65de2fa5ecc7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::uri::has_query</definition>
        <argsstring>() const</argsstring>
        <name>has_query</name>
        <briefdescription>
<para>Returns true if this URI has a non-null query string section. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="131" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1a832758706433ac02460644bd87175ebc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::uri::query</definition>
        <argsstring>() const</argsstring>
        <name>query</name>
        <briefdescription>
<para>Returns the query string of this URI. E.g. the query of <ulink url="http://example.com/document?v=1&amp;x=3#abc">http://example.com/document?v=1&amp;x=3#abc</ulink> is &quot;v=1&amp;x=3&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="137" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1aee84bad9b87675fdf263900bb45bb90d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::uri::has_fragment</definition>
        <argsstring>() const</argsstring>
        <name>has_fragment</name>
        <briefdescription>
<para>Returns true if this URI has a non-empty fragment section. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="142" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1af84f58e570ff04a96a12d0c428a60bed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::uri::fragment</definition>
        <argsstring>() const</argsstring>
        <name>fragment</name>
        <briefdescription>
<para>Returns the fragment section of this URI. E.g. the fragment of <ulink url="http://example.com/document#abc">http://example.com/document#abc</ulink> is &quot;abc&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="148" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1a6ccfabb6971665c571bad03b2d52ce56" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string xlnt::uri::to_string</definition>
        <argsstring>() const</argsstring>
        <name>to_string</name>
        <briefdescription>
<para>Returns a string representation of this URI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="153" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/packaging/uri.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1aefe10f91bdb0b6f78c7ba38d26774ffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1uri" kindref="compound">uri</ref></type>
        <definition>uri xlnt::uri::make_absolute</definition>
        <argsstring>(const uri &amp;base)</argsstring>
        <name>make_absolute</name>
        <param>
          <type>const <ref refid="classxlnt_1_1uri" kindref="compound">uri</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>If this URI is relative, an absolute URI will be returned by appending the path to the given absolute base URI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="159" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1a247dd17de4a6f8fc871799e14eabe7e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1uri" kindref="compound">uri</ref></type>
        <definition>uri xlnt::uri::make_reference</definition>
        <argsstring>(const uri &amp;base)</argsstring>
        <name>make_reference</name>
        <param>
          <type>const <ref refid="classxlnt_1_1uri" kindref="compound">uri</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>If this URI is absolute, a relative URI will be returned by removing the common base path from the given absolute base URI. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="165" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1uri_1ad72be3cd127e732aca2d5e3db8a63d2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::uri::operator==</definition>
        <argsstring>(const uri &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1uri" kindref="compound">uri</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this URI is equivalent to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="170" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/packaging/uri.cpp" bodystart="24" bodyend="27"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Encapsulates a uniform resource identifier (URI) as described by RFC 3986. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" line="37" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/packaging/uri.hpp" bodystart="38" bodyend="237"/>
    <listofallmembers>
      <member refid="classxlnt_1_1uri_1a0f5a9e60464defcadf9507929053cd59" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>absolute_</name></member>
      <member refid="classxlnt_1_1uri_1a61fbf5c45d850a0655c6c06a4dc9de43" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>authentication</name></member>
      <member refid="classxlnt_1_1uri_1a586b7c63004d8d1682896b1a5853c6f6" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>authority</name></member>
      <member refid="classxlnt_1_1uri_1af84f58e570ff04a96a12d0c428a60bed" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>fragment</name></member>
      <member refid="classxlnt_1_1uri_1a97a4491a4fed5148a805ac3572dcdb58" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>fragment_</name></member>
      <member refid="classxlnt_1_1uri_1ad15a53adf32086eb4a93bfcee7be3a65" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>has_authentication</name></member>
      <member refid="classxlnt_1_1uri_1afcde627631c9bcfcf5f4a786fc303c39" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>has_authentication_</name></member>
      <member refid="classxlnt_1_1uri_1aee84bad9b87675fdf263900bb45bb90d" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>has_fragment</name></member>
      <member refid="classxlnt_1_1uri_1af4cd272152ab2c73563a720a58eec0b8" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>has_fragment_</name></member>
      <member refid="classxlnt_1_1uri_1a0c22164dc18ee484c78060226fb91b3c" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>has_port</name></member>
      <member refid="classxlnt_1_1uri_1afae0a1d26206a2a8faad9a2311ec82e9" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>has_port_</name></member>
      <member refid="classxlnt_1_1uri_1adefb26040b2cc96a1de65de2fa5ecc7b" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>has_query</name></member>
      <member refid="classxlnt_1_1uri_1a9edc32642bfa444348d17fe3656d053c" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>has_query_</name></member>
      <member refid="classxlnt_1_1uri_1a40ffb288aa571cd2cb52f5a4772a4c4f" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>host</name></member>
      <member refid="classxlnt_1_1uri_1a8c1e3cf46d7b18197dc0f29e8cc9a545" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>host_</name></member>
      <member refid="classxlnt_1_1uri_1afe54d7867124e2e6b1da001be4343f8a" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>is_absolute</name></member>
      <member refid="classxlnt_1_1uri_1a3f06c6ab88bfbc667a10b3a376eee341" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>is_relative</name></member>
      <member refid="classxlnt_1_1uri_1aefe10f91bdb0b6f78c7ba38d26774ffb" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>make_absolute</name></member>
      <member refid="classxlnt_1_1uri_1a247dd17de4a6f8fc871799e14eabe7e7" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>make_reference</name></member>
      <member refid="classxlnt_1_1uri_1ad72be3cd127e732aca2d5e3db8a63d2e" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>operator==</name></member>
      <member refid="classxlnt_1_1uri_1aa2d50725cee9b96b36b811d3e7604edd" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>password</name></member>
      <member refid="classxlnt_1_1uri_1ad013a8f5fd2efb4804f0fdf5680889ee" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>password_</name></member>
      <member refid="classxlnt_1_1uri_1ac5eed7c4d96f7dabd0919c2d540b7754" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>path</name></member>
      <member refid="classxlnt_1_1uri_1add4126cc6f49338d9fe0fceb5ba14184" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>path_</name></member>
      <member refid="classxlnt_1_1uri_1ad280752472ad85129fc22f9b5ef502ed" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>port</name></member>
      <member refid="classxlnt_1_1uri_1aac0a2c79942c0799f119c12acdc52971" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>port_</name></member>
      <member refid="classxlnt_1_1uri_1a832758706433ac02460644bd87175ebc" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>query</name></member>
      <member refid="classxlnt_1_1uri_1af9879e1bcea071b21213e4f0667808dc" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>query_</name></member>
      <member refid="classxlnt_1_1uri_1abadbed6cb6eed479119eca5f22e7ad4f" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>scheme</name></member>
      <member refid="classxlnt_1_1uri_1a608d57b3fcfdddff5e457818f1ec9f99" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>scheme_</name></member>
      <member refid="classxlnt_1_1uri_1a6ccfabb6971665c571bad03b2d52ce56" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>to_string</name></member>
      <member refid="classxlnt_1_1uri_1a7ba67292d42fc962ea9b6abfb47bd888" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>uri</name></member>
      <member refid="classxlnt_1_1uri_1a3c9f471bd8e5e6771fcb397f6257964d" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>uri</name></member>
      <member refid="classxlnt_1_1uri_1a8a0b10a6e47633510e8cfbb9ceff3da6" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>uri</name></member>
      <member refid="classxlnt_1_1uri_1a56d19e26e1ba6d01516155b2e607925f" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>uri</name></member>
      <member refid="classxlnt_1_1uri_1aa45a7a8fb8240902b64afe0923e3e303" prot="public" virt="non-virtual"><scope>xlnt::uri</scope><name>username</name></member>
      <member refid="classxlnt_1_1uri_1a5f8868a16ab01a5799698d68dfe1fa77" prot="private" virt="non-virtual"><scope>xlnt::uri</scope><name>username_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
