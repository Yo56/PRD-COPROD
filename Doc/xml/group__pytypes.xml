<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="group__pytypes" kind="group">
    <compoundname>pytypes</compoundname>
    <title>Pytypes</title>
    <innerclass refid="classpybind11_1_1iterator" prot="public">pybind11::iterator</innerclass>
    <innerclass refid="classpybind11_1_1iterable" prot="public">pybind11::iterable</innerclass>
    <innerclass refid="classpybind11_1_1str" prot="public">pybind11::str</innerclass>
    <innerclass refid="classpybind11_1_1bytes" prot="public">pybind11::bytes</innerclass>
    <innerclass refid="classpybind11_1_1none" prot="public">pybind11::none</innerclass>
    <innerclass refid="classpybind11_1_1bool__" prot="public">pybind11::bool_</innerclass>
    <innerclass refid="classpybind11_1_1int__" prot="public">pybind11::int_</innerclass>
    <innerclass refid="classpybind11_1_1float__" prot="public">pybind11::float_</innerclass>
    <innerclass refid="classpybind11_1_1weakref" prot="public">pybind11::weakref</innerclass>
    <innerclass refid="classpybind11_1_1slice" prot="public">pybind11::slice</innerclass>
    <innerclass refid="classpybind11_1_1capsule" prot="public">pybind11::capsule</innerclass>
    <innerclass refid="classpybind11_1_1tuple" prot="public">pybind11::tuple</innerclass>
    <innerclass refid="classpybind11_1_1dict" prot="public">pybind11::dict</innerclass>
    <innerclass refid="classpybind11_1_1sequence" prot="public">pybind11::sequence</innerclass>
    <innerclass refid="classpybind11_1_1list" prot="public">pybind11::list</innerclass>
    <innerclass refid="classpybind11_1_1args" prot="public">pybind11::args</innerclass>
    <innerclass refid="classpybind11_1_1kwargs" prot="public">pybind11::kwargs</innerclass>
    <innerclass refid="classpybind11_1_1set" prot="public">pybind11::set</innerclass>
    <innerclass refid="classpybind11_1_1function" prot="public">pybind11::function</innerclass>
    <innerclass refid="classpybind11_1_1buffer" prot="public">pybind11::buffer</innerclass>
    <innerclass refid="classpybind11_1_1memoryview" prot="public">pybind11::memoryview</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__pytypes_1ga12ddea01b1dcd952e07b03c209d598a8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pybind11::str::str</definition>
        <argsstring>(handle h)</argsstring>
        <name>str</name>
        <param>
          <type>handle</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\rst Return a string representation of the object. This is analogous to the <computeroutput><ref refid="group__pytypes_1ga12ddea01b1dcd952e07b03c209d598a8" kindref="member">str()</ref></computeroutput> function in Python. \endrst </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pytypes.h" line="810" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/pytypes.h" bodystart="810" bodyend="810"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
