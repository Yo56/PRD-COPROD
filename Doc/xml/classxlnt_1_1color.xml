<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classxlnt_1_1color" kind="class" language="C++" prot="public">
    <compoundname>xlnt::color</compoundname>
    <includes refid="color_8hpp" local="no">color.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxlnt_1_1color_1a116d2949735d53c32c93730931ecf730" prot="private" static="no" mutable="no">
        <type><ref refid="namespacexlnt_1a48b08fbcfa6c350d50d193b4f3feb0a1" kindref="member">color_type</ref></type>
        <definition>color_type xlnt::color::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <briefdescription>
<para>The type of this color </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="322" column="16" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1color_1a6f195f9ccbcec5c75d4f3427b49b5064" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1rgb__color" kindref="compound">rgb_color</ref></type>
        <definition>rgb_color xlnt::color::rgb_</definition>
        <argsstring></argsstring>
        <name>rgb_</name>
        <briefdescription>
<para>The internal RGB color. Only valid when this color has a type of rgb </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="327" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1color_1a2308731d7e4cabd6540e37b947fd2711" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1indexed__color" kindref="compound">indexed_color</ref></type>
        <definition>indexed_color xlnt::color::indexed_</definition>
        <argsstring></argsstring>
        <name>indexed_</name>
        <briefdescription>
<para>The internal RGB color. Only valid when this color has a type of indexed </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="332" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" bodystart="332" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1color_1a3b0a82cd800bd60e09ba06c3ebd15bd4" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1theme__color" kindref="compound">theme_color</ref></type>
        <definition>theme_color xlnt::color::theme_</definition>
        <argsstring></argsstring>
        <name>theme_</name>
        <briefdescription>
<para>The internal RGB color. Only valid when this color has a type of theme </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="337" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1color_1a4167d2e19ca0edb607484d522ad902d7" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; double &gt;</type>
        <definition>optional&lt;double&gt; xlnt::color::tint_</definition>
        <argsstring></argsstring>
        <name>tint_</name>
        <briefdescription>
<para>The tint of this color </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="342" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1color_1aaaecb7a9670b0e423d0d7edabb11ea0b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::color::auto_color</definition>
        <argsstring></argsstring>
        <name>auto_color</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether or not this is an auto color </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="347" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" bodystart="347" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classxlnt_1_1color_1a93fdb682d39e017d2a3ea5617853e742" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref></type>
        <definition>const color xlnt::color::black</definition>
        <argsstring>()</argsstring>
        <name>black</name>
        <briefdescription>
<para>Returns the color #000000 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="170" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a2808376bd1eb70340b97142cdc5ff8c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref></type>
        <definition>const color xlnt::color::white</definition>
        <argsstring>()</argsstring>
        <name>white</name>
        <briefdescription>
<para>Returns the color #ffffff </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="175" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a119bbab92440f4f4512423a8d1094e34" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref></type>
        <definition>const color xlnt::color::red</definition>
        <argsstring>()</argsstring>
        <name>red</name>
        <briefdescription>
<para>Returns the color #ff0000 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="180" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a7febcd18b4058141be63aa94019b0a5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref></type>
        <definition>const color xlnt::color::darkred</definition>
        <argsstring>()</argsstring>
        <name>darkred</name>
        <briefdescription>
<para>Returns the color #8b0000 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="185" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a658c65ae7feb934798ad75da2c543578" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref></type>
        <definition>const color xlnt::color::blue</definition>
        <argsstring>()</argsstring>
        <name>blue</name>
        <briefdescription>
<para>Returns the color #00ff00 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="190" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a90e33cc4b7304241f175c691ce819e77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref></type>
        <definition>const color xlnt::color::darkblue</definition>
        <argsstring>()</argsstring>
        <name>darkblue</name>
        <briefdescription>
<para>Returns the color #008b00 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="195" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a58915420fadbe053ff648d10a49ea9ce" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref></type>
        <definition>const color xlnt::color::green</definition>
        <argsstring>()</argsstring>
        <name>green</name>
        <briefdescription>
<para>Returns the color #0000ff </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="200" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a733a7baabf11e6829276ff69ab2ddaf5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref></type>
        <definition>const color xlnt::color::darkgreen</definition>
        <argsstring>()</argsstring>
        <name>darkgreen</name>
        <briefdescription>
<para>Returns the color #00008b </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="205" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1adac1368210c149dd0cb01771bc5a5e05" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref></type>
        <definition>const color xlnt::color::yellow</definition>
        <argsstring>()</argsstring>
        <name>yellow</name>
        <briefdescription>
<para>Returns the color #ffff00 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="210" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a0affcf6fd7b79f6644e7eb02d16403f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref></type>
        <definition>const color xlnt::color::darkyellow</definition>
        <argsstring>()</argsstring>
        <name>darkyellow</name>
        <briefdescription>
<para>Returns the color #cccc00 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="215" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="190" bodyend="193"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxlnt_1_1color_1a3d72edd877b4de50e84a6aa09cf63a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::color::color</definition>
        <argsstring>()</argsstring>
        <name>color</name>
        <briefdescription>
<para>Constructs a default color </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="220" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1abd3b4e35659f79944ecc30d8393c1239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::color::color</definition>
        <argsstring>(const rgb_color &amp;rgb)</argsstring>
        <name>color</name>
        <param>
          <type>const <ref refid="classxlnt_1_1rgb__color" kindref="compound">rgb_color</ref> &amp;</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
<para>Constructs a color from a given RGB color </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="225" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="200" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a20f9e73a2ed9029ef7518e2bcc8804b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::color::color</definition>
        <argsstring>(const indexed_color &amp;indexed)</argsstring>
        <name>color</name>
        <param>
          <type>const <ref refid="classxlnt_1_1indexed__color" kindref="compound">indexed_color</ref> &amp;</type>
          <declname>indexed</declname>
        </param>
        <briefdescription>
<para>Constructs a color from a given indexed color </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="230" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a84f618cbe85c34fa31ce4ee45ac20baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>xlnt::color::color</definition>
        <argsstring>(const theme_color &amp;theme)</argsstring>
        <name>color</name>
        <param>
          <type>const <ref refid="classxlnt_1_1theme__color" kindref="compound">theme_color</ref> &amp;</type>
          <declname>theme</declname>
        </param>
        <briefdescription>
<para>Constructs a color from a given theme color </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="235" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="216" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a949f9be4cf1afe147a443832773b3912" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacexlnt_1a48b08fbcfa6c350d50d193b4f3feb0a1" kindref="member">color_type</ref></type>
        <definition>color_type xlnt::color::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
<para>Returns the type of this color </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="240" column="16" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a5b6b77592291d5197ad189e7a3ebadb0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::color::auto_</definition>
        <argsstring>() const</argsstring>
        <name>auto_</name>
        <briefdescription>
<para>Returns true if this color has been set to auto </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="245" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1adec6c603b0bde9ee87a163d95fac4afb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::color::auto_</definition>
        <argsstring>(bool value)</argsstring>
        <name>auto_</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the auto property of this color to value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="250" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a5c3740c4627f1d08f6326e5fc6472c10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1rgb__color" kindref="compound">rgb_color</ref> &amp;</type>
        <definition>const rgb_color &amp; xlnt::color::rgb</definition>
        <argsstring>() const</argsstring>
        <name>rgb</name>
        <briefdescription>
<para>Returns the internal indexed color representing this color. If this is not an RGB color, an <ref refid="classxlnt_1_1invalid__attribute" kindref="compound">invalid_attribute</ref> exception will be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="256" column="21" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="263" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a9c3fcc4d1afc3ad9698bd0e771b4b6c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1rgb__color" kindref="compound">rgb_color</ref> &amp;</type>
        <definition>rgb_color &amp; xlnt::color::rgb</definition>
        <argsstring>()</argsstring>
        <name>rgb</name>
        <briefdescription>
<para>Returns the internal indexed color representing this color. If this is not an RGB color, an <ref refid="classxlnt_1_1invalid__attribute" kindref="compound">invalid_attribute</ref> exception will be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="262" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="269" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a8902a8d43844f58ec4a6cbcc267967ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1indexed__color" kindref="compound">indexed_color</ref> &amp;</type>
        <definition>const indexed_color &amp; xlnt::color::indexed</definition>
        <argsstring>() const</argsstring>
        <name>indexed</name>
        <briefdescription>
<para>Returns the internal indexed color representing this color. If this is not an indexed color, an <ref refid="classxlnt_1_1invalid__attribute" kindref="compound">invalid_attribute</ref> exception will be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="268" column="25" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="239" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1ac784157db18a47dc601930fb4afe7cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1indexed__color" kindref="compound">indexed_color</ref> &amp;</type>
        <definition>indexed_color &amp; xlnt::color::indexed</definition>
        <argsstring>()</argsstring>
        <name>indexed</name>
        <briefdescription>
<para>Returns the internal indexed color representing this color. If this is not an indexed color, an <ref refid="classxlnt_1_1invalid__attribute" kindref="compound">invalid_attribute</ref> exception will be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="274" column="19" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="245" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a6cf90438083808e4146fde78c0755da4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classxlnt_1_1theme__color" kindref="compound">theme_color</ref> &amp;</type>
        <definition>const theme_color &amp; xlnt::color::theme</definition>
        <argsstring>() const</argsstring>
        <name>theme</name>
        <briefdescription>
<para>Returns the internal indexed color representing this color. If this is not a theme color, an <ref refid="classxlnt_1_1invalid__attribute" kindref="compound">invalid_attribute</ref> exception will be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="280" column="23" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="251" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a6be909d2418fe456bb66991037f2563c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1theme__color" kindref="compound">theme_color</ref> &amp;</type>
        <definition>theme_color &amp; xlnt::color::theme</definition>
        <argsstring>()</argsstring>
        <name>theme</name>
        <briefdescription>
<para>Returns the internal indexed color representing this color. If this is not a theme color, an <ref refid="classxlnt_1_1invalid__attribute" kindref="compound">invalid_attribute</ref> exception will be thrown. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="286" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="257" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a69514d21e25c23f2f9ef545e03a50a33" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::color::has_tint</definition>
        <argsstring>() const</argsstring>
        <name>has_tint</name>
        <briefdescription>
<para>Returns true if tint is set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="291" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1ac20c39ff8955ea5b04d2a19ffd301f3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double xlnt::color::tint</definition>
        <argsstring>() const</argsstring>
        <name>tint</name>
        <briefdescription>
<para>Returns the tint of this color. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="296" column="12" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a16de922ac187f04d9934ab2db6f6c9ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::color::tint</definition>
        <argsstring>(double tint)</argsstring>
        <name>tint</name>
        <param>
          <type>double</type>
          <declname>tint</declname>
        </param>
        <briefdescription>
<para>Sets the tint of this color to tint. Tints lighten or darken an existing color by multiplying the color with the tint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="301" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1ac658db87f407790d2e5205e0b748ad89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::color::operator==</definition>
        <argsstring>(const color &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this color is equivalent to other </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="306" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="298" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1color_1a338f6fbaf37547a9d8119781299c46b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::color::operator!=</definition>
        <argsstring>(const color &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1color" kindref="compound">color</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this color is not equivalent to other </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="311" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="322" bodyend="325"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classxlnt_1_1color_1ab82a58026150c55087fa5cb8ad4e201f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::color::assert_type</definition>
        <argsstring>(color_type t) const</argsstring>
        <name>assert_type</name>
        <param>
          <type><ref refid="namespacexlnt_1a48b08fbcfa6c350d50d193b4f3feb0a1" kindref="member">color_type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Throws an <ref refid="classxlnt_1_1invalid__attribute" kindref="compound">invalid_attribute</ref> exception if the given type is different from this color&apos;s type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="317" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/color.cpp" bodystart="290" bodyend="296"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Colors can be applied to many parts of a cell&apos;s style. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" line="164" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/color.hpp" bodystart="165" bodyend="348"/>
    <listofallmembers>
      <member refid="classxlnt_1_1color_1ab82a58026150c55087fa5cb8ad4e201f" prot="private" virt="non-virtual"><scope>xlnt::color</scope><name>assert_type</name></member>
      <member refid="classxlnt_1_1color_1a5b6b77592291d5197ad189e7a3ebadb0" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>auto_</name></member>
      <member refid="classxlnt_1_1color_1adec6c603b0bde9ee87a163d95fac4afb" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>auto_</name></member>
      <member refid="classxlnt_1_1color_1aaaecb7a9670b0e423d0d7edabb11ea0b" prot="private" virt="non-virtual"><scope>xlnt::color</scope><name>auto_color</name></member>
      <member refid="classxlnt_1_1color_1a93fdb682d39e017d2a3ea5617853e742" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>black</name></member>
      <member refid="classxlnt_1_1color_1a658c65ae7feb934798ad75da2c543578" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>blue</name></member>
      <member refid="classxlnt_1_1color_1a3d72edd877b4de50e84a6aa09cf63a6b" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>color</name></member>
      <member refid="classxlnt_1_1color_1abd3b4e35659f79944ecc30d8393c1239" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>color</name></member>
      <member refid="classxlnt_1_1color_1a20f9e73a2ed9029ef7518e2bcc8804b0" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>color</name></member>
      <member refid="classxlnt_1_1color_1a84f618cbe85c34fa31ce4ee45ac20baf" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>color</name></member>
      <member refid="classxlnt_1_1color_1a90e33cc4b7304241f175c691ce819e77" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>darkblue</name></member>
      <member refid="classxlnt_1_1color_1a733a7baabf11e6829276ff69ab2ddaf5" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>darkgreen</name></member>
      <member refid="classxlnt_1_1color_1a7febcd18b4058141be63aa94019b0a5d" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>darkred</name></member>
      <member refid="classxlnt_1_1color_1a0affcf6fd7b79f6644e7eb02d16403f9" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>darkyellow</name></member>
      <member refid="classxlnt_1_1color_1a58915420fadbe053ff648d10a49ea9ce" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>green</name></member>
      <member refid="classxlnt_1_1color_1a69514d21e25c23f2f9ef545e03a50a33" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>has_tint</name></member>
      <member refid="classxlnt_1_1color_1a8902a8d43844f58ec4a6cbcc267967ff" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>indexed</name></member>
      <member refid="classxlnt_1_1color_1ac784157db18a47dc601930fb4afe7cab" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>indexed</name></member>
      <member refid="classxlnt_1_1color_1a2308731d7e4cabd6540e37b947fd2711" prot="private" virt="non-virtual"><scope>xlnt::color</scope><name>indexed_</name></member>
      <member refid="classxlnt_1_1color_1a338f6fbaf37547a9d8119781299c46b0" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>operator!=</name></member>
      <member refid="classxlnt_1_1color_1ac658db87f407790d2e5205e0b748ad89" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>operator==</name></member>
      <member refid="classxlnt_1_1color_1a119bbab92440f4f4512423a8d1094e34" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>red</name></member>
      <member refid="classxlnt_1_1color_1a5c3740c4627f1d08f6326e5fc6472c10" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>rgb</name></member>
      <member refid="classxlnt_1_1color_1a9c3fcc4d1afc3ad9698bd0e771b4b6c5" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>rgb</name></member>
      <member refid="classxlnt_1_1color_1a6f195f9ccbcec5c75d4f3427b49b5064" prot="private" virt="non-virtual"><scope>xlnt::color</scope><name>rgb_</name></member>
      <member refid="classxlnt_1_1color_1a6cf90438083808e4146fde78c0755da4" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>theme</name></member>
      <member refid="classxlnt_1_1color_1a6be909d2418fe456bb66991037f2563c" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>theme</name></member>
      <member refid="classxlnt_1_1color_1a3b0a82cd800bd60e09ba06c3ebd15bd4" prot="private" virt="non-virtual"><scope>xlnt::color</scope><name>theme_</name></member>
      <member refid="classxlnt_1_1color_1ac20c39ff8955ea5b04d2a19ffd301f3a" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>tint</name></member>
      <member refid="classxlnt_1_1color_1a16de922ac187f04d9934ab2db6f6c9ca" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>tint</name></member>
      <member refid="classxlnt_1_1color_1a4167d2e19ca0edb607484d522ad902d7" prot="private" virt="non-virtual"><scope>xlnt::color</scope><name>tint_</name></member>
      <member refid="classxlnt_1_1color_1a949f9be4cf1afe147a443832773b3912" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>type</name></member>
      <member refid="classxlnt_1_1color_1a116d2949735d53c32c93730931ecf730" prot="private" virt="non-virtual"><scope>xlnt::color</scope><name>type_</name></member>
      <member refid="classxlnt_1_1color_1a2808376bd1eb70340b97142cdc5ff8c3" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>white</name></member>
      <member refid="classxlnt_1_1color_1adac1368210c149dd0cb01771bc5a5e05" prot="public" virt="non-virtual"><scope>xlnt::color</scope><name>yellow</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
