<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="classxlnt_1_1alignment" kind="class" language="C++" prot="public">
    <compoundname>xlnt::alignment</compoundname>
    <includes refid="alignment_8hpp" local="no">alignment.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classxlnt_1_1alignment_1af9248e2928851f669dbadaa16c682967" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::alignment::shrink_to_fit_</definition>
        <argsstring></argsstring>
        <name>shrink_to_fit_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether or not to shrink font size until it fits on one line </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="140" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1alignment_1ad603353450aa7b2216cd9b3b306577ba" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::alignment::wrap_text_</definition>
        <argsstring></argsstring>
        <name>wrap_text_</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>Whether or not to wrap text to the next line </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="145" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1alignment_1a2df3c9a9dad7302105ce86fe413b3d72" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; int &gt;</type>
        <definition>optional&lt;int&gt; xlnt::alignment::indent_</definition>
        <argsstring></argsstring>
        <name>indent_</name>
        <briefdescription>
<para>The indent in number of spaces from the side </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="150" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1alignment_1ae5eaf524968f85473d1e5b582e480ce4" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; int &gt;</type>
        <definition>optional&lt;int&gt; xlnt::alignment::text_rotation_</definition>
        <argsstring></argsstring>
        <name>text_rotation_</name>
        <briefdescription>
<para>The text roation in degrees </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="155" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1alignment_1a7abc1cde623a41561e92cad20d77f5e0" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; horizontal_alignment &gt;</type>
        <definition>optional&lt;horizontal_alignment&gt; xlnt::alignment::horizontal_</definition>
        <argsstring></argsstring>
        <name>horizontal_</name>
        <briefdescription>
<para>The horizontal alignment </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="160" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classxlnt_1_1alignment_1aaa37f76cd52b5cbd3845d3ee4cb069a8" prot="private" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; vertical_alignment &gt;</type>
        <definition>optional&lt;vertical_alignment&gt; xlnt::alignment::vertical_</definition>
        <argsstring></argsstring>
        <name>vertical_</name>
        <briefdescription>
<para>The vertical alignment </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="165" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classxlnt_1_1alignment_1ae01d66cc6ba111a66130dfcf2b47dd07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::alignment::shrink</definition>
        <argsstring>() const</argsstring>
        <name>shrink</name>
        <briefdescription>
<para>Returns true if shrink-to-fit has been enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="68" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1a74cc08c5cfff0d12839660ab8216e3df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref> &amp;</type>
        <definition>alignment &amp; xlnt::alignment::shrink</definition>
        <argsstring>(bool shrink_to_fit)</argsstring>
        <name>shrink</name>
        <param>
          <type>bool</type>
          <declname>shrink_to_fit</declname>
        </param>
        <briefdescription>
<para>Sets whether the font size should be reduced until all of the text fits in a cell without wrapping. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="73" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1aa4aa469b689cb63c2814db180d90ca5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::alignment::wrap</definition>
        <argsstring>() const</argsstring>
        <name>wrap</name>
        <briefdescription>
<para>Returns true if text-wrapping has been enabled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="78" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1a233d856dbf9a55b89082d8e20b57a014" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref> &amp;</type>
        <definition>alignment &amp; xlnt::alignment::wrap</definition>
        <argsstring>(bool wrap_text)</argsstring>
        <name>wrap</name>
        <param>
          <type>bool</type>
          <declname>wrap_text</declname>
        </param>
        <briefdescription>
<para>Sets whether text in a cell should continue to multiple lines if it doesn&apos;t fit in one line. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="83" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1a5323e1f88d22ef03e29e779a3bc3deb8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; int &gt;</type>
        <definition>optional&lt; int &gt; xlnt::alignment::indent</definition>
        <argsstring>() const</argsstring>
        <name>indent</name>
        <briefdescription>
<para>Returns the optional value of indentation width in number of spaces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="88" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1afbbcb3d37cb6aefd0247a8be3a00629d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref> &amp;</type>
        <definition>alignment &amp; xlnt::alignment::indent</definition>
        <argsstring>(int indent_size)</argsstring>
        <name>indent</name>
        <param>
          <type>int</type>
          <declname>indent_size</declname>
        </param>
        <briefdescription>
<para>Sets the indent size in number of spaces from the side of the cell. This will only take effect when left or right horizontal alignment has also been set. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="94" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1ac06b3f45edfa3df4987bc0beea825ff6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; int &gt;</type>
        <definition>optional&lt; int &gt; xlnt::alignment::rotation</definition>
        <argsstring>() const</argsstring>
        <name>rotation</name>
        <briefdescription>
<para>Returns the optional value of rotation for text in the cell in degrees. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="99" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1afac9294836d07a7053eba56f996c35b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref> &amp;</type>
        <definition>alignment &amp; xlnt::alignment::rotation</definition>
        <argsstring>(int text_rotation)</argsstring>
        <name>rotation</name>
        <param>
          <type>int</type>
          <declname>text_rotation</declname>
        </param>
        <briefdescription>
<para>Sets the rotation for text in the cell in degrees. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="104" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1acf398a33e4a57bc4a93ca4a99985624f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; horizontal_alignment &gt;</type>
        <definition>optional&lt; horizontal_alignment &gt; xlnt::alignment::horizontal</definition>
        <argsstring>() const</argsstring>
        <name>horizontal</name>
        <briefdescription>
<para>Returns the optional horizontal alignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="109" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1a8a16f376fd14fd6a1f4f54fb86b78a0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref> &amp;</type>
        <definition>alignment &amp; xlnt::alignment::horizontal</definition>
        <argsstring>(horizontal_alignment horizontal)</argsstring>
        <name>horizontal</name>
        <param>
          <type>horizontal_alignment</type>
          <declname>horizontal</declname>
        </param>
        <briefdescription>
<para>Sets the horizontal alignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="114" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="56" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1aa3d3fabbe73a1e293e49c342afd3fdec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; vertical_alignment &gt;</type>
        <definition>optional&lt; vertical_alignment &gt; xlnt::alignment::vertical</definition>
        <argsstring>() const</argsstring>
        <name>vertical</name>
        <briefdescription>
<para>Returns the optional vertical alignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="119" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1aee7c07b807365c1f9b3a3e87e0d0f792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref> &amp;</type>
        <definition>alignment &amp; xlnt::alignment::vertical</definition>
        <argsstring>(vertical_alignment vertical)</argsstring>
        <name>vertical</name>
        <param>
          <type>vertical_alignment</type>
          <declname>vertical</declname>
        </param>
        <briefdescription>
<para>Sets the vertical alignment. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="124" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1a68dddca969f42fbbfdad8830f25a3551" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::alignment::operator==</definition>
        <argsstring>(const alignment &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this alignment is equivalent to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="129" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="95" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classxlnt_1_1alignment_1a5d4d94a1913966a980a34ceaafc1577f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::alignment::operator!=</definition>
        <argsstring>(const alignment &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Returns true if this alignment is not equivalent to other. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="134" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/styles/alignment.cpp" bodystart="164" bodyend="167"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Alignment options that determine how text should be displayed within a cell. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" line="62" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/include/xlnt/styles/alignment.hpp" bodystart="63" bodyend="166"/>
    <listofallmembers>
      <member refid="classxlnt_1_1alignment_1acf398a33e4a57bc4a93ca4a99985624f" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>horizontal</name></member>
      <member refid="classxlnt_1_1alignment_1a8a16f376fd14fd6a1f4f54fb86b78a0b" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>horizontal</name></member>
      <member refid="classxlnt_1_1alignment_1a7abc1cde623a41561e92cad20d77f5e0" prot="private" virt="non-virtual"><scope>xlnt::alignment</scope><name>horizontal_</name></member>
      <member refid="classxlnt_1_1alignment_1a5323e1f88d22ef03e29e779a3bc3deb8" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>indent</name></member>
      <member refid="classxlnt_1_1alignment_1afbbcb3d37cb6aefd0247a8be3a00629d" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>indent</name></member>
      <member refid="classxlnt_1_1alignment_1a2df3c9a9dad7302105ce86fe413b3d72" prot="private" virt="non-virtual"><scope>xlnt::alignment</scope><name>indent_</name></member>
      <member refid="classxlnt_1_1alignment_1a5d4d94a1913966a980a34ceaafc1577f" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>operator!=</name></member>
      <member refid="classxlnt_1_1alignment_1a68dddca969f42fbbfdad8830f25a3551" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>operator==</name></member>
      <member refid="classxlnt_1_1alignment_1ac06b3f45edfa3df4987bc0beea825ff6" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>rotation</name></member>
      <member refid="classxlnt_1_1alignment_1afac9294836d07a7053eba56f996c35b6" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>rotation</name></member>
      <member refid="classxlnt_1_1alignment_1ae01d66cc6ba111a66130dfcf2b47dd07" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>shrink</name></member>
      <member refid="classxlnt_1_1alignment_1a74cc08c5cfff0d12839660ab8216e3df" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>shrink</name></member>
      <member refid="classxlnt_1_1alignment_1af9248e2928851f669dbadaa16c682967" prot="private" virt="non-virtual"><scope>xlnt::alignment</scope><name>shrink_to_fit_</name></member>
      <member refid="classxlnt_1_1alignment_1ae5eaf524968f85473d1e5b582e480ce4" prot="private" virt="non-virtual"><scope>xlnt::alignment</scope><name>text_rotation_</name></member>
      <member refid="classxlnt_1_1alignment_1aa3d3fabbe73a1e293e49c342afd3fdec" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>vertical</name></member>
      <member refid="classxlnt_1_1alignment_1aee7c07b807365c1f9b3a3e87e0d0f792" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>vertical</name></member>
      <member refid="classxlnt_1_1alignment_1aaa37f76cd52b5cbd3845d3ee4cb069a8" prot="private" virt="non-virtual"><scope>xlnt::alignment</scope><name>vertical_</name></member>
      <member refid="classxlnt_1_1alignment_1aa4aa469b689cb63c2814db180d90ca5b" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>wrap</name></member>
      <member refid="classxlnt_1_1alignment_1a233d856dbf9a55b89082d8e20b57a014" prot="public" virt="non-virtual"><scope>xlnt::alignment</scope><name>wrap</name></member>
      <member refid="classxlnt_1_1alignment_1ad603353450aa7b2216cd9b3b306577ba" prot="private" virt="non-virtual"><scope>xlnt::alignment</scope><name>wrap_text_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
