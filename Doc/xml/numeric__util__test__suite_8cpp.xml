<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="numeric__util__test__suite_8cpp" kind="file" language="C++">
    <compoundname>numeric_util_test_suite.cpp</compoundname>
    <includes refid="numeric_8hpp" local="no">xlnt/utils/numeric.hpp</includes>
    <includes refid="test__suite_8hpp" local="no">helpers/test_suite.hpp</includes>
    <incdepgraph>
      <node id="19">
        <label>xlnt/utils/exceptions.hpp</label>
        <link refid="exceptions_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>xlnt/xlnt_config.hpp</label>
        <link refid="xlnt__config_8hpp"/>
      </node>
      <node id="28">
        <label>helpers/xml_helper.hpp</label>
        <link refid="xml__helper_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>functional</label>
      </node>
      <node id="7">
        <label>limits</label>
      </node>
      <node id="54">
        <label>libstudxml/details/config.h</label>
        <link refid="config_8h"/>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>xlnt/worksheet/phonetic_pr.hpp</label>
        <link refid="phonetic__pr_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>iterator</label>
      </node>
      <node id="60">
        <label>libstudxml/version.hxx</label>
        <link refid="version_8hxx"/>
      </node>
      <node id="11">
        <label>cstdint</label>
      </node>
      <node id="39">
        <label>xlnt/cell/phonetic_run.hpp</label>
        <link refid="phonetic__run_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>xlnt/utils/numeric.hpp</label>
        <link refid="numeric_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>helpers/assertions.hpp</label>
        <link refid="assertions_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>libstudxml/details/expat/expat.h</label>
        <link refid="expat_8h"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>cmath</label>
      </node>
      <node id="5">
        <label>cassert</label>
      </node>
      <node id="58">
        <label>libstudxml/details/expat/expat_external.h</label>
        <link refid="expat__external_8h"/>
      </node>
      <node id="21">
        <label>xlnt/cell/index_types.hpp</label>
        <link refid="index__types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>stdexcept</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="36">
        <label>map</label>
      </node>
      <node id="62">
        <label>libstudxml/details/export.hxx</label>
        <link refid="export_8hxx"/>
      </node>
      <node id="38">
        <label>xlnt/cell/rich_text.hpp</label>
        <link refid="rich__text_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>libstudxml/forward.hxx</label>
        <link refid="forward_8hxx"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>unordered_set</label>
      </node>
      <node id="48">
        <label>libstudxml/details/pre.hxx</label>
        <link refid="pre_8hxx"/>
      </node>
      <node id="61">
        <label>libstudxml/qname.hxx</label>
        <link refid="qname_8hxx"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>xlnt/styles/color.hpp</label>
        <link refid="color_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>libstudxml/content.hxx</label>
        <link refid="content_8hxx"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>detail/external/include_libstudxml.hpp</label>
        <link refid="include__libstudxml_8hpp"/>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>exception</label>
      </node>
      <node id="70">
        <label>stddef.h</label>
      </node>
      <node id="24">
        <label>fstream</label>
      </node>
      <node id="45">
        <label>ostream</label>
      </node>
      <node id="43">
        <label>xlnt/utils/optional.hpp</label>
        <link refid="optional_8hpp"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>libstudxml/serializer.hxx</label>
        <link refid="serializer_8hxx"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>xlnt/workbook/workbook.hpp</label>
        <link refid="workbook_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>xlnt/packaging/uri.hpp</label>
        <link refid="uri_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>libstudxml/value-traits.hxx</label>
        <link refid="value-traits_8hxx"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>sys/param.h</label>
      </node>
      <node id="16">
        <label>vector</label>
      </node>
      <node id="49">
        <label>libstudxml/details/post.hxx</label>
        <link refid="post_8hxx"/>
      </node>
      <node id="15">
        <label>utility</label>
      </node>
      <node id="69">
        <label>libstudxml/details/genx/genx.h</label>
        <link refid="genx_8h"/>
        <childnode refid="70" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>array</label>
      </node>
      <node id="22">
        <label>helpers/path_helper.hpp</label>
        <link refid="path__helper_8hpp"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="71">
        <label>libstudxml/serializer.ixx</label>
        <link refid="serializer_8ixx"/>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>sstream</label>
      </node>
      <node id="1">
        <label>C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/tests/detail/numeric_util_test_suite.cpp</label>
        <link refid="numeric__util__test__suite_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>libstudxml/details/config.hxx</label>
        <link refid="config_8hxx"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>detail/serialization/zstream.hpp</label>
        <link refid="zstream_8hpp"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>libstudxml/parser.ixx</label>
        <link refid="parser_8ixx"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>xlnt/styles/font.hpp</label>
        <link refid="font_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>libstudxml/parser.txx</label>
      </node>
      <node id="51">
        <label>iosfwd</label>
      </node>
      <node id="66">
        <label>libstudxml/value-traits.txx</label>
      </node>
      <node id="13">
        <label>iostream</label>
      </node>
      <node id="52">
        <label>cstddef</label>
      </node>
      <node id="40">
        <label>xlnt/cell/rich_text_run.hpp</label>
        <link refid="rich__text__run_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>unordered_map</label>
      </node>
      <node id="72">
        <label>detail/serialization/vector_streambuf.hpp</label>
        <link refid="vector__streambuf_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>chrono</label>
      </node>
      <node id="50">
        <label>libstudxml/parser.hxx</label>
        <link refid="parser_8hxx"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>helpers/timing.hpp</label>
        <link refid="timing_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>type_traits</label>
      </node>
      <node id="32">
        <label>xlnt/packaging/relationship.hpp</label>
        <link refid="relationship_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>libstudxml/exception.hxx</label>
        <link refid="exception_8hxx"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>algorithm</label>
      </node>
      <node id="30">
        <label>xlnt/packaging/manifest.hpp</label>
        <link refid="manifest_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>xlnt/utils/path.hpp</label>
        <link refid="path_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>memory</label>
      </node>
      <node id="10">
        <label>helpers/test_suite.hpp</label>
        <link refid="test__suite_8hpp"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classnumeric__test__suite" prot="public">numeric_test_suite</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="numeric__util__test__suite_8cpp_1a8a6590c20849a67a2f4e8d682a54ad29" prot="public" static="yes" mutable="no">
        <type><ref refid="classnumeric__test__suite" kindref="compound">numeric_test_suite</ref></type>
        <definition>numeric_test_suite x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/tests/detail/numeric_util_test_suite.cpp" line="223" column="27" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/tests/detail/numeric_util_test_suite.cpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2014-2020<sp/>Thomas<sp/>Fussell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>WRISING<sp/>FROM,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@license:<sp/>http://www.opensource.org/licenses/mit-license.php</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>@author:<sp/>see<sp/>AUTHORS<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="numeric_8hpp" kindref="compound">xlnt/utils/numeric.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="test__suite_8hpp" kindref="compound">helpers/test_suite.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classnumeric__test__suite" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnumeric__test__suite" kindref="compound">numeric_test_suite</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtest__suite" kindref="compound">test_suite</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classnumeric__test__suite_1a0367e0a2f1349a5c0d138bf9393b9025" kindref="member">numeric_test_suite</ref>()</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classnumeric__test__suite_1a81e11c66332162da5c7d044e8a8ce009" kindref="member">test_serialise_number</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classnumeric__test__suite_1ae791429138189ce8d59ff7e07f4d6710" kindref="member">test_float_equals_zero</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classnumeric__test__suite_1a81587d45db7f0ba26e22ca50b1472a55" kindref="member">test_float_equals_large</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classnumeric__test__suite_1a537f3508e8cd101994c1982728ff3656" kindref="member">test_float_equals_fairness</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classnumeric__test__suite_1ae67d77f56a70a97c5a1649aab3443c2f" kindref="member">test_min</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classnumeric__test__suite_1abb30a4902cce2351f1b9c1f9d5897dfc" kindref="member">test_max</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__suite_8hpp_1a0bd0895f1a8ed5f61f9a64af5eec83f0" kindref="member">register_test</ref>(<ref refid="classnumeric__test__suite_1ab263af7ba413096702d4443898d9db2b" kindref="member">test_abs</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnumeric__test__suite_1a81e11c66332162da5c7d044e8a8ce009" kindref="member">test_serialise_number</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classxlnt_1_1detail_1_1number__serialiser" kindref="compound">xlnt::detail::number_serialiser</ref><sp/>serialiser;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>excel<sp/>serialises<sp/>numbers<sp/>as<sp/>floating<sp/>point<sp/>values<sp/>with<sp/>&lt;=<sp/>15<sp/>digits<sp/>of<sp/>precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(serialiser.<ref refid="classxlnt_1_1detail_1_1number__serialiser_1afca745e3f4fae51ba446a8fa37a04523" kindref="member">serialise</ref>(1)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>trailing<sp/>zeroes<sp/>are<sp/>ignored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(serialiser.<ref refid="classxlnt_1_1detail_1_1number__serialiser_1afca745e3f4fae51ba446a8fa37a04523" kindref="member">serialise</ref>(1.0)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(serialiser.<ref refid="classxlnt_1_1detail_1_1number__serialiser_1afca745e3f4fae51ba446a8fa37a04523" kindref="member">serialise</ref>(1.0f)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>to<sp/>1<sp/>relation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(serialiser.<ref refid="classxlnt_1_1detail_1_1number__serialiser_1afca745e3f4fae51ba446a8fa37a04523" kindref="member">serialise</ref>(1.23456)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1.23456&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(serialiser.<ref refid="classxlnt_1_1detail_1_1number__serialiser_1afca745e3f4fae51ba446a8fa37a04523" kindref="member">serialise</ref>(1.23456789012345)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1.23456789012345&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(serialiser.<ref refid="classxlnt_1_1detail_1_1number__serialiser_1afca745e3f4fae51ba446a8fa37a04523" kindref="member">serialise</ref>(123456.789012345)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;123456.789012345&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(serialiser.<ref refid="classxlnt_1_1detail_1_1number__serialiser_1afca745e3f4fae51ba446a8fa37a04523" kindref="member">serialise</ref>(1.23456789012345e+67)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1.23456789012345e+67&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(serialiser.<ref refid="classxlnt_1_1detail_1_1number__serialiser_1afca745e3f4fae51ba446a8fa37a04523" kindref="member">serialise</ref>(1.23456789012345e-67)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1.23456789012345e-67&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnumeric__test__suite_1ae791429138189ce8d59ff7e07f4d6710" kindref="member">test_float_equals_zero</ref>()</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>comparing<sp/>relatively<sp/>small<sp/>numbers<sp/>(2.3e-6)<sp/>with<sp/>0<sp/>will<sp/>be<sp/>true<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>comp_val<sp/>=<sp/>2.3e-6;<sp/></highlight><highlight class="comment">//<sp/>about<sp/>the<sp/>largest<sp/>difference<sp/>allowed<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(0.f<sp/>!=<sp/>comp_val);<sp/></highlight><highlight class="comment">//<sp/>fail<sp/>because<sp/>not<sp/>exactly<sp/>equal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(0.0,<sp/>comp_val));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(0.0,<sp/>-comp_val));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fail<sp/>because<sp/>diff<sp/>is<sp/>out<sp/>of<sp/>bounds<sp/>for<sp/>fuzzy<sp/>equality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(0.0,<sp/>comp_val<sp/>+<sp/>0.1e-6));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(0.0,<sp/>-(comp_val<sp/>+<sp/>0.1e-6)));</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>bounds<sp/>of<sp/>comparison<sp/>are<sp/>too<sp/>loose,<sp/>there<sp/>are<sp/>two<sp/>tweakable<sp/>knobs<sp/>to<sp/>tighten<sp/>the<sp/>comparison<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//==========================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#1:<sp/>reduce<sp/>the<sp/>epsilon_scale<sp/>(default<sp/>is<sp/>20)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>can<sp/>bring<sp/>the<sp/>range<sp/>down<sp/>to<sp/>FLT_EPSILON<sp/>(scale<sp/>factor<sp/>of<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(0.0,<sp/>comp_val,<sp/>10));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>closer_comp_val<sp/>=<sp/>1.1e-6;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(0.0,<sp/>closer_comp_val,<sp/>10));</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(0.0,<sp/>closer_comp_val<sp/>+<sp/>0.1e-6,<sp/>10));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(0.0,<sp/>-closer_comp_val,<sp/>10));</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(0.0,<sp/>-(closer_comp_val<sp/>+<sp/>0.1e-6),<sp/>10));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//==========================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#2:<sp/>specify<sp/>the<sp/>epsilon<sp/>source<sp/>as<sp/>a<sp/>higher<sp/>precision<sp/>type<sp/>(e.g.<sp/>double)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>makes<sp/>the<sp/>epsilon<sp/>range<sp/>quite<sp/>significantly<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>comp_val));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>closer_comp_val));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>tiny_comp_val<sp/>=<sp/>4.4e-15;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>tiny_comp_val));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>tiny_comp_val<sp/>+<sp/>0.1e-15));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>-tiny_comp_val));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>-(tiny_comp_val<sp/>+<sp/>0.1e-15)));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//==========================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#3:<sp/>combine<sp/>#1<sp/>&amp;<sp/>#2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>tightest<sp/>default<sp/>precision,<sp/>double<sp/>with<sp/>a<sp/>scale<sp/>of<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>comp_val,<sp/>1));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>closer_comp_val,<sp/>1));</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>tiny_comp_val,<sp/>1));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>really_tiny_comp_val<sp/>=<sp/>2.2e-16;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>limit<sp/>is<sp/>+/-<sp/>std::numeric_limits&lt;double&gt;::epsilon()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>really_tiny_comp_val,<sp/>1));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>really_tiny_comp_val<sp/>+<sp/>0.1e-16,<sp/>1));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>-really_tiny_comp_val,<sp/>1));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;double&gt;(0.0,<sp/>-(really_tiny_comp_val<sp/>+<sp/>0.1e-16),<sp/>1));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//==========================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>world<sp/>of<sp/>floats,<sp/>2.2e-16<sp/>is<sp/>still<sp/>significantly<sp/>different<sp/>to<sp/>0.f<sp/>(smallest<sp/>representable<sp/>float<sp/>is<sp/>around<sp/>1e-38)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>comparisons<sp/>are<sp/>known<sp/>to<sp/>involve<sp/>extremely<sp/>small<sp/>numbers<sp/>(such<sp/>that<sp/>+/-<sp/>2.2e-16<sp/>is<sp/>too<sp/>large<sp/>a<sp/>band),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>type<sp/>that<sp/>specialises<sp/>std::numeric_limits::epsilon<sp/>may<sp/>be<sp/>passed<sp/>as<sp/>the<sp/>first<sp/>template<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>type<sp/>itself<sp/>doesn&apos;t<sp/>actually<sp/>need<sp/>to<sp/>have<sp/>any<sp/>behaviour<sp/>as<sp/>it<sp/>is<sp/>only<sp/>used<sp/>as<sp/>the<sp/>source<sp/>for<sp/>epsilon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>struct<sp/>super_precise{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>std<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>template&lt;&gt;<sp/>numeric_limits&lt;super_precise&gt;<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>epsilon()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1e-30;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float_equals&lt;double&gt;(0.0,<sp/>2e-30,<sp/>1);<sp/>//<sp/>returns<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float_equals&lt;super_precise&gt;(0.0,<sp/>2e-30,<sp/>1);<sp/>//<sp/>returns<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnumeric__test__suite_1a81587d45db7f0ba26e22ca50b1472a55" kindref="member">test_float_equals_large</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>compare_to<sp/>=<sp/>20e6;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fp<sp/>math<sp/>with<sp/>arguments<sp/>of<sp/>different<sp/>magnitudes<sp/>is<sp/>wierd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(compare_to<sp/>==<sp/>compare_to<sp/>+<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>x<sp/>==<sp/>x<sp/>+<sp/>1<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(compare_to<sp/>!=<sp/>compare_to<sp/>+<sp/>10);<sp/></highlight><highlight class="comment">//<sp/>x<sp/>!=<sp/>x<sp/>+<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(compare_to<sp/>!=<sp/>compare_to<sp/>-<sp/>10);<sp/></highlight><highlight class="comment">//<sp/>x<sp/>!=<sp/>x<sp/>-<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>same<sp/>epsilon<sp/>was<sp/>used<sp/>for<sp/>comparison<sp/>of<sp/>large<sp/>values<sp/>as<sp/>the<sp/>values<sp/>around<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;d<sp/>have<sp/>all<sp/>the<sp/>issues<sp/>around<sp/>zero<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(compare_to,<sp/>compare_to<sp/>+<sp/>49));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(compare_to,<sp/>compare_to<sp/>+<sp/>50));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(compare_to,<sp/>compare_to<sp/>-<sp/>49));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(compare_to,<sp/>compare_to<sp/>-<sp/>50));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>float_equals<sp/>also<sp/>scales<sp/>epsilon<sp/>up<sp/>to<sp/>match<sp/>the<sp/>magnitude<sp/>of<sp/>its<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>the<sp/>same<sp/>options<sp/>are<sp/>available<sp/>for<sp/>increasing/decreasing<sp/>the<sp/>precision<sp/>of<sp/>the<sp/>comparison</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>however<sp/>the<sp/>the<sp/>epsilon<sp/>source<sp/>should<sp/>always<sp/>be<sp/>of<sp/>equal<sp/>or<sp/>lesser<sp/>precision<sp/>than<sp/>the<sp/>arguments<sp/>when<sp/>away<sp/>from<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnumeric__test__suite_1a7d17d0298065c1758985b9c7acc09022" kindref="member">test_float_equals_nan</ref>()</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nan<sp/>=<sp/>std::nan(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nans<sp/>always<sp/>compare<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(nan,<sp/>0.f));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(nan,<sp/>nan));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!<ref refid="namespacexlnt_1_1detail_1a36dec6eaaa5662d0b5a6644ce32312d1" kindref="member">xlnt::detail::float_equals</ref>(nan,<sp/>1000.f));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnumeric__test__suite_1a537f3508e8cd101994c1982728ff3656" kindref="member">test_float_equals_fairness</ref>()</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tests<sp/>for<sp/>parameter<sp/>ordering<sp/>dependency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(lhs<sp/>~=<sp/>rhs)<sp/>==<sp/>(rhs<sp/>~=<sp/>lhs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>test_val<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>test_diff_pass<sp/><sp/>=<sp/>1.192092e-07;<sp/></highlight><highlight class="comment">//<sp/>should<sp/>all<sp/>pass<sp/>with<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>test_diff<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1.192093e-07;<sp/></highlight><highlight class="comment">//<sp/>difference<sp/>enough<sp/>to<sp/>provide<sp/>different<sp/>results<sp/>if<sp/>the<sp/>comparison<sp/>is<sp/>not<sp/>&quot;fair&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>test_diff_fails<sp/>=<sp/>1.192094e-07;<sp/></highlight><highlight class="comment">//<sp/>should<sp/>all<sp/>fail<sp/>with<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test_diff_pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;float&gt;((test_val<sp/>+<sp/>test_diff_pass),<sp/>test_val,<sp/>1));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;float&gt;(test_val,<sp/>(test_val<sp/>+<sp/>test_diff_pass),<sp/>1));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;float&gt;(-(test_val<sp/>+<sp/>test_diff_pass),<sp/>-test_val,<sp/>1));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;float&gt;(-test_val,<sp/>-(test_val<sp/>+<sp/>test_diff_pass),<sp/>1));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test_diff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;float&gt;((test_val<sp/>+<sp/>test_diff),<sp/>test_val,<sp/>1));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;float&gt;(test_val,<sp/>(test_val<sp/>+<sp/>test_diff),<sp/>1));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;float&gt;(-(test_val<sp/>+<sp/>test_diff),<sp/>-test_val,<sp/>1));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(xlnt::detail::float_equals&lt;float&gt;(-test_val,<sp/>-(test_val<sp/>+<sp/>test_diff),<sp/>1));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test_diff_fails</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;float&gt;((test_val<sp/>+<sp/>test_diff_fails),<sp/>test_val,<sp/>1));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;float&gt;(test_val,<sp/>(test_val<sp/>+<sp/>test_diff_fails),<sp/>1));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;float&gt;(-(test_val<sp/>+<sp/>test_diff_fails),<sp/>-test_val,<sp/>1));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(!xlnt::detail::float_equals&lt;float&gt;(-test_val,<sp/>-(test_val<sp/>+<sp/>test_diff_fails),<sp/>1));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnumeric__test__suite_1ae67d77f56a70a97c5a1649aab3443c2f" kindref="member">test_min</ref>()</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(0,<sp/>1)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(1,<sp/>0)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(0.0,<sp/>1)<sp/>==<sp/>0.0);<sp/></highlight><highlight class="comment">//<sp/>comparisons<sp/>between<sp/>different<sp/>types<sp/>just<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(1,<sp/>0.0)<sp/>==<sp/>0.0);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negative<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(0,<sp/>-1)<sp/>==<sp/>-1.0);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(-1,<sp/>0)<sp/>==<sp/>-1.0);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(0.0,<sp/>-1)<sp/>==<sp/>-1.0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(-1,<sp/>0.0)<sp/>==<sp/>-1.0);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>zeroes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(10,<sp/>-10)<sp/>==<sp/>-10.0);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(-10,<sp/>10)<sp/>==<sp/>-10.0);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(10.0,<sp/>-10)<sp/>==<sp/>-10.0);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(-10,<sp/>10.0)<sp/>==<sp/>-10.0);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(<ref refid="namespacexlnt_1_1detail_1ab4626c34c3d8bbd270e96c4b8700ad4e" kindref="member">xlnt::detail::min</ref>(-10,<sp/>10.0)<sp/>==<sp/>-10.0,<sp/></highlight><highlight class="stringliteral">&quot;constexpr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnumeric__test__suite_1abb30a4902cce2351f1b9c1f9d5897dfc" kindref="member">test_max</ref>()</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simple</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(0,<sp/>1)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(1,<sp/>0)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(0.0,<sp/>1)<sp/>==<sp/>1.0);<sp/></highlight><highlight class="comment">//<sp/>comparisons<sp/>between<sp/>different<sp/>types<sp/>just<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(1,<sp/>0.0)<sp/>==<sp/>1.0);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negative<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(0,<sp/>-1)<sp/>==<sp/>0.0);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(-1,<sp/>0)<sp/>==<sp/>0.0);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(0.0,<sp/>-1)<sp/>==<sp/>0.0);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(-1,<sp/>0.0)<sp/>==<sp/>0.0);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>zeroes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(10,<sp/>-10)<sp/>==<sp/>10.0);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(-10,<sp/>10)<sp/>==<sp/>10.0);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(10.0,<sp/>-10)<sp/>==<sp/>10.0);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(-10,<sp/>10.0)<sp/>==<sp/>10.0);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(<ref refid="namespacexlnt_1_1detail_1afb41b740bceeaa00b0232737e784385c" kindref="member">xlnt::detail::max</ref>(-10,<sp/>10.0)<sp/>==<sp/>10.0,<sp/></highlight><highlight class="stringliteral">&quot;constexpr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnumeric__test__suite_1ab263af7ba413096702d4443898d9db2b" kindref="member">test_abs</ref>()</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ac82382bb50f7906b37c36ff203fbff23" kindref="member">xlnt::detail::abs</ref>(0)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ac82382bb50f7906b37c36ff203fbff23" kindref="member">xlnt::detail::abs</ref>(1)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ac82382bb50f7906b37c36ff203fbff23" kindref="member">xlnt::detail::abs</ref>(-1)<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ac82382bb50f7906b37c36ff203fbff23" kindref="member">xlnt::detail::abs</ref>(0.0)<sp/>==<sp/>0.0);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ac82382bb50f7906b37c36ff203fbff23" kindref="member">xlnt::detail::abs</ref>(1.5)<sp/>==<sp/>1.5);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="assertions_8hpp_1a8a16888c2ad6a9ed395f0178f96d2aaa" kindref="member">xlnt_assert</ref>(<ref refid="namespacexlnt_1_1detail_1ac82382bb50f7906b37c36ff203fbff23" kindref="member">xlnt::detail::abs</ref>(-1.5)<sp/>==<sp/>1.5);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(<ref refid="namespacexlnt_1_1detail_1ac82382bb50f7906b37c36ff203fbff23" kindref="member">xlnt::detail::abs</ref>(-1.23)<sp/>==<sp/>1.23,<sp/></highlight><highlight class="stringliteral">&quot;constexpr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classnumeric__test__suite" kindref="compound">numeric_test_suite</ref><sp/>x;</highlight></codeline>
    </programlisting>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/tests/detail/numeric_util_test_suite.cpp"/>
  </compounddef>
</doxygen>
