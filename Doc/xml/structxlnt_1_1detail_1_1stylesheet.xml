<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="structxlnt_1_1detail_1_1stylesheet" kind="struct" language="C++" prot="public">
    <compoundname>xlnt::detail::stylesheet</compoundname>
    <includes refid="stylesheet_8hpp" local="no">stylesheet.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1ae04291fa08da6671330e1032d4ec3580" prot="public" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1workbook" kindref="compound">workbook</ref> *</type>
        <definition>workbook* xlnt::detail::stylesheet::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="535" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="535" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1a01ec5f6d679b7ac18b88f189c3c03a81" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::detail::stylesheet::garbage_collection_enabled</definition>
        <argsstring></argsstring>
        <name>garbage_collection_enabled</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="556" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="556" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1a9acaa32eaf9f80d668747e4ed2897f5c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool xlnt::detail::stylesheet::known_fonts_enabled</definition>
        <argsstring></argsstring>
        <name>known_fonts_enabled</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="557" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="557" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1a69a9411b0f7f64da964fed7958765dd1" prot="public" static="no" mutable="no">
        <type>std::list&lt; <ref refid="structxlnt_1_1detail_1_1conditional__format__impl" kindref="compound">conditional_format_impl</ref> &gt;</type>
        <definition>std::list&lt;conditional_format_impl&gt; xlnt::detail::stylesheet::conditional_format_impls</definition>
        <argsstring></argsstring>
        <name>conditional_format_impls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="559" column="11" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="559" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1ad8aee1246dcc76fb7e58dd807dce4af4" prot="public" static="no" mutable="no">
        <type>std::list&lt; <ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> &gt;</type>
        <definition>std::list&lt;format_impl&gt; xlnt::detail::stylesheet::format_impls</definition>
        <argsstring></argsstring>
        <name>format_impls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="560" column="15" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1a79d83f22f7e328d6c8c54f311adff21f" prot="public" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, <ref refid="structxlnt_1_1detail_1_1style__impl" kindref="compound">style_impl</ref> &gt;</type>
        <definition>std::unordered_map&lt;std::string, style_impl&gt; xlnt::detail::stylesheet::style_impls</definition>
        <argsstring></argsstring>
        <name>style_impls</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="561" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1a238c1ae46974cabe77e4028e3babbe96" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; xlnt::detail::stylesheet::style_names</definition>
        <argsstring></argsstring>
        <name>style_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="562" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="562" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1a5bb81fa7154d01a7275368ca6d151c78" prot="public" static="no" mutable="no">
        <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; std::string &gt;</type>
        <definition>optional&lt;std::string&gt; xlnt::detail::stylesheet::default_slicer_style</definition>
        <argsstring></argsstring>
        <name>default_slicer_style</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="563" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="563" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1a22fd11549fe79bec9ceeb073217a303c" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref> &gt;</type>
        <definition>std::vector&lt;alignment&gt; xlnt::detail::stylesheet::alignments</definition>
        <argsstring></argsstring>
        <name>alignments</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="565" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="565" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1af3e058a7ee32a0ca1a1f6409dc5aaf1a" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classxlnt_1_1border" kindref="compound">border</ref> &gt;</type>
        <definition>std::vector&lt;border&gt; xlnt::detail::stylesheet::borders</definition>
        <argsstring></argsstring>
        <name>borders</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="566" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="566" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1afa4ec1a1589544b8f9ef50a86237a932" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classxlnt_1_1fill" kindref="compound">fill</ref> &gt;</type>
        <definition>std::vector&lt;fill&gt; xlnt::detail::stylesheet::fills</definition>
        <argsstring></argsstring>
        <name>fills</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="567" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="567" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1a4276fd8486b74e935bf3a5f642bc8aad" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classxlnt_1_1font" kindref="compound">font</ref> &gt;</type>
        <definition>std::vector&lt;font&gt; xlnt::detail::stylesheet::fonts</definition>
        <argsstring></argsstring>
        <name>fonts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="568" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="568" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1ab384f564c6ad15813cefda4f116f194f" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classxlnt_1_1number__format" kindref="compound">number_format</ref> &gt;</type>
        <definition>std::vector&lt;number_format&gt; xlnt::detail::stylesheet::number_formats</definition>
        <argsstring></argsstring>
        <name>number_formats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="569" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1a63066a2999438d41c0737249e5753a28" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classxlnt_1_1protection" kindref="compound">protection</ref> &gt;</type>
        <definition>std::vector&lt;protection&gt; xlnt::detail::stylesheet::protections</definition>
        <argsstring></argsstring>
        <name>protections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="570" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structxlnt_1_1detail_1_1stylesheet_1a78619ebabea15b5d3094133fafe4fc09" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classxlnt_1_1color" kindref="compound">color</ref> &gt;</type>
        <definition>std::vector&lt;color&gt; xlnt::detail::stylesheet::colors</definition>
        <argsstring></argsstring>
        <name>colors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="572" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="572" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a70b7679d978d78deb1ce5425c25175c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1format" kindref="compound">format</ref></type>
        <definition>class format xlnt::detail::stylesheet::create_format</definition>
        <argsstring>(bool default_format)</argsstring>
        <name>create_format</name>
        <param>
          <type>bool</type>
          <declname>default_format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="1" column="0" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="47" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a6449193862c330c6c87c8643125c9609" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1format" kindref="compound">xlnt::format</ref></type>
        <definition>class xlnt::format xlnt::detail::stylesheet::format</definition>
        <argsstring>(std::size_t index)</argsstring>
        <name>format</name>
        <param>
          <type>std::size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="1" column="0" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1aed2b985e45e1b5b4c0c0d6a329c7eb6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1style" kindref="compound">style</ref></type>
        <definition>class style xlnt::detail::stylesheet::create_style</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>create_style</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="1" column="0" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="68" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a98a28f5bc36cf8602dc3d17d04fd2498" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1style" kindref="compound">style</ref></type>
        <definition>class style xlnt::detail::stylesheet::create_builtin_style</definition>
        <argsstring>(const std::size_t builtin_id)</argsstring>
        <name>create_builtin_style</name>
        <param>
          <type>const std::size_t</type>
          <declname>builtin_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="1" column="0" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="84" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a464e58527e316581353ae906ffe8602a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>class <ref refid="classxlnt_1_1style" kindref="compound">style</ref></type>
        <definition>class style xlnt::detail::stylesheet::style</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>style</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="1" column="0" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a64f5513c2e83506a8b233c63d15f1280" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::detail::stylesheet::has_style</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>has_style</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="155" column="6" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a9ab3ba56af229f9bacef0d2691aa97c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t xlnt::detail::stylesheet::next_custom_number_format_id</definition>
        <argsstring>() const</argsstring>
        <name>next_custom_number_format_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="160" column="13" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="160" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1ab9a2a133638ad3ae987e48ce04747a2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename C</type>
          </param>
        </templateparamlist>
        <type>std::size_t</type>
        <definition>std::size_t xlnt::detail::stylesheet::find_or_add</definition>
        <argsstring>(C &amp;container, const T &amp;item)</argsstring>
        <name>find_or_add</name>
        <param>
          <type>C &amp;</type>
          <declname>container</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="176" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="176" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a9dee2b72b982d758d966d60c67c32552" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::unordered_map&lt; std::size_t, std::size_t &gt;</type>
        <definition>std::unordered_map&lt;std::size_t, std::size_t&gt; xlnt::detail::stylesheet::garbage_collect</definition>
        <argsstring>(const std::unordered_map&lt; std::size_t, std::size_t &gt; &amp;reference_counts, std::vector&lt; T &gt; &amp;container)</argsstring>
        <name>garbage_collect</name>
        <param>
          <type>const std::unordered_map&lt; std::size_t, std::size_t &gt; &amp;</type>
          <declname>reference_counts</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>container</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="191" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="191" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1ac9cf3952cb330a92adf9943355bdafed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::detail::stylesheet::garbage_collect</definition>
        <argsstring>()</argsstring>
        <name>garbage_collect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="213" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="213" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a67c085bec2d357c94eb16404d8a9cc90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
        <definition>format_impl* xlnt::detail::stylesheet::find_or_create</definition>
        <argsstring>(format_impl &amp;pattern)</argsstring>
        <name>find_or_create</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> &amp;</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="379" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="379" bodyend="408"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1af9b9c9ea43d03c29ffcb98521bf04127" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
        <definition>format_impl* xlnt::detail::stylesheet::find_or_create_with</definition>
        <argsstring>(format_impl *pattern, const std::string &amp;style_name)</argsstring>
        <name>find_or_create_with</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>style_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="410" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="410" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1aa16db05b4cc4e1d14144417713930bd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
        <definition>format_impl* xlnt::detail::stylesheet::find_or_create_with</definition>
        <argsstring>(format_impl *pattern, const alignment &amp;new_alignment, optional&lt; bool &gt; applied)</argsstring>
        <name>find_or_create_with</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1alignment" kindref="compound">alignment</ref> &amp;</type>
          <declname>new_alignment</declname>
        </param>
        <param>
          <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; bool &gt;</type>
          <declname>applied</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="421" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="421" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a2e40cb9ff994a4dc2e7ac73be0eb868b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
        <definition>format_impl* xlnt::detail::stylesheet::find_or_create_with</definition>
        <argsstring>(format_impl *pattern, const border &amp;new_border, optional&lt; bool &gt; applied)</argsstring>
        <name>find_or_create_with</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1border" kindref="compound">border</ref> &amp;</type>
          <declname>new_border</declname>
        </param>
        <param>
          <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; bool &gt;</type>
          <declname>applied</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="433" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="433" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1afac33d317ffef324d438f3cad316b410" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
        <definition>format_impl* xlnt::detail::stylesheet::find_or_create_with</definition>
        <argsstring>(format_impl *pattern, const fill &amp;new_fill, optional&lt; bool &gt; applied)</argsstring>
        <name>find_or_create_with</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1fill" kindref="compound">fill</ref> &amp;</type>
          <declname>new_fill</declname>
        </param>
        <param>
          <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; bool &gt;</type>
          <declname>applied</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="445" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="445" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1ac7ecc4fc6a40a466013e119d27887706" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
        <definition>format_impl* xlnt::detail::stylesheet::find_or_create_with</definition>
        <argsstring>(format_impl *pattern, const font &amp;new_font, optional&lt; bool &gt; applied)</argsstring>
        <name>find_or_create_with</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1font" kindref="compound">font</ref> &amp;</type>
          <declname>new_font</declname>
        </param>
        <param>
          <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; bool &gt;</type>
          <declname>applied</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="457" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="457" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a24284e106a64050df8c5742881257022" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
        <definition>format_impl* xlnt::detail::stylesheet::find_or_create_with</definition>
        <argsstring>(format_impl *pattern, const number_format &amp;new_number_format, optional&lt; bool &gt; applied)</argsstring>
        <name>find_or_create_with</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1number__format" kindref="compound">number_format</ref> &amp;</type>
          <declname>new_number_format</declname>
        </param>
        <param>
          <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; bool &gt;</type>
          <declname>applied</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="469" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="469" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a885babae4daabdee2d1d2c20a3f32546" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
        <definition>format_impl* xlnt::detail::stylesheet::find_or_create_with</definition>
        <argsstring>(format_impl *pattern, const protection &amp;new_protection, optional&lt; bool &gt; applied)</argsstring>
        <name>find_or_create_with</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1format__impl" kindref="compound">format_impl</ref> *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1protection" kindref="compound">protection</ref> &amp;</type>
          <declname>new_protection</declname>
        </param>
        <param>
          <type><ref refid="classxlnt_1_1optional" kindref="compound">optional</ref>&lt; bool &gt;</type>
          <declname>applied</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="485" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="485" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1af4c349d96e25723a6cc78ec48161c7d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t xlnt::detail::stylesheet::style_index</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>style_index</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="497" column="17" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="497" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1afc93889b8ca08dc4485d209c8cfcf66a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void xlnt::detail::stylesheet::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="503" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="503" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1ad8d893da6755f2e3d00fcf348ec86e0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classxlnt_1_1conditional__format" kindref="compound">conditional_format</ref></type>
        <definition>conditional_format xlnt::detail::stylesheet::add_conditional_format_rule</definition>
        <argsstring>(worksheet_impl *ws, const range_reference &amp;ref, const condition &amp;when)</argsstring>
        <name>add_conditional_format_rule</name>
        <param>
          <type><ref refid="structxlnt_1_1detail_1_1worksheet__impl" kindref="compound">worksheet_impl</ref> *</type>
          <declname>ws</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1range__reference" kindref="compound">range_reference</ref> &amp;</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>const <ref refid="classxlnt_1_1condition" kindref="compound">condition</ref> &amp;</type>
          <declname>when</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="521" column="20" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="521" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="structxlnt_1_1detail_1_1stylesheet_1a85d90f095d1b4e0ddd3a564de9c1d9f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool xlnt::detail::stylesheet::operator==</definition>
        <argsstring>(const stylesheet &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structxlnt_1_1detail_1_1stylesheet" kindref="compound">stylesheet</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="537" column="10" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="537" bodyend="554"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>xlnt::detail::stylesheet</label>
        <link refid="structxlnt_1_1detail_1_1stylesheet"/>
        <childnode refid="2" relation="usage">
          <edgelabel>default_slicer_style</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>xlnt::workbook</label>
        <link refid="classxlnt_1_1workbook"/>
      </node>
      <node id="2">
        <label>xlnt::optional&lt; std::string &gt;</label>
        <link refid="classxlnt_1_1optional"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" line="45" column="1" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/source/detail/implementations/stylesheet.hpp" bodystart="46" bodyend="573"/>
    <listofallmembers>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1ad8d893da6755f2e3d00fcf348ec86e0f" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>add_conditional_format_rule</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a22fd11549fe79bec9ceeb073217a303c" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>alignments</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1af3e058a7ee32a0ca1a1f6409dc5aaf1a" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>borders</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1afc93889b8ca08dc4485d209c8cfcf66a" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>clear</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a78619ebabea15b5d3094133fafe4fc09" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>colors</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a69a9411b0f7f64da964fed7958765dd1" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>conditional_format_impls</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a98a28f5bc36cf8602dc3d17d04fd2498" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>create_builtin_style</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a70b7679d978d78deb1ce5425c25175c2" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>create_format</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1aed2b985e45e1b5b4c0c0d6a329c7eb6c" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>create_style</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a5bb81fa7154d01a7275368ca6d151c78" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>default_slicer_style</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1afa4ec1a1589544b8f9ef50a86237a932" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>fills</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1ab9a2a133638ad3ae987e48ce04747a2f" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>find_or_add</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a67c085bec2d357c94eb16404d8a9cc90" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>find_or_create</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1af9b9c9ea43d03c29ffcb98521bf04127" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>find_or_create_with</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1aa16db05b4cc4e1d14144417713930bd5" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>find_or_create_with</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a2e40cb9ff994a4dc2e7ac73be0eb868b" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>find_or_create_with</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1afac33d317ffef324d438f3cad316b410" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>find_or_create_with</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1ac7ecc4fc6a40a466013e119d27887706" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>find_or_create_with</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a24284e106a64050df8c5742881257022" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>find_or_create_with</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a885babae4daabdee2d1d2c20a3f32546" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>find_or_create_with</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a4276fd8486b74e935bf3a5f642bc8aad" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>fonts</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a6449193862c330c6c87c8643125c9609" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>format</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1ad8aee1246dcc76fb7e58dd807dce4af4" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>format_impls</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a9dee2b72b982d758d966d60c67c32552" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>garbage_collect</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1ac9cf3952cb330a92adf9943355bdafed" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>garbage_collect</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a01ec5f6d679b7ac18b88f189c3c03a81" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>garbage_collection_enabled</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a64f5513c2e83506a8b233c63d15f1280" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>has_style</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a9acaa32eaf9f80d668747e4ed2897f5c" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>known_fonts_enabled</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a9ab3ba56af229f9bacef0d2691aa97c9" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>next_custom_number_format_id</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1ab384f564c6ad15813cefda4f116f194f" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>number_formats</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a85d90f095d1b4e0ddd3a564de9c1d9f5" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>operator==</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1ae04291fa08da6671330e1032d4ec3580" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>parent</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a63066a2999438d41c0737249e5753a28" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>protections</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a464e58527e316581353ae906ffe8602a" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>style</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a79d83f22f7e328d6c8c54f311adff21f" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>style_impls</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1af4c349d96e25723a6cc78ec48161c7d0" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>style_index</name></member>
      <member refid="structxlnt_1_1detail_1_1stylesheet_1a238c1ae46974cabe77e4028e3babbe96" prot="public" virt="non-virtual"><scope>xlnt::detail::stylesheet</scope><name>style_names</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
