<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="fr">
  <compounddef id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator" kind="struct" language="C++" prot="public">
    <compoundname>pybind11::detail::values_and_holders::iterator</compoundname>
    <includes refid="cast_8h" local="no">cast.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1aaa14e0e21902da9bc6ca661a6f4c231f" prot="private" static="no" mutable="no">
        <type><ref refid="structpybind11_1_1detail_1_1instance" kindref="compound">instance</ref> *</type>
        <definition>instance* pybind11::detail::values_and_holders::iterator::inst</definition>
        <argsstring></argsstring>
        <name>inst</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="313" column="18" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1ad40c381f911aa64ddeca988a2849d01d" prot="private" static="no" mutable="no">
        <type>const type_vec *</type>
        <definition>const type_vec* pybind11::detail::values_and_holders::iterator::types</definition>
        <argsstring></argsstring>
        <name>types</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="314" column="24" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1ac5ada3e4e7c7279f3df90f49868c4ef4" prot="private" static="no" mutable="no">
        <type><ref refid="structpybind11_1_1detail_1_1value__and__holder" kindref="compound">value_and_holder</ref></type>
        <definition>value_and_holder pybind11::detail::values_and_holders::iterator::curr</definition>
        <argsstring></argsstring>
        <name>curr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="315" column="26" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1a69240ad74e4283727c7dcb5c6fea589e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct values_and_holders</definition>
        <argsstring></argsstring>
        <name>values_and_holders</name>
        <param>
          <type><ref refid="structpybind11_1_1detail_1_1values__and__holders" kindref="compound">values_and_holders</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="316" column="9" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="316" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1a1d27943f822714ddb3190d3d390b2af6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pybind11::detail::values_and_holders::iterator::iterator</definition>
        <argsstring>(instance *inst, const type_vec *tinfo)</argsstring>
        <name>iterator</name>
        <param>
          <type><ref refid="structpybind11_1_1detail_1_1instance" kindref="compound">instance</ref> *</type>
          <declname>inst</declname>
        </param>
        <param>
          <type>const type_vec *</type>
          <declname>tinfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="317" column="9" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="317" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1a9620a47c985ec9b1da0080044f5fe1e9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>pybind11::detail::values_and_holders::iterator::iterator</definition>
        <argsstring>(size_t end)</argsstring>
        <name>iterator</name>
        <param>
          <type><ref refid="namespacepybind11_1a74292751b6fc8fe14d7c6772ae2fd0fc" kindref="member">size_t</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="325" column="9" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="325" bodyend="325"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1a6293e095309f13f9d0fd6ae1ff863aa0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pybind11::detail::values_and_holders::iterator::operator==</definition>
        <argsstring>(const iterator &amp;other)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="327" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="327" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1a55f13ee791496656321ff9dea8d61fb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool pybind11::detail::values_and_holders::iterator::operator!=</definition>
        <argsstring>(const iterator &amp;other)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="328" column="14" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="328" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1aa0efc33986f64cf4046777a6b7667362" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator" kindref="compound">iterator</ref> &amp;</type>
        <definition>iterator&amp; pybind11::detail::values_and_holders::iterator::operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="329" column="18" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="329" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1aecdc743d4442cf1d1eeffc3c1881c93a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structpybind11_1_1detail_1_1value__and__holder" kindref="compound">value_and_holder</ref> &amp;</type>
        <definition>value_and_holder&amp; pybind11::detail::values_and_holders::iterator::operator*</definition>
        <argsstring>()</argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="336" column="26" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="336" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1abc93ec482ab0eeb90f9cef5fcc157e1f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structpybind11_1_1detail_1_1value__and__holder" kindref="compound">value_and_holder</ref> *</type>
        <definition>value_and_holder* pybind11::detail::values_and_holders::iterator::operator-&gt;</definition>
        <argsstring>()</argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="337" column="26" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="337" bodyend="337"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" line="311" column="5" bodyfile="C:/Users/nouet/Documents/Cours/5A/Dev PRD/PrdCoprod/PrdCoprod/libs/xlnt-1.5.0/third-party/pybind11/include/pybind11/cast.h" bodystart="311" bodyend="338"/>
    <listofallmembers>
      <member refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1ac5ada3e4e7c7279f3df90f49868c4ef4" prot="private" virt="non-virtual"><scope>pybind11::detail::values_and_holders::iterator</scope><name>curr</name></member>
      <member refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1aaa14e0e21902da9bc6ca661a6f4c231f" prot="private" virt="non-virtual"><scope>pybind11::detail::values_and_holders::iterator</scope><name>inst</name></member>
      <member refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1a1d27943f822714ddb3190d3d390b2af6" prot="private" virt="non-virtual"><scope>pybind11::detail::values_and_holders::iterator</scope><name>iterator</name></member>
      <member refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1a9620a47c985ec9b1da0080044f5fe1e9" prot="private" virt="non-virtual"><scope>pybind11::detail::values_and_holders::iterator</scope><name>iterator</name></member>
      <member refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1a55f13ee791496656321ff9dea8d61fb9" prot="public" virt="non-virtual"><scope>pybind11::detail::values_and_holders::iterator</scope><name>operator!=</name></member>
      <member refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1aecdc743d4442cf1d1eeffc3c1881c93a" prot="public" virt="non-virtual"><scope>pybind11::detail::values_and_holders::iterator</scope><name>operator*</name></member>
      <member refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1aa0efc33986f64cf4046777a6b7667362" prot="public" virt="non-virtual"><scope>pybind11::detail::values_and_holders::iterator</scope><name>operator++</name></member>
      <member refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1abc93ec482ab0eeb90f9cef5fcc157e1f" prot="public" virt="non-virtual"><scope>pybind11::detail::values_and_holders::iterator</scope><name>operator-&gt;</name></member>
      <member refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1a6293e095309f13f9d0fd6ae1ff863aa0" prot="public" virt="non-virtual"><scope>pybind11::detail::values_and_holders::iterator</scope><name>operator==</name></member>
      <member refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1ad40c381f911aa64ddeca988a2849d01d" prot="private" virt="non-virtual"><scope>pybind11::detail::values_and_holders::iterator</scope><name>types</name></member>
      <member refid="structpybind11_1_1detail_1_1values__and__holders_1_1iterator_1a69240ad74e4283727c7dcb5c6fea589e" prot="private" virt="non-virtual"><scope>pybind11::detail::values_and_holders::iterator</scope><name>values_and_holders</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
